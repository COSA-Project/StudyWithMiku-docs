{"version":3,"file":"383-1312a0.js","mappings":"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KAET,IAAK,CACD,EAAK,gLACL,EAAK,KAET,IAAK,CACD,EAAK,iQACL,EAAK,KAET,IAAK,CACD,EAAK,sXACL,EAAK,KAET,EAAK,CACD,EAAK,+WACL,EAAK,KAET,EAAK,CACD,EAAK,ioBACL,EAAK,KAET,EAAK,CACD,EAAK,yQACL,EAAK,KAET,EAAK,CACD,EAAK,msBACL,EAAK,KAET,EAAK,CACD,EAAK,wXACL,EAAK,KAET,EAAK,CACD,EAAK,+TACL,EAAK,KAET,EAAK,CACD,EAAK,qVACL,EAAK,KAET,EAAK,CACD,EAAK,+RACL,EAAK,KAET,EAAK,CACD,EAAK,uHACL,EAAK,IAET,EAAK,CACD,EAAK,iLACL,EAAK,KAET,EAAK,CACD,EAAK,iVACL,EAAK,KAET,EAAK,CACD,EAAK,iNACL,EAAK,KAET,EAAK,CACD,EAAK,iWACL,EAAK,KAET,EAAK,CACD,EAAK,2PACL,EAAK,KAET,EAAK,CACD,EAAK,8SACL,EAAK,KAET,EAAK,CACD,EAAK,sUACL,EAAK,KAET,EAAK,CACD,EAAK,kcACL,EAAK,KAET,EAAK,CACD,EAAK,4bACL,EAAK,KAET,EAAK,CACD,EAAK,4TACL,EAAK,KAET,EAAK,CACD,EAAK,oPACL,EAAK,KAET,EAAK,CACD,EAAK,0RACL,EAAK,KAET,EAAK,CACD,EAAK,4QACL,EAAK,KAET,EAAK,CACD,EAAK,0WACL,EAAK,KAET,EAAK,CACD,EAAK,4RACL,EAAK,KAET,EAAK,CACD,EAAK,oNACL,EAAK,KAET,EAAK,CACD,EAAK,uRACL,EAAK,KAET,IAAK,CACD,EAAK,8LACL,EAAK,KAET,KAAM,CACF,EAAK,yHACL,EAAK,KAET,IAAK,CACD,EAAK,qOACL,EAAK,KAET,IAAK,CACD,EAAK,4HACL,EAAK,KAET,EAAK,CACD,EAAK,sGACL,EAAK,KAET,IAAK,CACD,EAAK,uFACL,EAAK,KAET,EAAK,CACD,EAAK,6KACL,EAAK,KAET,EAAK,CACD,EAAK,4VACL,EAAK,KAET,EAAK,CACD,EAAK,qJACL,EAAK,KAET,EAAK,CACD,EAAK,yOACL,EAAK,KAET,EAAK,CACD,EAAK,+OACL,EAAK,KAET,EAAK,CACD,EAAK,qQACL,EAAK,KAET,EAAK,CACD,EAAK,wXACL,EAAK,KAET,EAAK,CACD,EAAK,uQACL,EAAK,KAET,EAAK,CACD,EAAK,kJACL,EAAK,IAET,EAAK,CACD,EAAK,4MACL,EAAK,KAET,EAAK,CACD,EAAK,6PACL,EAAK,KAET,EAAK,CACD,EAAK,sHACL,EAAK,KAET,EAAK,CACD,EAAK,wRACL,EAAK,KAET,EAAK,CACD,EAAK,yJACL,EAAK,KAET,EAAK,CACD,EAAK,uJACL,EAAK,KAET,EAAK,CACD,EAAK,uTACL,EAAK,KAET,EAAK,CACD,EAAK,wRACL,EAAK,KAET,EAAK,CACD,EAAK,kJACL,EAAK,KAET,EAAK,CACD,EAAK,wPACL,EAAK,KAET,EAAK,CACD,EAAK,+OACL,EAAK,KAET,EAAK,CACD,EAAK,yKACL,EAAK,KAET,EAAK,CACD,EAAK,qJACL,EAAK,KAET,EAAK,CACD,EAAK,mOACL,EAAK,KAET,EAAK,CACD,EAAK,+PACL,EAAK,KAET,EAAK,CACD,EAAK,6PACL,EAAK,KAET,EAAK,CACD,EAAK,8NACL,EAAK,KAET,IAAK,CACD,EAAK,sTACL,EAAK,KAET,IAAK,CACD,EAAK,mIACL,EAAK,IAET,IAAK,CACD,EAAK,mQACL,EAAK,KAET,IAAK,CACD,EAAK,kKACL,EAAK,KAET,IAAU,CACN,EAAK,KAET,IAAU,CACN,EAAK,+MACL,EAAK,IAET,IAAU,CACN,EAAK,+QACL,EAAK,KAET,IAAU,CACN,EAAK,uZACL,EAAK,KAET,IAAU,CACN,EAAK,4YACL,EAAK,KAET,IAAU,CACN,EAAK,4YACL,EAAK,KAET,IAAU,CACN,EAAK,qaACL,EAAK,KAET,IAAU,CACN,EAAK,oVACL,EAAK,KAET,IAAU,CACN,EAAK,mIACL,EAAK,KAET,IAAU,CACN,EAAK,6TACL,EAAK,KAET,EAAU,CACN,EAAK,uIACL,EAAK,KAET,IAAU,CACN,EAAK,+SACL,EAAK,KAET,IAAU,CACN,EAAK,8LACL,EAAK,KAET,IAAU,CACN,EAAK,6VACL,EAAK,KAET,IAAU,CACN,EAAK,wGACL,EAAK,KAET,IAAU,CACN,EAAK,qIACL,EAAK,KAET,IAAU,CACN,EAAK,oOACL,EAAK,KAET,IAAU,CACN,EAAK,4FACL,EAAK,KAET,IAAU,CACN,EAAK,4UACL,EAAK,KAET,IAAU,CACN,EAAK,iKACL,EAAK,KAET,EAAU,CACN,EAAK,kHACL,EAAK,KAET,IAAU,CACN,EAAK,0RACL,EAAK,KAET,IAAU,CACN,EAAK,iTACL,EAAK,KAET,EAAU,CACN,EAAK,qWAET,EAAU,CACN,EAAK,uWAET,EAAU,CACN,EAAK,2ZAET,EAAU,CACN,EAAK,qcAET,EAAU,CACN,EAAK,+YAET,EAAU,CACN,EAAK,kZAET,EAAU,CACN,EAAK,8YACL,EAAK,KAET,EAAU,CACN,EAAK,uaACL,EAAK,KAET,EAAU,CACN,EAAK,mZACL,EAAK,KAET,EAAU,CACN,EAAK,0ZACL,EAAK,KAET,EAAU,CACN,EAAK,2cACL,EAAK,KAET,EAAU,CACN,EAAK,8bACL,EAAK,KAET,EAAU,CACN,EAAK,oMACL,EAAK,KAET,EAAU,CACN,EAAK,iMACL,EAAK,KAET,EAAU,CACN,EAAK,wPACL,EAAK,KAET,EAAU,CACN,EAAK,6OACL,EAAK,KAET,EAAU,CACN,EAAK,8aACL,EAAK,KAET,EAAU,CACN,EAAK,+TACL,EAAK,KAET,EAAU,CACN,EAAK,mUACL,EAAK,KAET,EAAU,CACN,EAAK,uUACL,EAAK,KAET,EAAU,CACN,EAAK,iaACL,EAAK,KAET,EAAU,CACN,EAAK,yWACL,EAAK,KAET,EAAU,CACN,EAAK,mXACL,EAAK,KAET,EAAU,CACN,EAAK,+SACL,EAAK,KAET,EAAU,CACN,EAAK,yRACL,EAAK,KAET,EAAU,CACN,EAAK,oVACL,EAAK,KAET,EAAU,CACN,EAAK,2VACL,EAAK,KAET,EAAU,CACN,EAAK,gUAET,EAAU,CACN,EAAK,mRACL,EAAK,KAET,EAAU,CACN,EAAK,qQACL,EAAK,KAET,EAAU,CACN,EAAK,2UACL,EAAK,KAET,EAAU,CACN,EAAK,oVACL,EAAK,KAET,EAAU,CACN,EAAK,4SACL,EAAK,KAET,EAAU,CACN,EAAK,kUACL,EAAK,KAET,EAAU,CACN,EAAK,2RACL,EAAK,KAET,EAAU,CACN,EAAK,oTACL,EAAK,KAET,EAAU,CACN,EAAK,kSACL,EAAK,KAET,EAAU,CACN,EAAK,uSACL,EAAK,KAET,EAAU,CACN,EAAK,yVACL,EAAK,KAET,EAAU,CACN,EAAK,oUACL,EAAK,KAET,EAAU,CACN,EAAK,2KACL,EAAK,KAET,EAAU,CACN,EAAK,+KACL,EAAK,KAET,EAAU,CACN,EAAK,gOACL,EAAK,KAET,EAAU,CACN,EAAK,qMACL,EAAK,KAET,EAAU,CACN,EAAK,gUACL,EAAK,KAET,EAAU,CACN,EAAK,iQACL,EAAK,KAET,EAAU,CACN,EAAK,+OACL,EAAK,KAET,EAAU,CACN,EAAK,kSACL,EAAK,KAET,EAAU,CACN,EAAK,iWACL,EAAK,KAET,EAAU,CACN,EAAK,0SACL,EAAK,KAET,IAAU,CACN,EAAK,yQACL,EAAK,KAET,EAAU,CACN,EAAK,6UACL,EAAK,KAET,EAAU,CACN,EAAK,2QACL,EAAK,KAET,EAAU,CACN,EAAK,gRACL,EAAK,KAET,EAAU,CACN,EAAK,iUACL,EAAK,KAET,EAAU,CACN,EAAK,sTACL,EAAK,KAET,EAAU,CACN,EAAK,6ZACL,EAAK,KAET,EAAU,CACN,EAAK,uFACL,EAAK,IAET,EAAU,CACN,EAAK,0cACL,EAAK,KAET,EAAU,CACN,EAAK,wWACL,EAAK,KAET,EAAU,CACN,EAAK,+TACL,EAAK,KAET,EAAU,CACN,EAAK,4SACL,EAAK,KAET,EAAU,CACN,EAAK,gKACL,EAAK,KAET,EAAU,CACN,EAAK,sGACL,EAAK,KAET,IAAU,CACN,EAAK,4GACL,EAAK,KAET,IAAU,CACN,EAAK,6DACL,EAAK,IAET,IAAU,CACN,EAAK,wIACL,EAAK,KAET,IAAU,CACN,EAAK,8KACL,EAAK,KAET,IAAU,CACN,EAAK,0LACL,EAAK,KAET,IAAU,CACN,EAAK,qOACL,EAAK,KAET,IAAU,CACN,EAAK,wGACL,EAAK,KAET,IAAU,CACN,EAAK,oIACL,EAAK,KAET,IAAU,CACN,EAAK,0FACL,EAAK,IAET,IAAU,CACN,EAAK,wGACL,EAAK,IAET,IAAU,CACN,EAAK,uFACL,EAAK,IAET,IAAU,CACN,EAAK,0MACL,EAAK,KAET,IAAU,CACN,EAAK,oMACL,EAAK,KAET,IAAU,CACN,EAAK,4KACL,EAAK,KAET,IAAU,CACN,EAAK,4JACL,EAAK,IAET,IAAU,CACN,EAAK,+NACL,EAAK,KAET,IAAU,CACN,EAAK,0EACL,EAAK,KAET,IAAU,CACN,EAAK,iLACL,EAAK,KAET,IAAU,CACN,EAAK,yuBACL,EAAK,KAET,IAAU,CACN,EAAK,mIACL,EAAK,KAET,IAAU,CACN,EAAK,yGACL,EAAK,KAET,IAAU,CACN,EAAK,2HACL,EAAK,KAET,IAAU,CACN,EAAK,6SACL,EAAK,KAET,IAAU,CACN,EAAK,uMACL,EAAK,KAET,IAAU,CACN,EAAK,iEACL,EAAK,IAET,IAAU,CACN,EAAK,4LACL,EAAK,KAET,IAAU,CACN,EAAK,4UACL,EAAK,KAET,IAAU,CACN,EAAK,qOACL,EAAK,KAET,IAAU,CACN,EAAK,wQACL,EAAK,KAET,IAAU,CACN,EAAK,kQACL,EAAK,KAET,IAAU,CACN,EAAK,qOACL,EAAK,KAET,IAAU,CACN,EAAK,kOACL,EAAK,KAET,IAAU,CACN,EAAK,mOACL,EAAK,aAYC,IAAXZ,GAAyC,oBAARtD,KACxC,MAAM,IAAIzP,MAAM,mDAGpB,GAAIC,EAAE2T,QAAQhW,EAAQkN,QAGlB,MAAM,IAAI9K,MAAM,8DAIpBpC,EAAQkN,OAAO+I,KAAOjW,EAAQkN,OAAOgJ,UAAYlW,EAAQkN,OAAOiJ,YAChEnW,EAAQkN,OAAOkJ,OAASpW,EAAQkN,OAAOmJ,YAAcrW,EAAQkN,OAAOoJ,cAMpEtW,EAAQM,UAAUd,QAAU,SAASN,EAAW+I,GAO5C,MAFAA,EAAU5F,EAAE8P,SAASlK,GAAW,GAJX,CACjBxI,MAAO,UAKGA,SAASO,EAAQkN,QAC3B,MAAM,IAAI9K,MAAM,sBAAwB6F,EAAQxI,OAIpD,IAAI8W,EAAMlU,EAAEmU,SAAStX,GAAaoF,SAASmS,eAAevX,GAAaA,EACvE,GAAY,OAARqX,IAAiBA,EAAIG,QACrB,MAAM,IAAItU,MAAM,sBAAwBlD,GAI5C,IAAIyX,EADQ3W,EAAQkN,OAAOjF,EAAQxI,QACzBQ,KAAMgI,GAAS,SAAS2O,GAC9BA,EAAQpH,KAAK+G,OASA,oBAAVM,UACGxQ,EASPwQ,QARGzB,GAAG0B,gBAAkB,SAAS7O,GAC5B,OAAOhI,KAAKwQ,MAAK,WACb,IAAIsG,EAAQ1Q,EAAEpG,MACV0M,EAAU3M,EAAQT,MAAMwX,EAAMhO,QAClCgO,EAAMC,KAAK,IACXrK,EAAQnN,QAAQS,KAAMgI,QASX,iBAARjB,MAAoBA,KAAKA,MAAQA,MAAQA,MACtC,iBAAV,EAAA2N,GAAsB,EAAAA,EAAOsC,QAAU,EAAAtC,GAAU,EAAAA,EAMpBuC,EAAOC,UACxCA,EAAUD,EAAOC,QAAUnX,GAE/BmX,EAAQnX,QAAUA,EA3qF1B","sources":["webpack://TopWritePlugins.sequence/./src/components/sequence.tsx","webpack://TopWritePlugins.sequence/./src/lib/sequence-diagram.js"],"sourcesContent":["import { GetComponentProps, styled } from 'topwrite';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nconst sequence = require('../lib/sequence-diagram.js');\r\n\r\nexport default function Sequence({ props: { value } }: GetComponentProps<'x-block'>) {\r\n\r\n    const container = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (container.current) {\r\n            container.current.innerHTML = '';\r\n\r\n            try {\r\n                const diagram = sequence.parse(value);\r\n\r\n                diagram.drawSVG(container.current, {\r\n                    theme: 'simple',\r\n                    'font-family': 'inherit'\r\n                });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    return <Container ref={container} />;\r\n}\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`;\r\n","/** js sequence diagrams 2.0.1\r\n *  https://bramp.github.io/js-sequence-diagrams/\r\n *  (c) 2012-2017 Andrew Brampton (bramp.net)\r\n *  @license Simplified BSD license.\r\n */\r\n(function() {\r\n    'use strict';\r\n    /*global Diagram */\r\n\r\n// The following are included by preprocessor */\r\n    /** js sequence diagrams\r\n     *  https://bramp.github.io/js-sequence-diagrams/\r\n     *  (c) 2012-2017 Andrew Brampton (bramp.net)\r\n     *  Simplified BSD license.\r\n     */\r\n    /*global grammar _ */\r\n\r\n    function Diagram() {\r\n        this.title   = undefined;\r\n        this.actors  = [];\r\n        this.signals = [];\r\n    }\r\n    /*\r\n     * Return an existing actor with this alias, or creates a new one with alias and name.\r\n     */\r\n    Diagram.prototype.getActor = function(alias, name) {\r\n        alias = alias.trim();\r\n\r\n        var i;\r\n        var actors = this.actors;\r\n        for (i in actors) {\r\n            if (actors[i].alias == alias) {\r\n                return actors[i];\r\n            }\r\n        }\r\n        i = actors.push(new Diagram.Actor(alias, (name || alias), actors.length));\r\n        return actors[ i - 1 ];\r\n    };\r\n\r\n    /*\r\n     * Parses the input as either a alias, or a \"name as alias\", and returns the corresponding actor.\r\n     */\r\n    Diagram.prototype.getActorWithAlias = function(input) {\r\n        input = input.trim();\r\n\r\n        // We are lazy and do some of the parsing in javascript :(. TODO move into the .jison file.\r\n        var s = /([\\s\\S]+) as (\\S+)$/im.exec(input);\r\n        var alias;\r\n        var name;\r\n        if (s) {\r\n            name  = s[1].trim();\r\n            alias = s[2].trim();\r\n        } else {\r\n            name = alias = input;\r\n        }\r\n        return this.getActor(alias, name);\r\n    };\r\n\r\n    Diagram.prototype.setTitle = function(title) {\r\n        this.title = title;\r\n    };\r\n\r\n    Diagram.prototype.addSignal = function(signal) {\r\n        this.signals.push(signal);\r\n    };\r\n\r\n    Diagram.Actor = function(alias, name, index) {\r\n        this.alias = alias;\r\n        this.name  = name;\r\n        this.index = index;\r\n    };\r\n\r\n    Diagram.Signal = function(actorA, signaltype, actorB, message) {\r\n        this.type       = 'Signal';\r\n        this.actorA     = actorA;\r\n        this.actorB     = actorB;\r\n        this.linetype   = signaltype & 3;\r\n        this.arrowtype  = (signaltype >> 2) & 3;\r\n        this.message    = message;\r\n    };\r\n\r\n    Diagram.Signal.prototype.isSelf = function() {\r\n        return this.actorA.index == this.actorB.index;\r\n    };\r\n\r\n    Diagram.Note = function(actor, placement, message) {\r\n        this.type      = 'Note';\r\n        this.actor     = actor;\r\n        this.placement = placement;\r\n        this.message   = message;\r\n\r\n        if (this.hasManyActors() && actor[0] == actor[1]) {\r\n            throw new Error('Note should be over two different actors');\r\n        }\r\n    };\r\n\r\n    Diagram.Note.prototype.hasManyActors = function() {\r\n        return _.isArray(this.actor);\r\n    };\r\n\r\n    Diagram.unescape = function(s) {\r\n        // Turn \"\\\\n\" into \"\\n\"\r\n        return s.trim().replace(/^\"(.*)\"$/m, '$1').replace(/\\\\n/gm, '\\n');\r\n    };\r\n\r\n    Diagram.LINETYPE = {\r\n        SOLID: 0,\r\n        DOTTED: 1\r\n    };\r\n\r\n    Diagram.ARROWTYPE = {\r\n        FILLED: 0,\r\n        OPEN: 1\r\n    };\r\n\r\n    Diagram.PLACEMENT = {\r\n        LEFTOF: 0,\r\n        RIGHTOF: 1,\r\n        OVER: 2\r\n    };\r\n\r\n// Some older browsers don't have getPrototypeOf, thus we polyfill it\r\n// https://github.com/bramp/js-sequence-diagrams/issues/57\r\n// https://github.com/zaach/jison/issues/194\r\n// Taken from http://ejohn.org/blog/objectgetprototypeof/\r\n    if (typeof Object.getPrototypeOf !== 'function') {\r\n        /* jshint -W103 */\r\n        if (typeof 'test'.__proto__ === 'object') {\r\n            Object.getPrototypeOf = function(object) {\r\n                return object.__proto__;\r\n            };\r\n        } else {\r\n            Object.getPrototypeOf = function(object) {\r\n                // May break if the constructor has been tampered with\r\n                return object.constructor.prototype;\r\n            };\r\n        }\r\n        /* jshint +W103 */\r\n    }\r\n\r\n    /** The following is included by preprocessor */\r\n    /* parser generated by jison 0.4.15 */\r\n    /*\r\n     Returns a Parser object of the following structure:\r\n\r\n     Parser: {\r\n     yy: {}\r\n     }\r\n\r\n     Parser.prototype: {\r\n     yy: {},\r\n     trace: function(),\r\n     symbols_: {associative list: name ==> number},\r\n     terminals_: {associative list: number ==> name},\r\n     productions_: [...],\r\n     performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n     table: [...],\r\n     defaultActions: {...},\r\n     parseError: function(str, hash),\r\n     parse: function(input),\r\n\r\n     lexer: {\r\n     EOF: 1,\r\n     parseError: function(str, hash),\r\n     setInput: function(input),\r\n     input: function(),\r\n     unput: function(str),\r\n     more: function(),\r\n     less: function(n),\r\n     pastInput: function(),\r\n     upcomingInput: function(),\r\n     showPosition: function(),\r\n     test_match: function(regex_match_array, rule_index),\r\n     next: function(),\r\n     lex: function(),\r\n     begin: function(condition),\r\n     popState: function(),\r\n     _currentRules: function(),\r\n     topState: function(),\r\n     pushState: function(condition),\r\n\r\n     options: {\r\n     ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n     flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n     backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n     },\r\n\r\n     performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n     rules: [...],\r\n     conditions: {associative list: name ==> set},\r\n     }\r\n     }\r\n\r\n\r\n     token location info (@$, _$, etc.): {\r\n     first_line: n,\r\n     last_line: n,\r\n     first_column: n,\r\n     last_column: n,\r\n     range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n     }\r\n\r\n\r\n     the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n     text:        (matched text)\r\n     token:       (the produced terminal token, if any)\r\n     line:        (yylineno)\r\n     }\r\n     while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n     loc:         (yylloc)\r\n     expected:    (string describing the set of expected tokens)\r\n     recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n     }\r\n     */\r\n    var parser = function() {\r\n        function Parser() {\r\n            this.yy = {};\r\n        }\r\n        var o = function(k, v, o, l) {\r\n            for (o = o || {}, l = k.length; l--; o[k[l]] = v) ;\r\n            return o;\r\n        }, $V0 = [ 5, 8, 9, 13, 15, 24 ], $V1 = [ 1, 13 ], $V2 = [ 1, 17 ], $V3 = [ 24, 29, 30 ], parser = {\r\n            trace: function() {},\r\n            yy: {},\r\n            symbols_: {\r\n                error: 2,\r\n                start: 3,\r\n                document: 4,\r\n                EOF: 5,\r\n                line: 6,\r\n                statement: 7,\r\n                NL: 8,\r\n                participant: 9,\r\n                actor_alias: 10,\r\n                signal: 11,\r\n                note_statement: 12,\r\n                title: 13,\r\n                message: 14,\r\n                note: 15,\r\n                placement: 16,\r\n                actor: 17,\r\n                over: 18,\r\n                actor_pair: 19,\r\n                \",\": 20,\r\n                left_of: 21,\r\n                right_of: 22,\r\n                signaltype: 23,\r\n                ACTOR: 24,\r\n                linetype: 25,\r\n                arrowtype: 26,\r\n                LINE: 27,\r\n                DOTLINE: 28,\r\n                ARROW: 29,\r\n                OPENARROW: 30,\r\n                MESSAGE: 31,\r\n                $accept: 0,\r\n                $end: 1\r\n            },\r\n            terminals_: {\r\n                2: \"error\",\r\n                5: \"EOF\",\r\n                8: \"NL\",\r\n                9: \"participant\",\r\n                13: \"title\",\r\n                15: \"note\",\r\n                18: \"over\",\r\n                20: \",\",\r\n                21: \"left_of\",\r\n                22: \"right_of\",\r\n                24: \"ACTOR\",\r\n                27: \"LINE\",\r\n                28: \"DOTLINE\",\r\n                29: \"ARROW\",\r\n                30: \"OPENARROW\",\r\n                31: \"MESSAGE\"\r\n            },\r\n            productions_: [ 0, [ 3, 2 ], [ 4, 0 ], [ 4, 2 ], [ 6, 1 ], [ 6, 1 ], [ 7, 2 ], [ 7, 1 ], [ 7, 1 ], [ 7, 2 ], [ 12, 4 ], [ 12, 4 ], [ 19, 1 ], [ 19, 3 ], [ 16, 1 ], [ 16, 1 ], [ 11, 4 ], [ 17, 1 ], [ 10, 1 ], [ 23, 2 ], [ 23, 1 ], [ 25, 1 ], [ 25, 1 ], [ 26, 1 ], [ 26, 1 ], [ 14, 1 ] ],\r\n            performAction: function(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\r\n                /* this == yyval */\r\n                var $0 = $$.length - 1;\r\n                switch (yystate) {\r\n                    case 1:\r\n                        return yy.parser.yy;\r\n\r\n                    case 4:\r\n                        break;\r\n\r\n                    case 6:\r\n                        $$[$0];\r\n                        break;\r\n\r\n                    case 7:\r\n                    case 8:\r\n                        yy.parser.yy.addSignal($$[$0]);\r\n                        break;\r\n\r\n                    case 9:\r\n                        yy.parser.yy.setTitle($$[$0]);\r\n                        break;\r\n\r\n                    case 10:\r\n                        this.$ = new Diagram.Note($$[$0 - 1], $$[$0 - 2], $$[$0]);\r\n                        break;\r\n\r\n                    case 11:\r\n                        this.$ = new Diagram.Note($$[$0 - 1], Diagram.PLACEMENT.OVER, $$[$0]);\r\n                        break;\r\n\r\n                    case 12:\r\n                    case 20:\r\n                        this.$ = $$[$0];\r\n                        break;\r\n\r\n                    case 13:\r\n                        this.$ = [ $$[$0 - 2], $$[$0] ];\r\n                        break;\r\n\r\n                    case 14:\r\n                        this.$ = Diagram.PLACEMENT.LEFTOF;\r\n                        break;\r\n\r\n                    case 15:\r\n                        this.$ = Diagram.PLACEMENT.RIGHTOF;\r\n                        break;\r\n\r\n                    case 16:\r\n                        this.$ = new Diagram.Signal($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0]);\r\n                        break;\r\n\r\n                    case 17:\r\n                        this.$ = yy.parser.yy.getActor(Diagram.unescape($$[$0]));\r\n                        break;\r\n\r\n                    case 18:\r\n                        this.$ = yy.parser.yy.getActorWithAlias(Diagram.unescape($$[$0]));\r\n                        break;\r\n\r\n                    case 19:\r\n                        this.$ = $$[$0 - 1] | $$[$0] << 2;\r\n                        break;\r\n\r\n                    case 21:\r\n                        this.$ = Diagram.LINETYPE.SOLID;\r\n                        break;\r\n\r\n                    case 22:\r\n                        this.$ = Diagram.LINETYPE.DOTTED;\r\n                        break;\r\n\r\n                    case 23:\r\n                        this.$ = Diagram.ARROWTYPE.FILLED;\r\n                        break;\r\n\r\n                    case 24:\r\n                        this.$ = Diagram.ARROWTYPE.OPEN;\r\n                        break;\r\n\r\n                    case 25:\r\n                        this.$ = Diagram.unescape($$[$0].substring(1));\r\n                }\r\n            },\r\n            table: [ o($V0, [ 2, 2 ], {\r\n                3: 1,\r\n                4: 2\r\n            }), {\r\n                1: [ 3 ]\r\n            }, {\r\n                5: [ 1, 3 ],\r\n                6: 4,\r\n                7: 5,\r\n                8: [ 1, 6 ],\r\n                9: [ 1, 7 ],\r\n                11: 8,\r\n                12: 9,\r\n                13: [ 1, 10 ],\r\n                15: [ 1, 12 ],\r\n                17: 11,\r\n                24: $V1\r\n            }, {\r\n                1: [ 2, 1 ]\r\n            }, o($V0, [ 2, 3 ]), o($V0, [ 2, 4 ]), o($V0, [ 2, 5 ]), {\r\n                10: 14,\r\n                24: [ 1, 15 ]\r\n            }, o($V0, [ 2, 7 ]), o($V0, [ 2, 8 ]), {\r\n                14: 16,\r\n                31: $V2\r\n            }, {\r\n                23: 18,\r\n                25: 19,\r\n                27: [ 1, 20 ],\r\n                28: [ 1, 21 ]\r\n            }, {\r\n                16: 22,\r\n                18: [ 1, 23 ],\r\n                21: [ 1, 24 ],\r\n                22: [ 1, 25 ]\r\n            }, o([ 20, 27, 28, 31 ], [ 2, 17 ]), o($V0, [ 2, 6 ]), o($V0, [ 2, 18 ]), o($V0, [ 2, 9 ]), o($V0, [ 2, 25 ]), {\r\n                17: 26,\r\n                24: $V1\r\n            }, {\r\n                24: [ 2, 20 ],\r\n                26: 27,\r\n                29: [ 1, 28 ],\r\n                30: [ 1, 29 ]\r\n            }, o($V3, [ 2, 21 ]), o($V3, [ 2, 22 ]), {\r\n                17: 30,\r\n                24: $V1\r\n            }, {\r\n                17: 32,\r\n                19: 31,\r\n                24: $V1\r\n            }, {\r\n                24: [ 2, 14 ]\r\n            }, {\r\n                24: [ 2, 15 ]\r\n            }, {\r\n                14: 33,\r\n                31: $V2\r\n            }, {\r\n                24: [ 2, 19 ]\r\n            }, {\r\n                24: [ 2, 23 ]\r\n            }, {\r\n                24: [ 2, 24 ]\r\n            }, {\r\n                14: 34,\r\n                31: $V2\r\n            }, {\r\n                14: 35,\r\n                31: $V2\r\n            }, {\r\n                20: [ 1, 36 ],\r\n                31: [ 2, 12 ]\r\n            }, o($V0, [ 2, 16 ]), o($V0, [ 2, 10 ]), o($V0, [ 2, 11 ]), {\r\n                17: 37,\r\n                24: $V1\r\n            }, {\r\n                31: [ 2, 13 ]\r\n            } ],\r\n            defaultActions: {\r\n                3: [ 2, 1 ],\r\n                24: [ 2, 14 ],\r\n                25: [ 2, 15 ],\r\n                27: [ 2, 19 ],\r\n                28: [ 2, 23 ],\r\n                29: [ 2, 24 ],\r\n                37: [ 2, 13 ]\r\n            },\r\n            parseError: function(str, hash) {\r\n                if (!hash.recoverable) throw new Error(str);\r\n                this.trace(str);\r\n            },\r\n            parse: function(input) {\r\n                function lex() {\r\n                    var token;\r\n                    return token = lexer.lex() || EOF, \"number\" != typeof token && (token = self.symbols_[token] || token),\r\n                        token;\r\n                }\r\n                var self = this, stack = [ 0 ], vstack = [ null ], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1, args = lstack.slice.call(arguments, 1), lexer = Object.create(this.lexer), sharedState = {\r\n                    yy: {}\r\n                };\r\n                for (var k in this.yy) Object.prototype.hasOwnProperty.call(this.yy, k) && (sharedState.yy[k] = this.yy[k]);\r\n                lexer.setInput(input, sharedState.yy), sharedState.yy.lexer = lexer, sharedState.yy.parser = this,\r\n                \"undefined\" == typeof lexer.yylloc && (lexer.yylloc = {});\r\n                var yyloc = lexer.yylloc;\r\n                lstack.push(yyloc);\r\n                var ranges = lexer.options && lexer.options.ranges;\r\n                \"function\" == typeof sharedState.yy.parseError ? this.parseError = sharedState.yy.parseError : this.parseError = Object.getPrototypeOf(this).parseError;\r\n                for (var symbol, preErrorSymbol, state, action, r, p, len, newState, expected, yyval = {}; ;) {\r\n                    if (state = stack[stack.length - 1], this.defaultActions[state] ? action = this.defaultActions[state] : (null !== symbol && \"undefined\" != typeof symbol || (symbol = lex()),\r\n                        action = table[state] && table[state][symbol]), \"undefined\" == typeof action || !action.length || !action[0]) {\r\n                        var errStr = \"\";\r\n                        expected = [];\r\n                        for (p in table[state]) this.terminals_[p] && p > TERROR && expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n                        errStr = lexer.showPosition ? \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\" : \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\"),\r\n                            this.parseError(errStr, {\r\n                                text: lexer.match,\r\n                                token: this.terminals_[symbol] || symbol,\r\n                                line: lexer.yylineno,\r\n                                loc: yyloc,\r\n                                expected: expected\r\n                            });\r\n                    }\r\n                    if (action[0] instanceof Array && action.length > 1) throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\r\n                    switch (action[0]) {\r\n                        case 1:\r\n                            stack.push(symbol), vstack.push(lexer.yytext), lstack.push(lexer.yylloc), stack.push(action[1]),\r\n                                symbol = null, preErrorSymbol ? (symbol = preErrorSymbol, preErrorSymbol = null) : (yyleng = lexer.yyleng,\r\n                                yytext = lexer.yytext, yylineno = lexer.yylineno, yyloc = lexer.yylloc, recovering > 0 && recovering--);\r\n                            break;\r\n\r\n                        case 2:\r\n                            if (len = this.productions_[action[1]][1], yyval.$ = vstack[vstack.length - len],\r\n                                yyval._$ = {\r\n                                    first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                                    last_line: lstack[lstack.length - 1].last_line,\r\n                                    first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                                    last_column: lstack[lstack.length - 1].last_column\r\n                                }, ranges && (yyval._$.range = [ lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1] ]),\r\n                                r = this.performAction.apply(yyval, [ yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack ].concat(args)),\r\n                            \"undefined\" != typeof r) return r;\r\n                            len && (stack = stack.slice(0, -1 * len * 2), vstack = vstack.slice(0, -1 * len),\r\n                                lstack = lstack.slice(0, -1 * len)), stack.push(this.productions_[action[1]][0]),\r\n                                vstack.push(yyval.$), lstack.push(yyval._$), newState = table[stack[stack.length - 2]][stack[stack.length - 1]],\r\n                                stack.push(newState);\r\n                            break;\r\n\r\n                        case 3:\r\n                            return !0;\r\n                    }\r\n                }\r\n                return !0;\r\n            }\r\n        }, lexer = function() {\r\n            var lexer = {\r\n                EOF: 1,\r\n                parseError: function(str, hash) {\r\n                    if (!this.yy.parser) throw new Error(str);\r\n                    this.yy.parser.parseError(str, hash);\r\n                },\r\n                // resets the lexer, sets new input\r\n                setInput: function(input, yy) {\r\n                    return this.yy = yy || this.yy || {}, this._input = input, this._more = this._backtrack = this.done = !1,\r\n                        this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = \"\", this.conditionStack = [ \"INITIAL\" ],\r\n                        this.yylloc = {\r\n                            first_line: 1,\r\n                            first_column: 0,\r\n                            last_line: 1,\r\n                            last_column: 0\r\n                        }, this.options.ranges && (this.yylloc.range = [ 0, 0 ]), this.offset = 0, this;\r\n                },\r\n                // consumes and returns one char from the input\r\n                input: function() {\r\n                    var ch = this._input[0];\r\n                    this.yytext += ch, this.yyleng++, this.offset++, this.match += ch, this.matched += ch;\r\n                    var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n                    return lines ? (this.yylineno++, this.yylloc.last_line++) : this.yylloc.last_column++,\r\n                    this.options.ranges && this.yylloc.range[1]++, this._input = this._input.slice(1),\r\n                        ch;\r\n                },\r\n                // unshifts one char (or a string) into the input\r\n                unput: function(ch) {\r\n                    var len = ch.length, lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n                    this._input = ch + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - len),\r\n                        //this.yyleng -= len;\r\n                        this.offset -= len;\r\n                    var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n                    this.match = this.match.substr(0, this.match.length - 1), this.matched = this.matched.substr(0, this.matched.length - 1),\r\n                    lines.length - 1 && (this.yylineno -= lines.length - 1);\r\n                    var r = this.yylloc.range;\r\n                    return this.yylloc = {\r\n                        first_line: this.yylloc.first_line,\r\n                        last_line: this.yylineno + 1,\r\n                        first_column: this.yylloc.first_column,\r\n                        last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\r\n                    }, this.options.ranges && (this.yylloc.range = [ r[0], r[0] + this.yyleng - len ]),\r\n                        this.yyleng = this.yytext.length, this;\r\n                },\r\n                // When called from action, caches matched text and appends it on next action\r\n                more: function() {\r\n                    return this._more = !0, this;\r\n                },\r\n                // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n                reject: function() {\r\n                    return this.options.backtrack_lexer ? (this._backtrack = !0, this) : this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                },\r\n                // retain first n characters of the match\r\n                less: function(n) {\r\n                    this.unput(this.match.slice(n));\r\n                },\r\n                // displays already matched input, i.e. for error messages\r\n                pastInput: function() {\r\n                    var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n                    return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\r\n                },\r\n                // displays upcoming input, i.e. for error messages\r\n                upcomingInput: function() {\r\n                    var next = this.match;\r\n                    return next.length < 20 && (next += this._input.substr(0, 20 - next.length)), (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\r\n                },\r\n                // displays the character position where the lexing error occurred, i.e. for error messages\r\n                showPosition: function() {\r\n                    var pre = this.pastInput(), c = new Array(pre.length + 1).join(\"-\");\r\n                    return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n                },\r\n                // test the lexed token: return FALSE when not a match, otherwise return token\r\n                test_match: function(match, indexed_rule) {\r\n                    var token, lines, backup;\r\n                    if (this.options.backtrack_lexer && (// save context\r\n                        backup = {\r\n                            yylineno: this.yylineno,\r\n                            yylloc: {\r\n                                first_line: this.yylloc.first_line,\r\n                                last_line: this.last_line,\r\n                                first_column: this.yylloc.first_column,\r\n                                last_column: this.yylloc.last_column\r\n                            },\r\n                            yytext: this.yytext,\r\n                            match: this.match,\r\n                            matches: this.matches,\r\n                            matched: this.matched,\r\n                            yyleng: this.yyleng,\r\n                            offset: this.offset,\r\n                            _more: this._more,\r\n                            _input: this._input,\r\n                            yy: this.yy,\r\n                            conditionStack: this.conditionStack.slice(0),\r\n                            done: this.done\r\n                        }, this.options.ranges && (backup.yylloc.range = this.yylloc.range.slice(0))), lines = match[0].match(/(?:\\r\\n?|\\n).*/g),\r\n                    lines && (this.yylineno += lines.length), this.yylloc = {\r\n                        first_line: this.yylloc.last_line,\r\n                        last_line: this.yylineno + 1,\r\n                        first_column: this.yylloc.last_column,\r\n                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\r\n                    }, this.yytext += match[0], this.match += match[0], this.matches = match, this.yyleng = this.yytext.length,\r\n                    this.options.ranges && (this.yylloc.range = [ this.offset, this.offset += this.yyleng ]),\r\n                        this._more = !1, this._backtrack = !1, this._input = this._input.slice(match[0].length),\r\n                        this.matched += match[0], token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]),\r\n                    this.done && this._input && (this.done = !1), token) return token;\r\n                    if (this._backtrack) {\r\n                        // recover context\r\n                        for (var k in backup) this[k] = backup[k];\r\n                        return !1;\r\n                    }\r\n                    return !1;\r\n                },\r\n                // return next match in input\r\n                next: function() {\r\n                    if (this.done) return this.EOF;\r\n                    this._input || (this.done = !0);\r\n                    var token, match, tempMatch, index;\r\n                    this._more || (this.yytext = \"\", this.match = \"\");\r\n                    for (var rules = this._currentRules(), i = 0; i < rules.length; i++) if (tempMatch = this._input.match(this.rules[rules[i]]),\r\n                    tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                        if (match = tempMatch, index = i, this.options.backtrack_lexer) {\r\n                            if (token = this.test_match(tempMatch, rules[i]), token !== !1) return token;\r\n                            if (this._backtrack) {\r\n                                match = !1;\r\n                                continue;\r\n                            }\r\n                            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                            return !1;\r\n                        }\r\n                        if (!this.options.flex) break;\r\n                    }\r\n                    return match ? (token = this.test_match(match, rules[index]), token !== !1 && token) : \"\" === this._input ? this.EOF : this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\r\n                        text: \"\",\r\n                        token: null,\r\n                        line: this.yylineno\r\n                    });\r\n                },\r\n                // return next match that has a token\r\n                lex: function() {\r\n                    var r = this.next();\r\n                    return r ? r : this.lex();\r\n                },\r\n                // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n                begin: function(condition) {\r\n                    this.conditionStack.push(condition);\r\n                },\r\n                // pop the previously active lexer condition state off the condition stack\r\n                popState: function() {\r\n                    var n = this.conditionStack.length - 1;\r\n                    return n > 0 ? this.conditionStack.pop() : this.conditionStack[0];\r\n                },\r\n                // produce the lexer rule set which is active for the currently active lexer condition state\r\n                _currentRules: function() {\r\n                    return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules;\r\n                },\r\n                // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n                topState: function(n) {\r\n                    return n = this.conditionStack.length - 1 - Math.abs(n || 0), n >= 0 ? this.conditionStack[n] : \"INITIAL\";\r\n                },\r\n                // alias for begin(condition)\r\n                pushState: function(condition) {\r\n                    this.begin(condition);\r\n                },\r\n                // return the number of states currently on the stack\r\n                stateStackSize: function() {\r\n                    return this.conditionStack.length;\r\n                },\r\n                options: {\r\n                    \"case-insensitive\": !0\r\n                },\r\n                performAction: function(yy, yy_, $avoiding_name_collisions, YY_START) {\r\n                    switch ($avoiding_name_collisions) {\r\n                        case 0:\r\n                            return 8;\r\n\r\n                        case 1:\r\n                            /* skip whitespace */\r\n                            break;\r\n\r\n                        case 2:\r\n                            /* skip comments */\r\n                            break;\r\n\r\n                        case 3:\r\n                            return 9;\r\n\r\n                        case 4:\r\n                            return 21;\r\n\r\n                        case 5:\r\n                            return 22;\r\n\r\n                        case 6:\r\n                            return 18;\r\n\r\n                        case 7:\r\n                            return 15;\r\n\r\n                        case 8:\r\n                            return 13;\r\n\r\n                        case 9:\r\n                            return 20;\r\n\r\n                        case 10:\r\n                            return 24;\r\n\r\n                        case 11:\r\n                            return 24;\r\n\r\n                        case 12:\r\n                            return 28;\r\n\r\n                        case 13:\r\n                            return 27;\r\n\r\n                        case 14:\r\n                            return 30;\r\n\r\n                        case 15:\r\n                            return 29;\r\n\r\n                        case 16:\r\n                            return 31;\r\n\r\n                        case 17:\r\n                            return 5;\r\n\r\n                        case 18:\r\n                            return \"INVALID\";\r\n                    }\r\n                },\r\n                rules: [ /^(?:[\\r\\n]+)/i, /^(?:\\s+)/i, /^(?:#[^\\r\\n]*)/i, /^(?:participant\\b)/i, /^(?:left of\\b)/i, /^(?:right of\\b)/i, /^(?:over\\b)/i, /^(?:note\\b)/i, /^(?:title\\b)/i, /^(?:,)/i, /^(?:[^\\->:,\\r\\n\"]+)/i, /^(?:\"[^\"]+\")/i, /^(?:--)/i, /^(?:-)/i, /^(?:>>)/i, /^(?:>)/i, /^(?:[^\\r\\n]+)/i, /^(?:$)/i, /^(?:.)/i ],\r\n                conditions: {\r\n                    INITIAL: {\r\n                        rules: [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 ],\r\n                        inclusive: !0\r\n                    }\r\n                }\r\n            };\r\n            return lexer;\r\n        }();\r\n        return parser.lexer = lexer, Parser.prototype = parser, parser.Parser = Parser,\r\n            new Parser();\r\n    }();\r\n\r\n    /*\r\n     \"undefined\" != typeof require && \"undefined\" != typeof exports && (exports.parser = parser,\r\n     exports.Parser = parser.Parser, exports.parse = function() {\r\n     return parser.parse.apply(parser, arguments);\r\n     }, exports.main = function(args) {\r\n     args[1] || (console.log(\"Usage: \" + args[0] + \" FILE\"), process.exit(1));\r\n     var source = require(\"fs\").readFileSync(require(\"path\").normalize(args[1]), \"utf8\");\r\n     return exports.parser.parse(source);\r\n     }, \"undefined\" != typeof module && require.main === module && exports.main(process.argv.slice(1)));\r\n     */\r\n    /**\r\n     * jison doesn't have a good exception, so we make one.\r\n     * This is brittle as it depends on jison internals\r\n     */\r\n    function ParseError(message, hash) {\r\n        _.extend(this, hash);\r\n\r\n        this.name = 'ParseError';\r\n        this.message = (message || '');\r\n    }\r\n    ParseError.prototype = new Error();\r\n    Diagram.ParseError = ParseError;\r\n\r\n    Diagram.parse = function(input) {\r\n        // TODO jison v0.4.17 changed their API slightly, so parser is no longer defined:\r\n\r\n        // Create the object to track state and deal with errors\r\n        parser.yy = new Diagram();\r\n        parser.yy.parseError = function(message, hash) {\r\n            throw new ParseError(message, hash);\r\n        };\r\n\r\n        // Parse\r\n        var diagram = parser.parse(input);\r\n\r\n        // Then clean up the parseError key that a user won't care about\r\n        delete diagram.parseError;\r\n        return diagram;\r\n    };\r\n\r\n\r\n    /** js sequence diagrams\r\n     *  https://bramp.github.io/js-sequence-diagrams/\r\n     *  (c) 2012-2017 Andrew Brampton (bramp.net)\r\n     *  Simplified BSD license.\r\n     */\r\n    /*global Diagram, _ */\r\n\r\n// Following the CSS convention\r\n// Margin is the gap outside the box\r\n// Padding is the gap inside the box\r\n// Each object has x/y/width/height properties\r\n// The x/y should be top left corner\r\n// width/height is with both margin and padding\r\n\r\n// TODO\r\n// Image width is wrong, when there is a note in the right hand col\r\n// Title box could look better\r\n// Note box could look better\r\n\r\n    var DIAGRAM_MARGIN = 10;\r\n\r\n    var ACTOR_MARGIN   = 10; // Margin around a actor\r\n    var ACTOR_PADDING  = 10; // Padding inside a actor\r\n\r\n    var SIGNAL_MARGIN  = 5; // Margin around a signal\r\n    var SIGNAL_PADDING = 5; // Padding inside a signal\r\n\r\n    var NOTE_MARGIN   = 10; // Margin around a note\r\n    var NOTE_PADDING  = 5; // Padding inside a note\r\n    var NOTE_OVERLAP  = 15; // Overlap when using a \"note over A,B\"\r\n\r\n    var TITLE_MARGIN   = 0;\r\n    var TITLE_PADDING  = 5;\r\n\r\n    var SELF_SIGNAL_WIDTH = 20; // How far out a self signal goes\r\n\r\n    var PLACEMENT = Diagram.PLACEMENT;\r\n    var LINETYPE  = Diagram.LINETYPE;\r\n    var ARROWTYPE = Diagram.ARROWTYPE;\r\n\r\n    var ALIGN_LEFT   = 0;\r\n    var ALIGN_CENTER = 1;\r\n\r\n    function AssertException(message) { this.message = message; }\r\n    AssertException.prototype.toString = function() {\r\n        return 'AssertException: ' + this.message;\r\n    };\r\n\r\n    function assert(exp, message) {\r\n        if (!exp) {\r\n            throw new AssertException(message);\r\n        }\r\n    }\r\n\r\n    if (!String.prototype.trim) {\r\n        String.prototype.trim = function() {\r\n            return this.replace(/^\\s+|\\s+$/g, '');\r\n        };\r\n    }\r\n\r\n    Diagram.themes = {};\r\n    function registerTheme(name, theme) {\r\n        Diagram.themes[name] = theme;\r\n    }\r\n\r\n    /******************\r\n     * Drawing extras\r\n     ******************/\r\n\r\n    function getCenterX(box) {\r\n        return box.x + box.width / 2;\r\n    }\r\n\r\n    function getCenterY(box) {\r\n        return box.y + box.height / 2;\r\n    }\r\n\r\n    /******************\r\n     * SVG Path extras\r\n     ******************/\r\n\r\n    function clamp(x, min, max) {\r\n        if (x < min) {\r\n            return min;\r\n        }\r\n        if (x > max) {\r\n            return max;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function wobble(x1, y1, x2, y2) {\r\n        assert(_.all([x1,x2,y1,y2], _.isFinite), 'x1,x2,y1,y2 must be numeric');\r\n\r\n        // Wobble no more than 1/25 of the line length\r\n        var factor = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / 25;\r\n\r\n        // Distance along line where the control points are\r\n        // Clamp between 20% and 80% so any arrow heads aren't angled too much\r\n        var r1 = clamp(Math.random(), 0.2, 0.8);\r\n        var r2 = clamp(Math.random(), 0.2, 0.8);\r\n\r\n        var xfactor = Math.random() > 0.5 ? factor : -factor;\r\n        var yfactor = Math.random() > 0.5 ? factor : -factor;\r\n\r\n        var p1 = {\r\n            x: (x2 - x1) * r1 + x1 + xfactor,\r\n            y: (y2 - y1) * r1 + y1 + yfactor\r\n        };\r\n\r\n        var p2 = {\r\n            x: (x2 - x1) * r2 + x1 - xfactor,\r\n            y: (y2 - y1) * r2 + y1 - yfactor\r\n        };\r\n\r\n        return 'C' + p1.x.toFixed(1) + ',' + p1.y.toFixed(1) + // start control point\r\n            ' ' + p2.x.toFixed(1) + ',' + p2.y.toFixed(1) + // end control point\r\n            ' ' + x2.toFixed(1) + ',' + y2.toFixed(1);      // end point\r\n    }\r\n\r\n    /**\r\n     * Draws a wobbly (hand drawn) rect\r\n     */\r\n    function handRect(x, y, w, h) {\r\n        assert(_.all([x, y, w, h], _.isFinite), 'x, y, w, h must be numeric');\r\n        return 'M' + x + ',' + y +\r\n            wobble(x, y, x + w, y) +\r\n            wobble(x + w, y, x + w, y + h) +\r\n            wobble(x + w, y + h, x, y + h) +\r\n            wobble(x, y + h, x, y);\r\n    }\r\n\r\n    /**\r\n     * Draws a wobbly (hand drawn) line\r\n     */\r\n    function handLine(x1, y1, x2, y2) {\r\n        assert(_.all([x1,x2,y1,y2], _.isFinite), 'x1,x2,y1,y2 must be numeric');\r\n        return 'M' + x1.toFixed(1) + ',' + y1.toFixed(1) + wobble(x1, y1, x2, y2);\r\n    }\r\n\r\n    /******************\r\n     * BaseTheme\r\n     ******************/\r\n\r\n    var BaseTheme = function(diagram, options) {\r\n        this.init(diagram, options);\r\n    };\r\n\r\n    _.extend(BaseTheme.prototype, {\r\n\r\n        // Init called while creating the Theme\r\n        init: function(diagram, options) {\r\n            this.diagram = diagram;\r\n\r\n            this.actorsHeight_  = 0;\r\n            this.signalsHeight_ = 0;\r\n            this.title_ = undefined; // hack - This should be somewhere better\r\n        },\r\n\r\n        setupPaper: function(container) {},\r\n\r\n        draw: function(container) {\r\n            this.setupPaper(container);\r\n\r\n            this.layout();\r\n\r\n            var titleHeight = this.title_ ? this.title_.height : 0;\r\n            var y = DIAGRAM_MARGIN + titleHeight;\r\n\r\n            this.drawTitle();\r\n            this.drawActors(y);\r\n            this.drawSignals(y + this.actorsHeight_);\r\n        },\r\n\r\n        layout: function() {\r\n            // Local copies\r\n            var diagram = this.diagram;\r\n            var font    = this.font_;\r\n            var actors  = diagram.actors;\r\n            var signals = diagram.signals;\r\n\r\n            diagram.width  = 0; // min width\r\n            diagram.height = 0; // min height\r\n\r\n            // Setup some layout stuff\r\n            if (diagram.title) {\r\n                var title = this.title_ = {};\r\n                var bb = this.textBBox(diagram.title, font);\r\n                title.textBB = bb;\r\n                title.message = diagram.title;\r\n\r\n                title.width  = bb.width  + (TITLE_PADDING + TITLE_MARGIN) * 2;\r\n                title.height = bb.height + (TITLE_PADDING + TITLE_MARGIN) * 2;\r\n                title.x = DIAGRAM_MARGIN;\r\n                title.y = DIAGRAM_MARGIN;\r\n\r\n                diagram.width  += title.width;\r\n                diagram.height += title.height;\r\n            }\r\n\r\n            _.each(actors, function(a) {\r\n                var bb = this.textBBox(a.name, font);\r\n                a.textBB = bb;\r\n\r\n                a.x = 0; a.y = 0;\r\n                a.width  = bb.width  + (ACTOR_PADDING + ACTOR_MARGIN) * 2;\r\n                a.height = bb.height + (ACTOR_PADDING + ACTOR_MARGIN) * 2;\r\n\r\n                a.distances = [];\r\n                a.paddingRight = 0;\r\n                this.actorsHeight_ = Math.max(a.height, this.actorsHeight_);\r\n            }, this);\r\n\r\n            function actorEnsureDistance(a, b, d) {\r\n                assert(a < b, 'a must be less than or equal to b');\r\n\r\n                if (a < 0) {\r\n                    // Ensure b has left margin\r\n                    b = actors[b];\r\n                    b.x = Math.max(d - b.width / 2, b.x);\r\n                } else if (b >= actors.length) {\r\n                    // Ensure a has right margin\r\n                    a = actors[a];\r\n                    a.paddingRight = Math.max(d, a.paddingRight);\r\n                } else {\r\n                    a = actors[a];\r\n                    a.distances[b] = Math.max(d, a.distances[b] ? a.distances[b] : 0);\r\n                }\r\n            }\r\n\r\n            _.each(signals, function(s) {\r\n                // Indexes of the left and right actors involved\r\n                var a;\r\n                var b;\r\n\r\n                var bb = this.textBBox(s.message, font);\r\n\r\n                //var bb = t.attr(\"text\", s.message).getBBox();\r\n                s.textBB = bb;\r\n                s.width   = bb.width;\r\n                s.height  = bb.height;\r\n\r\n                var extraWidth = 0;\r\n\r\n                if (s.type == 'Signal') {\r\n\r\n                    s.width  += (SIGNAL_MARGIN + SIGNAL_PADDING) * 2;\r\n                    s.height += (SIGNAL_MARGIN + SIGNAL_PADDING) * 2;\r\n\r\n                    if (s.isSelf()) {\r\n                        // TODO Self signals need a min height\r\n                        a = s.actorA.index;\r\n                        b = a + 1;\r\n                        s.width += SELF_SIGNAL_WIDTH;\r\n                    } else {\r\n                        a = Math.min(s.actorA.index, s.actorB.index);\r\n                        b = Math.max(s.actorA.index, s.actorB.index);\r\n                    }\r\n\r\n                } else if (s.type == 'Note') {\r\n                    s.width  += (NOTE_MARGIN + NOTE_PADDING) * 2;\r\n                    s.height += (NOTE_MARGIN + NOTE_PADDING) * 2;\r\n\r\n                    // HACK lets include the actor's padding\r\n                    extraWidth = 2 * ACTOR_MARGIN;\r\n\r\n                    if (s.placement == PLACEMENT.LEFTOF) {\r\n                        b = s.actor.index;\r\n                        a = b - 1;\r\n                    } else if (s.placement == PLACEMENT.RIGHTOF) {\r\n                        a = s.actor.index;\r\n                        b = a + 1;\r\n                    } else if (s.placement == PLACEMENT.OVER && s.hasManyActors()) {\r\n                        // Over multiple actors\r\n                        a = Math.min(s.actor[0].index, s.actor[1].index);\r\n                        b = Math.max(s.actor[0].index, s.actor[1].index);\r\n\r\n                        // We don't need our padding, and we want to overlap\r\n                        extraWidth = -(NOTE_PADDING * 2 + NOTE_OVERLAP * 2);\r\n\r\n                    } else if (s.placement == PLACEMENT.OVER) {\r\n                        // Over single actor\r\n                        a = s.actor.index;\r\n                        actorEnsureDistance(a - 1, a, s.width / 2);\r\n                        actorEnsureDistance(a, a + 1, s.width / 2);\r\n                        this.signalsHeight_ += s.height;\r\n\r\n                        return; // Bail out early\r\n                    }\r\n                } else {\r\n                    throw new Error('Unhandled signal type:' + s.type);\r\n                }\r\n\r\n                actorEnsureDistance(a, b, s.width + extraWidth);\r\n                this.signalsHeight_ += s.height;\r\n            }, this);\r\n\r\n            // Re-jig the positions\r\n            var actorsX = 0;\r\n            _.each(actors, function(a) {\r\n                a.x = Math.max(actorsX, a.x);\r\n\r\n                // TODO This only works if we loop in sequence, 0, 1, 2, etc\r\n                _.each(a.distances, function(distance, b) {\r\n                    // lodash (and possibly others) do not like sparse arrays\r\n                    // so sometimes they return undefined\r\n                    if (typeof distance == 'undefined') {\r\n                        return;\r\n                    }\r\n\r\n                    b = actors[b];\r\n                    distance = Math.max(distance, a.width / 2, b.width / 2);\r\n                    b.x = Math.max(b.x, a.x + a.width / 2 + distance - b.width / 2);\r\n                });\r\n\r\n                actorsX = a.x + a.width + a.paddingRight;\r\n            }, this);\r\n\r\n            diagram.width = Math.max(actorsX, diagram.width);\r\n\r\n            // TODO Refactor a little\r\n            diagram.width  += 2 * DIAGRAM_MARGIN;\r\n            diagram.height += 2 * DIAGRAM_MARGIN + 2 * this.actorsHeight_ + this.signalsHeight_;\r\n\r\n            return this;\r\n        },\r\n\r\n        // TODO Instead of one textBBox function, create a function for each element type, e.g\r\n        //      layout_title, layout_actor, etc that returns it's bounding box\r\n        textBBox: function(text, font) {},\r\n\r\n        drawTitle: function() {\r\n            var title = this.title_;\r\n            if (title) {\r\n                this.drawTextBox(title, title.message, TITLE_MARGIN, TITLE_PADDING, this.font_, ALIGN_LEFT);\r\n            }\r\n        },\r\n\r\n        drawActors: function(offsetY) {\r\n            var y = offsetY;\r\n            _.each(this.diagram.actors, function(a) {\r\n                // Top box\r\n                this.drawActor(a, y, this.actorsHeight_);\r\n\r\n                // Bottom box\r\n                this.drawActor(a, y + this.actorsHeight_ + this.signalsHeight_, this.actorsHeight_);\r\n\r\n                // Veritical line\r\n                var aX = getCenterX(a);\r\n                this.drawLine(\r\n                    aX, y + this.actorsHeight_ - ACTOR_MARGIN,\r\n                    aX, y + this.actorsHeight_ + ACTOR_MARGIN + this.signalsHeight_);\r\n            }, this);\r\n        },\r\n\r\n        drawActor: function(actor, offsetY, height) {\r\n            actor.y      = offsetY;\r\n            actor.height = height;\r\n            this.drawTextBox(actor, actor.name, ACTOR_MARGIN, ACTOR_PADDING, this.font_, ALIGN_CENTER);\r\n        },\r\n\r\n        drawSignals: function(offsetY) {\r\n            var y = offsetY;\r\n            _.each(this.diagram.signals, function(s) {\r\n                // TODO Add debug mode, that draws padding/margin box\r\n                if (s.type == 'Signal') {\r\n                    if (s.isSelf()) {\r\n                        this.drawSelfSignal(s, y);\r\n                    } else {\r\n                        this.drawSignal(s, y);\r\n                    }\r\n\r\n                } else if (s.type == 'Note') {\r\n                    this.drawNote(s, y);\r\n                }\r\n\r\n                y += s.height;\r\n            }, this);\r\n        },\r\n\r\n        drawSelfSignal: function(signal, offsetY) {\r\n            assert(signal.isSelf(), 'signal must be a self signal');\r\n\r\n            var textBB = signal.textBB;\r\n            var aX = getCenterX(signal.actorA);\r\n\r\n            var x = aX + SELF_SIGNAL_WIDTH + SIGNAL_PADDING;\r\n            var y = offsetY + SIGNAL_PADDING + signal.height / 2 + textBB.y;\r\n\r\n            this.drawText(x, y, signal.message, this.font_, ALIGN_LEFT);\r\n\r\n            var y1 = offsetY + SIGNAL_MARGIN + SIGNAL_PADDING;\r\n            var y2 = y1 + signal.height - 2 * SIGNAL_MARGIN - SIGNAL_PADDING;\r\n\r\n            // Draw three lines, the last one with a arrow\r\n            this.drawLine(aX, y1, aX + SELF_SIGNAL_WIDTH, y1, signal.linetype);\r\n            this.drawLine(aX + SELF_SIGNAL_WIDTH, y1, aX + SELF_SIGNAL_WIDTH, y2, signal.linetype);\r\n            this.drawLine(aX + SELF_SIGNAL_WIDTH, y2, aX, y2, signal.linetype, signal.arrowtype);\r\n        },\r\n\r\n        drawSignal: function(signal, offsetY) {\r\n            var aX = getCenterX(signal.actorA);\r\n            var bX = getCenterX(signal.actorB);\r\n\r\n            // Mid point between actors\r\n            var x = (bX - aX) / 2 + aX;\r\n            var y = offsetY + SIGNAL_MARGIN + 2 * SIGNAL_PADDING;\r\n\r\n            // Draw the text in the middle of the signal\r\n            this.drawText(x, y, signal.message, this.font_, ALIGN_CENTER);\r\n\r\n            // Draw the line along the bottom of the signal\r\n            y = offsetY + signal.height - SIGNAL_MARGIN - SIGNAL_PADDING;\r\n            this.drawLine(aX, y, bX, y, signal.linetype, signal.arrowtype);\r\n        },\r\n\r\n        drawNote: function(note, offsetY) {\r\n            note.y = offsetY;\r\n            var actorA = note.hasManyActors() ? note.actor[0] : note.actor;\r\n            var aX = getCenterX(actorA);\r\n            switch (note.placement) {\r\n                case PLACEMENT.RIGHTOF:\r\n                    note.x = aX + ACTOR_MARGIN;\r\n                    break;\r\n                case PLACEMENT.LEFTOF:\r\n                    note.x = aX - ACTOR_MARGIN - note.width;\r\n                    break;\r\n                case PLACEMENT.OVER:\r\n                    if (note.hasManyActors()) {\r\n                        var bX = getCenterX(note.actor[1]);\r\n                        var overlap = NOTE_OVERLAP + NOTE_PADDING;\r\n                        note.x = Math.min(aX, bX) - overlap;\r\n                        note.width = (Math.max(aX, bX) + overlap) - note.x;\r\n                    } else {\r\n                        note.x = aX - note.width / 2;\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new Error('Unhandled note placement: ' + note.placement);\r\n            }\r\n            return this.drawTextBox(note, note.message, NOTE_MARGIN, NOTE_PADDING, this.font_, ALIGN_LEFT);\r\n        },\r\n\r\n        /**\r\n         * Draw text surrounded by a box\r\n         */\r\n        drawTextBox: function(box, text, margin, padding, font, align) {\r\n            var x = box.x + margin;\r\n            var y = box.y + margin;\r\n            var w = box.width  - 2 * margin;\r\n            var h = box.height - 2 * margin;\r\n\r\n            // Draw inner box\r\n            this.drawRect(x, y, w, h);\r\n\r\n            // Draw text (in the center)\r\n            if (align == ALIGN_CENTER) {\r\n                x = getCenterX(box);\r\n                y = getCenterY(box);\r\n            } else {\r\n                x += padding;\r\n                y += padding;\r\n            }\r\n\r\n            return this.drawText(x, y, text, font, align);\r\n        }\r\n    });\r\n\r\n    /** js sequence diagrams\r\n     *  https://bramp.github.io/js-sequence-diagrams/\r\n     *  (c) 2012-2017 Andrew Brampton (bramp.net)\r\n     *  Simplified BSD license.\r\n     */\r\n    /*global Diagram, Snap, WebFont _ */\r\n// TODO Move defintion of font onto the <svg>, so it can easily be override at each level\r\n    if (typeof Snap != 'undefined') {\r\n\r\n        var xmlns = 'http://www.w3.org/2000/svg';\r\n\r\n        var LINE = {\r\n            'stroke': '#000000',\r\n            'stroke-width': 2, // BUG TODO This gets set as a style, not as a attribute. Look at  eve.on(\"snap.util.attr\"...\r\n            'fill': 'none'\r\n        };\r\n\r\n        var RECT = {\r\n            'stroke': '#000000',\r\n            'stroke-width': 2,\r\n            'fill': '#fff'\r\n        };\r\n\r\n        var LOADED_FONTS = {};\r\n\r\n        /******************\r\n         * SnapTheme\r\n         ******************/\r\n\r\n        var SnapTheme = function(diagram, options, resume) {\r\n            _.defaults(options, {\r\n                'css-class': 'simple',\r\n                'font-size': 16,\r\n                'font-family': 'Andale Mono, monospace'\r\n            });\r\n\r\n            this.init(diagram, options, resume);\r\n        };\r\n\r\n        _.extend(SnapTheme.prototype, BaseTheme.prototype, {\r\n\r\n            init: function(diagram, options, resume) {\r\n                BaseTheme.prototype.init.call(this, diagram);\r\n\r\n                this.paper_  = undefined;\r\n                this.cssClass_ = options['css-class'] || undefined;\r\n                this.font_ = {\r\n                    'font-size': options['font-size'],\r\n                    'font-family': options['font-family']\r\n                };\r\n\r\n                var a = this.arrowTypes_ = {};\r\n                a[ARROWTYPE.FILLED] = 'Block';\r\n                a[ARROWTYPE.OPEN]   = 'Open';\r\n\r\n                var l = this.lineTypes_ = {};\r\n                l[LINETYPE.SOLID]  = '';\r\n                l[LINETYPE.DOTTED] = '6,2';\r\n\r\n                var that = this;\r\n                this.waitForFont(function() {\r\n                    resume(that);\r\n                });\r\n            },\r\n\r\n            // Wait for loading of the font\r\n            waitForFont: function(callback) {\r\n                var fontFamily = this.font_['font-family'];\r\n\r\n                if (typeof WebFont == 'undefined') {\r\n                    throw new Error('WebFont is required (https://github.com/typekit/webfontloader).');\r\n                }\r\n\r\n                if (LOADED_FONTS[fontFamily]) {\r\n                    // If already loaded, just return instantly.\r\n                    callback();\r\n                    return;\r\n                }\r\n\r\n                WebFont.load({\r\n                    custom: {\r\n                        families: [fontFamily] // TODO replace this with something that reads the css\r\n                    },\r\n                    classes: false, // No need to place classes on the DOM, just use JS Events\r\n                    active: function() {\r\n                        LOADED_FONTS[fontFamily] = true;\r\n                        callback();\r\n                    },\r\n                    inactive: function() {\r\n                        // If we fail to fetch the font, still continue.\r\n                        LOADED_FONTS[fontFamily] = true;\r\n                        callback();\r\n                    }\r\n                });\r\n            },\r\n\r\n            addDescription: function(svg, description) {\r\n                var desc = document.createElementNS(xmlns, 'desc');\r\n                desc.appendChild(document.createTextNode(description));\r\n                svg.appendChild(desc);\r\n            },\r\n\r\n            setupPaper: function(container) {\r\n                // Container must be a SVG element. We assume it's a div, so lets create a SVG and insert\r\n                var svg = document.createElementNS(xmlns, 'svg');\r\n                container.appendChild(svg);\r\n\r\n                this.addDescription(svg, this.diagram.title || '');\r\n\r\n                this.paper_ = Snap(svg);\r\n                this.paper_.addClass('sequence');\r\n\r\n                if (this.cssClass_) {\r\n                    this.paper_.addClass(this.cssClass_);\r\n                }\r\n\r\n                this.beginGroup();\r\n\r\n                // TODO Perhaps only include the markers if we actually use them.\r\n                var a = this.arrowMarkers_ = {};\r\n                var arrow = this.paper_.path('M 0 0 L 5 2.5 L 0 5 z');\r\n                a[ARROWTYPE.FILLED] = arrow.marker(0, 0, 5, 5, 5, 2.5)\r\n                    .attr({id: 'markerArrowBlock'});\r\n\r\n                arrow = this.paper_.path('M 9.6,8 1.92,16 0,13.7 5.76,8 0,2.286 1.92,0 9.6,8 z');\r\n                a[ARROWTYPE.OPEN] = arrow.marker(0, 0, 9.6, 16, 9.6, 8)\r\n                    .attr({markerWidth: '4', id: 'markerArrowOpen'});\r\n            },\r\n\r\n            layout: function() {\r\n                BaseTheme.prototype.layout.call(this);\r\n                this.paper_.attr({\r\n                    width:  this.diagram.width + 'px',\r\n                    height: this.diagram.height + 'px'\r\n                });\r\n            },\r\n\r\n            textBBox: function(text, font) {\r\n                // TODO getBBox will return the bounds with any whitespace/kerning. This makes some of our aligments screwed up\r\n                var t = this.createText(text, font);\r\n                var bb = t.getBBox();\r\n                t.remove();\r\n                return bb;\r\n            },\r\n\r\n            // For each drawn element, push onto the stack, so it can be wrapped in a single outer element\r\n            pushToStack: function(element) {\r\n                this._stack.push(element);\r\n                return element;\r\n            },\r\n\r\n            // Begin a group of elements\r\n            beginGroup: function() {\r\n                this._stack = [];\r\n            },\r\n\r\n            // Finishes the group, and returns the <group> element\r\n            finishGroup: function() {\r\n                var g = this.paper_.group.apply(this.paper_, this._stack);\r\n                this.beginGroup(); // Reset the group\r\n                return g;\r\n            },\r\n\r\n            createText: function(text, font) {\r\n                text = _.invoke(text.split('\\n'), 'trim');\r\n                var t = this.paper_.text(0, 0, text);\r\n                t.attr(font || {});\r\n                if (text.length > 1) {\r\n                    // Every row after the first, set tspan to be 1.2em below the previous line\r\n                    t.selectAll('tspan:nth-child(n+2)').attr({\r\n                        dy: '1.2em',\r\n                        x: 0\r\n                    });\r\n                }\r\n\r\n                return t;\r\n            },\r\n\r\n            drawLine: function(x1, y1, x2, y2, linetype, arrowhead) {\r\n                var line = this.paper_.line(x1, y1, x2, y2).attr(LINE);\r\n                if (linetype !== undefined) {\r\n                    line.attr('strokeDasharray', this.lineTypes_[linetype]);\r\n                }\r\n                if (arrowhead !== undefined) {\r\n                    line.attr('markerEnd', this.arrowMarkers_[arrowhead]);\r\n                }\r\n                return this.pushToStack(line);\r\n            },\r\n\r\n            drawRect: function(x, y, w, h) {\r\n                var rect = this.paper_.rect(x, y, w, h).attr(RECT);\r\n                return this.pushToStack(rect);\r\n            },\r\n\r\n            /**\r\n             * Draws text with a optional white background\r\n             * x,y (int) x,y top left point of the text, or the center of the text (depending on align param)\r\n             * text (string) text to print\r\n             * font (Object)\r\n             * align (string) ALIGN_LEFT or ALIGN_CENTER\r\n             */\r\n            drawText: function(x, y, text, font, align) {\r\n                var t = this.createText(text, font);\r\n                var bb = t.getBBox();\r\n\r\n                if (align == ALIGN_CENTER) {\r\n                    x = x - bb.width / 2;\r\n                    y = y - bb.height / 2;\r\n                }\r\n\r\n                // Now move the text into place\r\n                // `y - bb.y` because text(..) is positioned from the baseline, so this moves it down.\r\n                t.attr({x: x - bb.x, y: y - bb.y});\r\n                t.selectAll('tspan').attr({x: x});\r\n\r\n                this.pushToStack(t);\r\n                return t;\r\n            },\r\n\r\n            drawTitle: function() {\r\n                this.beginGroup();\r\n                BaseTheme.prototype.drawTitle.call(this);\r\n                return this.finishGroup().addClass('title');\r\n            },\r\n\r\n            drawActor: function(actor, offsetY, height) {\r\n                this.beginGroup();\r\n                BaseTheme.prototype.drawActor.call(this, actor, offsetY, height);\r\n                return this.finishGroup().addClass('actor');\r\n            },\r\n\r\n            drawSignal: function(signal, offsetY) {\r\n                this.beginGroup();\r\n                BaseTheme.prototype.drawSignal.call(this, signal, offsetY);\r\n                return this.finishGroup().addClass('signal');\r\n            },\r\n\r\n            drawSelfSignal: function(signal, offsetY) {\r\n                this.beginGroup();\r\n                BaseTheme.prototype.drawSelfSignal.call(this, signal, offsetY);\r\n                return this.finishGroup().addClass('signal');\r\n            },\r\n\r\n            drawNote: function(note, offsetY) {\r\n                this.beginGroup();\r\n                BaseTheme.prototype.drawNote.call(this, note, offsetY);\r\n                return this.finishGroup().addClass('note');\r\n            },\r\n        });\r\n\r\n        /******************\r\n         * SnapHandTheme\r\n         ******************/\r\n\r\n        var SnapHandTheme = function(diagram, options, resume) {\r\n            _.defaults(options, {\r\n                'css-class': 'hand',\r\n                'font-size': 16,\r\n                'font-family': 'danielbd'\r\n            });\r\n\r\n            this.init(diagram, options, resume);\r\n        };\r\n\r\n        // Take the standard SnapTheme and make all the lines wobbly\r\n        _.extend(SnapHandTheme.prototype, SnapTheme.prototype, {\r\n            drawLine: function(x1, y1, x2, y2, linetype, arrowhead) {\r\n                var line = this.paper_.path(handLine(x1, y1, x2, y2)).attr(LINE);\r\n                if (linetype !== undefined) {\r\n                    line.attr('strokeDasharray', this.lineTypes_[linetype]);\r\n                }\r\n                if (arrowhead !== undefined) {\r\n                    line.attr('markerEnd', this.arrowMarkers_[arrowhead]);\r\n                }\r\n                return this.pushToStack(line);\r\n            },\r\n\r\n            drawRect: function(x, y, w, h) {\r\n                var rect = this.paper_.path(handRect(x, y, w, h)).attr(RECT);\r\n                return this.pushToStack(rect);\r\n            }\r\n        });\r\n\r\n        registerTheme('snapSimple', SnapTheme);\r\n        registerTheme('snapHand',   SnapHandTheme);\r\n    }\r\n\r\n    /** js sequence diagrams\r\n     *  https://bramp.github.io/js-sequence-diagrams/\r\n     *  (c) 2012-2017 Andrew Brampton (bramp.net)\r\n     *  Simplified BSD license.\r\n     */\r\n    /*global Diagram, Raphael, _ */\r\n\r\n    if (typeof Raphael != 'undefined') {\r\n\r\n        var LINE = {\r\n            'stroke': '#000000',\r\n            'stroke-width': 2,\r\n            'fill': 'none'\r\n        };\r\n\r\n        var RECT = {\r\n            'stroke': '#000000',\r\n            'stroke-width': 2,\r\n            'fill': '#fff'\r\n        };\r\n\r\n        /******************\r\n         * Raphaël extras\r\n         ******************/\r\n        Raphael.fn.line = function(x1, y1, x2, y2) {\r\n            assert(_.all([x1,x2,y1,y2], _.isFinite), 'x1,x2,y1,y2 must be numeric');\r\n            return this.path('M{0},{1} L{2},{3}', x1, y1, x2, y2);\r\n        };\r\n\r\n        /******************\r\n         * RaphaelTheme\r\n         ******************/\r\n\r\n        var RaphaelTheme = function(diagram, options, resume) {\r\n            this.init(diagram, _.defaults(options, {\r\n                'font-size': 16,\r\n                'font-family': 'Andale Mono, monospace'\r\n            }), resume);\r\n        };\r\n\r\n        _.extend(RaphaelTheme.prototype, BaseTheme.prototype, {\r\n\r\n            init: function(diagram, options, resume) {\r\n                BaseTheme.prototype.init.call(this, diagram);\r\n\r\n                this.paper_  = undefined;\r\n                this.font_   = {\r\n                    'font-size': options['font-size'],\r\n                    'font-family': options['font-family']\r\n                };\r\n\r\n                var a = this.arrowTypes_ = {};\r\n                a[ARROWTYPE.FILLED] = 'block';\r\n                a[ARROWTYPE.OPEN]   = 'open';\r\n\r\n                var l = this.lineTypes_ = {};\r\n                l[LINETYPE.SOLID]  = '';\r\n                l[LINETYPE.DOTTED] = '-';\r\n\r\n                resume(this);\r\n            },\r\n\r\n            setupPaper: function(container) {\r\n                this.paper_ = new Raphael(container, 320, 200);\r\n                this.paper_.setStart();\r\n            },\r\n\r\n            draw: function(container) {\r\n                BaseTheme.prototype.draw.call(this, container);\r\n                this.paper_.setFinish();\r\n            },\r\n\r\n            layout: function() {\r\n                BaseTheme.prototype.layout.call(this);\r\n                this.paper_.setSize(\r\n                    this.diagram.width,\r\n                    this.diagram.height\r\n                );\r\n            },\r\n\r\n            /**\r\n             * Strip whitespace from each newline\r\n             */\r\n            cleanText: function(text) {\r\n                text = _.invoke(text.split('\\n'), 'trim');\r\n                return text.join('\\n');\r\n            },\r\n\r\n            /**\r\n             * Returns the text's bounding box\r\n             */\r\n            textBBox: function(text, font) {\r\n                text = this.cleanText(text);\r\n                font = font || {};\r\n                var p;\r\n                if (font.obj_) {\r\n                    p = this.paper_.print(0, 0, text, font.obj_, font['font-size']);\r\n                } else {\r\n                    p = this.paper_.text(0, 0, text);\r\n                    p.attr(font);\r\n                }\r\n\r\n                var bb = p.getBBox();\r\n                p.remove();\r\n\r\n                return bb;\r\n            },\r\n\r\n            drawLine: function(x1, y1, x2, y2, linetype, arrowhead) {\r\n                var line = this.paper_.line(x1, y1, x2, y2).attr(LINE);\r\n                if (arrowhead !== undefined) {\r\n                    line.attr('arrow-end', this.arrowTypes_[arrowhead] + '-wide-long');\r\n                }\r\n                if (arrowhead !== undefined) {\r\n                    line.attr('stroke-dasharray', this.lineTypes_[linetype]);\r\n                }\r\n                return line;\r\n            },\r\n\r\n            drawRect: function(x, y, w, h) {\r\n                return this.paper_.rect(x, y, w, h).attr(RECT);\r\n            },\r\n\r\n            /**\r\n             * Draws text with a optional white background\r\n             * x,y (int) x,y top left point of the text, or the center of the text (depending on align param)\r\n             * text (string) text to print\r\n             * font (Object)\r\n             * align (string) ALIGN_LEFT or ALIGN_CENTER\r\n             */\r\n            drawText: function(x, y, text, font, align) {\r\n                text = this.cleanText(text);\r\n                font = font || {};\r\n                align = align || ALIGN_LEFT;\r\n\r\n                var paper = this.paper_;\r\n                var bb = this.textBBox(text, font);\r\n\r\n                if (align == ALIGN_CENTER) {\r\n                    x = x - bb.width / 2;\r\n                    y = y - bb.height / 2;\r\n                }\r\n\r\n                var t;\r\n                if (font.obj_) {\r\n                    // When using a font, we have to use .print(..)\r\n                    t = paper.print(x - bb.x, y - bb.y, text, font.obj_, font['font-size']);\r\n                } else {\r\n                    t = paper.text(x - bb.x - bb.width / 2, y - bb.y, text);\r\n                    t.attr(font);\r\n                    t.attr({'text-anchor': 'start'});\r\n                }\r\n\r\n                return t;\r\n            }\r\n        });\r\n\r\n        /******************\r\n         * RaphaelHandTheme\r\n         ******************/\r\n\r\n        var RaphaelHandTheme = function(diagram, options, resume) {\r\n            this.init(diagram, _.defaults(options, {\r\n                'font-size': 16,\r\n                'font-family': 'daniel'\r\n            }), resume);\r\n        };\r\n\r\n        // Take the standard RaphaelTheme and make all the lines wobbly\r\n        _.extend(RaphaelHandTheme.prototype, RaphaelTheme.prototype, {\r\n            setupPaper: function(container) {\r\n                RaphaelTheme.prototype.setupPaper.call(this, container);\r\n                this.font_.obj_ = this.paper_.getFont('daniel');\r\n            },\r\n\r\n            drawLine: function(x1, y1, x2, y2, linetype, arrowhead) {\r\n                var line = this.paper_.path(handLine(x1, y1, x2, y2)).attr(LINE);\r\n                if (arrowhead !== undefined) {\r\n                    line.attr('arrow-end', this.arrowTypes_[arrowhead] + '-wide-long');\r\n                }\r\n                if (arrowhead !== undefined) {\r\n                    line.attr('stroke-dasharray', this.lineTypes_[linetype]);\r\n                }\r\n                return line;\r\n            },\r\n\r\n            drawRect: function(x, y, w, h) {\r\n                return this.paper_.path(handRect(x, y, w, h)).attr(RECT);\r\n            }\r\n        });\r\n\r\n        registerTheme('raphaelSimple', RaphaelTheme);\r\n        registerTheme('raphaelHand',   RaphaelHandTheme);\r\n    }\r\n    /*!\r\n     * The following copyright notice may not be removed under any circumstances.\r\n     *\r\n     * Copyright:\r\n     * Copyright (c) 2011 by Daniel Midgley. All rights reserved.\r\n     *\r\n     * Trademark:\r\n     * Please refer to the Copyright section for the font trademark attribution\r\n     * notices.\r\n     *\r\n     * Full name:\r\n     * Daniel-Bold\r\n     *\r\n     * Description:\r\n     * Daniel Bold is a font by Daniel Midgley.\r\n     *\r\n     * Designer:\r\n     * Daniel Midgley\r\n     *\r\n     * Vendor URL:\r\n     * http://goodreasonblog.blogspot.com/p/fontery.html\r\n     *\r\n     * License information:\r\n     * http://creativecommons.org/licenses/by-nd/3.0/\r\n     */\r\n    if (typeof Raphael != 'undefined') {\r\n        Raphael.registerFont({\r\n            \"w\": 209,\r\n            \"face\": {\r\n                \"font-family\": \"Daniel\",\r\n                \"font-weight\": 700,\r\n                \"font-stretch\": \"normal\",\r\n                \"units-per-em\": \"360\",\r\n                \"panose-1\": \"2 11 8 0 0 0 0 0 0 0\",\r\n                \"ascent\": \"288\",\r\n                \"descent\": \"-72\",\r\n                \"x-height\": \"7\",\r\n                \"bbox\": \"-92.0373 -310.134 519 184.967\",\r\n                \"underline-thickness\": \"3.51562\",\r\n                \"underline-position\": \"-25.1367\",\r\n                \"unicode-range\": \"U+0009-U+F002\"\r\n            },\r\n            \"glyphs\": {\r\n                \" \": {\r\n                    \"w\": 179\r\n                },\r\n                \"\\t\": {\r\n                    \"w\": 179\r\n                },\r\n                \"\\r\": {\r\n                    \"w\": 179\r\n                },\r\n                \"!\": {\r\n                    \"d\": \"66,-306v9,3,18,11,19,24v-18,73,-20,111,-37,194v0,10,2,34,-12,34v-12,0,-18,-9,-18,-28v0,-85,23,-136,38,-214v1,-7,4,-10,10,-10xm25,-30v15,-1,28,34,5,35v-11,-1,-38,-36,-5,-35\",\r\n                    \"w\": 115\r\n                },\r\n                \"\\\"\": {\r\n                    \"d\": \"91,-214v-32,3,-25,-40,-20,-68v3,-16,7,-25,12,-27v35,13,14,56,8,95xm8,-231v4,-31,1,-40,18,-75v37,7,11,51,11,79v-3,3,-4,8,-5,13v-17,4,-16,-10,-24,-17\",\r\n                    \"w\": 117\r\n                },\r\n                \"#\": {\r\n                    \"d\": \"271,-64v-30,26,-96,-7,-102,51v-6,2,-13,2,-24,-2v-2,-11,10,-21,2,-28v-14,5,-48,0,-48,22v0,23,-11,14,-29,10v-7,-6,6,-19,-1,-24r-32,4v-19,-8,-15,-24,5,-28r33,-6v4,0,24,-23,11,-27v-26,0,-63,14,-74,-10v3,-1,9,-17,16,-10v15,-8,81,4,89,-30v8,-14,16,-34,24,-38v23,9,24,38,5,49v37,24,55,-38,72,-43v19,10,20,23,-1,45v2,8,23,1,29,4v3,3,6,6,10,11v-14,13,-20,12,-45,12v-17,0,-16,17,-19,29v18,-7,49,3,67,-2v4,0,8,4,12,11xm161,-104v-30,-1,-44,10,-44,37v14,1,24,0,40,-5v0,-1,3,-10,8,-26v0,-4,-1,-6,-4,-6\",\r\n                    \"w\": 285\r\n                },\r\n                \"$\": {\r\n                    \"d\": \"164,-257v29,4,1,42,-3,50v5,5,38,13,41,24v8,4,6,15,-2,21v-18,3,-36,-17,-49,-17v-17,1,-31,40,-28,48v5,4,8,8,9,10v13,1,35,37,28,44v-10,21,-36,20,-65,28v-10,10,-12,40,-17,51v-9,-3,-28,1,-18,-17v0,-13,5,-24,-1,-35v-18,1,-59,-10,-42,-29v21,0,56,16,55,-16v5,-4,9,-18,9,-26v-14,-15,-55,-41,-53,-65v2,-33,56,-19,98,-26v10,-14,31,-43,38,-45xm93,-152v11,-10,15,-15,14,-29v-17,-3,-37,1,-43,6v10,12,20,19,29,23xm111,-103v-8,1,-11,12,-10,22v10,0,28,2,27,-8v0,-4,-13,-15,-17,-14\",\r\n                    \"w\": 225\r\n                },\r\n                \"%\": {\r\n                    \"d\": \"181,-96v24,-7,67,-13,104,1v14,18,21,19,22,44v-13,43,-99,61,-146,36v-9,-9,-22,-11,-32,-29v0,-27,24,-53,52,-52xm139,-185v-9,68,-138,73,-131,-5v0,-3,3,-9,9,-17v13,1,27,1,17,-16v5,-39,63,0,93,-6v36,1,80,-9,102,11v15,32,12,32,-8,56v-16,21,-103,78,-152,125r-14,28v-23,11,-25,-7,-29,-20v34,-71,133,-98,171,-162v-13,-12,-52,-5,-61,1v0,1,1,3,3,5xm38,-190v0,34,55,29,70,8v0,-14,-20,-11,-32,-14v-14,-3,-24,-9,-40,-10v1,0,5,11,2,16xm172,-53v12,27,90,18,102,-5v-18,-7,-32,-10,-40,-10v-29,3,-57,-4,-62,15\",\r\n                    \"w\": 308\r\n                },\r\n                \"&\": {\r\n                    \"d\": \"145,-82v17,-8,47,-15,71,-26v13,2,25,12,9,23v-23,7,-40,16,-53,27r0,6v13,8,30,21,36,38v0,8,-4,12,-11,12v-19,0,-43,-39,-59,-44v-30,12,-65,29,-97,32v-32,3,-45,-41,-23,-63v21,-20,52,-26,70,-48v-4,-31,-12,-47,9,-73v13,-16,20,-29,23,-39v15,-15,32,-22,51,-22v30,9,62,64,32,96v-2,3,-47,42,-69,48v-15,8,-11,9,0,22v6,7,10,11,11,11xm114,-138v25,-13,62,-38,74,-62v0,-9,-10,-31,-20,-29v-28,7,-60,42,-60,75v0,10,2,15,6,16xm99,-91v-18,10,-54,18,-59,45v26,5,61,-12,77,-22v-1,-5,-13,-23,-18,-23\",\r\n                    \"w\": 253\r\n                },\r\n                \"'\": {\r\n                    \"d\": \"36,-182v-36,7,-34,-61,-17,-80v15,1,21,19,21,20r-1,-1v0,0,-1,12,-5,35v1,5,3,17,2,26\",\r\n                    \"w\": 63\r\n                },\r\n                \"(\": {\r\n                    \"d\": \"130,-306v13,2,23,43,-1,43v-49,43,-77,77,-90,148v5,49,27,67,64,101v4,14,5,6,2,19r-15,0v-35,-17,-79,-58,-79,-120v0,-58,66,-176,119,-191\",\r\n                    \"w\": 120\r\n                },\r\n                \")\": {\r\n                    \"d\": \"108,-138v-2,73,-48,120,-98,153v-17,-5,-16,-20,-6,-31v52,-64,73,-62,74,-135v1,-42,-40,-98,-58,-128v0,-5,-1,-12,-2,-22v18,-18,25,0,42,27v25,39,50,66,48,136\",\r\n                    \"w\": 120\r\n                },\r\n                \"*\": {\r\n                    \"d\": \"121,-271v15,-5,36,-8,40,9v-5,10,-31,19,-47,31v0,11,34,43,14,53v-18,8,-24,-24,-34,-20v-4,10,-4,19,-12,41v-25,7,-15,-30,-17,-47v-13,-1,-17,9,-46,30r-10,0v-20,-32,37,-43,54,-64v-10,-11,-36,-33,-16,-51v3,0,14,8,33,24v8,-10,26,-39,32,-42v14,7,15,23,9,36\",\r\n                    \"w\": 177\r\n                },\r\n                \"+\": {\r\n                    \"d\": \"163,-64v-7,22,-65,2,-77,21v-2,10,-6,21,-11,35v-20,4,-21,-12,-19,-29v3,-23,-44,6,-39,-27v-8,-22,36,-8,49,-18v8,-13,6,-36,24,-40v19,-4,14,32,11,39v18,3,19,2,54,8v2,1,5,5,8,11\",\r\n                    \"w\": 170\r\n                },\r\n                \",\": {\r\n                    \"d\": \"25,63v-26,21,-48,-2,-22,-24v14,-12,35,-40,35,-69v3,-2,3,-11,12,-9v35,17,5,88,-25,102\",\r\n                    \"w\": 97\r\n                },\r\n                \"-\": {\r\n                    \"d\": \"57,-94v19,4,55,-5,54,17v-15,23,-54,20,-91,15v-4,2,-13,-10,-11,-16v-1,-22,28,-15,48,-16\",\r\n                    \"w\": 124\r\n                },\r\n                \".\": {\r\n                    \"d\": \"40,-48v21,20,21,44,-4,44v-33,0,-26,-24,-10,-44r14,0\",\r\n                    \"w\": 67\r\n                },\r\n                \"\\/\": {\r\n                    \"d\": \"21,20v-22,-45,21,-95,41,-126v38,-57,115,-158,193,-201v2,0,4,3,7,11v11,29,-15,34,-25,55v-81,56,-189,208,-197,261r-19,0\",\r\n                    \"w\": 275\r\n                },\r\n                \"0\": {\r\n                    \"d\": \"78,-237v70,-47,269,-41,270,59v0,34,-11,53,-29,76v-13,35,-30,32,-85,64v-6,2,-10,6,-7,8v-73,14,-98,38,-173,1v-7,-13,-52,-48,-46,-88v9,-57,27,-75,70,-120xm123,-38v100,0,202,-46,195,-153v-32,-55,-144,-73,-211,-35v-16,34,-68,54,-53,108v6,25,1,22,-3,39v6,24,41,41,72,41\",\r\n                    \"w\": 353\r\n                },\r\n                \"1\": {\r\n                    \"d\": \"39,-208v0,-14,6,-59,29,-39v3,4,6,13,10,24r-22,128r8,87v-4,6,-9,3,-16,2v-44,-38,-9,-137,-9,-202\",\r\n                    \"w\": 93\r\n                },\r\n                \"2\": {\r\n                    \"d\": \"88,-35v47,-10,119,-24,168,-9v0,12,-23,13,-35,16v1,1,3,1,5,1v-74,8,-118,23,-194,23v-14,0,-20,-13,-21,-28v55,-40,83,-61,123,-104v26,-13,65,-67,71,-102v-1,-9,-11,-16,-22,-16v-20,-1,-120,29,-156,49v-10,-2,-30,-20,-10,-28v50,-21,111,-51,178,-48v25,10,44,22,36,39v12,30,-19,64,-34,83v-39,48,-37,39,-115,109v0,5,-3,8,-8,11v4,3,8,4,14,4\",\r\n                    \"w\": 265\r\n                },\r\n                \"3\": {\r\n                    \"d\": \"188,-282v34,-10,74,25,47,51v-19,32,-55,50,-92,70v28,14,116,25,108,70v8,14,-49,40,-63,48v-29,9,-130,22,-168,42v-6,-5,-19,-7,-12,-22v56,-36,175,-21,210,-76v-9,-20,-88,-42,-97,-33v-20,-1,-41,2,-56,-7r5,-21v56,-25,103,-36,137,-78v1,-1,2,-5,4,-11v-15,-14,-56,7,-79,0v-10,9,-73,22,-92,31v-11,-4,-28,-23,-13,-30v50,-22,96,-26,154,-37v0,-1,8,3,7,3\",\r\n                    \"w\": 260\r\n                },\r\n                \"4\": {\r\n                    \"d\": \"79,-249v-7,17,-29,75,-33,96v0,6,3,8,8,8v43,-2,111,6,141,-6v17,-47,20,-100,63,-148v9,4,16,7,21,10v-17,31,-44,95,-51,141v7,4,24,-4,23,10v-1,16,-29,12,-31,23v-10,22,-9,69,-7,103v-3,2,-7,5,-10,9v-47,-11,-23,-74,-16,-114v0,-4,-2,-6,-7,-6v-65,2,-89,13,-162,4v-22,-22,-2,-53,5,-76v16,-15,17,-57,35,-70v6,-1,21,11,21,16\",\r\n                    \"w\": 267\r\n                },\r\n                \"5\": {\r\n                    \"d\": \"185,-272v30,7,45,-8,53,18v1,16,-17,18,-34,14v0,0,-95,-11,-129,1v-6,9,-24,33,-29,54v76,10,171,5,214,47v11,11,22,30,5,52v-14,12,-30,14,-34,27v-26,11,-141,63,-157,60v-16,-2,-25,-19,-4,-27v48,-18,128,-39,170,-86v4,-14,-65,-41,-85,-41r-92,0v-10,-4,-66,-1,-57,-23v0,-23,23,-51,35,-83v11,-28,133,-10,144,-13\",\r\n                    \"w\": 284\r\n                },\r\n                \"6\": {\r\n                    \"d\": \"70,-64v9,-51,63,-74,123,-71v43,2,109,3,111,41r-25,47v0,1,1,2,2,3v-5,0,-39,10,-41,20v-15,3,-22,4,-22,11v-39,1,-77,20,-119,13v-42,-7,-35,-9,-77,-46v-56,-118,94,-201,176,-229v7,0,21,8,20,15v-2,17,-23,15,-43,24v-69,31,-119,72,-134,145v-5,25,36,68,78,64v59,-6,128,-18,153,-61v-7,-14,-13,-9,-32,-21v-67,-15,-118,-5,-150,43r0,12v-13,4,-17,-3,-20,-10\",\r\n                    \"w\": 310\r\n                },\r\n                \"7\": {\r\n                    \"d\": \"37,-228v33,-14,173,-17,181,-19v28,-1,24,31,9,45v-17,15,-45,49,-59,69v-17,26,-55,67,-61,113v-10,13,-9,14,-14,20v-33,-13,-20,-25,-11,-53v16,-48,73,-115,109,-156v2,-7,5,-14,-10,-12v-26,4,-54,6,-76,13v-23,-5,-83,31,-94,-9v2,-8,18,-19,26,-11\",\r\n                    \"w\": 245\r\n                },\r\n                \"8\": {\r\n                    \"d\": \"57,-236v40,-50,166,-51,213,-10v22,28,10,63,-22,78r-35,17v8,5,54,24,53,44v-5,14,-4,33,-18,42v-13,13,-35,18,-44,34v-60,27,-190,49,-194,-42v7,-41,17,-54,59,-70r0,-4v-32,-9,-73,-62,-26,-85v4,0,8,-2,14,-4xm142,-160v24,-2,160,-31,99,-72v-28,-18,-108,-33,-146,-5v-16,12,-28,30,-33,59v24,12,37,20,80,18xm41,-62v30,65,189,6,199,-37v3,-14,-60,-30,-74,-30v-70,0,-118,10,-125,67\",\r\n                    \"w\": 290\r\n                },\r\n                \"9\": {\r\n                    \"d\": \"11,-192v15,-49,119,-61,161,-23v16,15,27,55,11,79v-20,62,-51,79,-96,118v-10,4,-45,27,-50,6v9,-15,66,-52,98,-99v-7,-7,-8,-3,-25,0v-49,-11,-96,-25,-99,-81xm145,-131v7,-5,13,-34,13,-41v-2,-51,-104,-38,-114,-6v-2,10,37,35,46,35v23,1,43,-1,55,12\",\r\n                    \"w\": 198\r\n                },\r\n                \":\": {\r\n                    \"d\": \"39,-125v15,-8,40,-1,40,15v0,15,-6,22,-19,22v-13,0,-29,-21,-21,-37xm66,-17v-8,27,-51,19,-46,-8v-1,-6,8,-22,14,-20v29,0,30,6,32,28\",\r\n                    \"w\": 95\r\n                },\r\n                \";\": {\r\n                    \"d\": \"56,-93v2,-30,37,-22,40,2v0,2,-1,7,-3,15v-13,8,-15,6,-27,4xm64,-44v11,-11,30,-4,32,14v-21,39,-63,71,-92,85v-5,0,-11,-2,-18,-8v11,-23,36,-36,50,-61v11,-7,19,-20,28,-30\",\r\n                    \"w\": 107\r\n                },\r\n                \"<\": {\r\n                    \"d\": \"166,-202v12,0,29,15,24,29v0,4,-119,64,-120,73v15,21,89,64,91,86v2,29,-18,12,-30,15v-27,-29,-59,-54,-95,-75v-18,-10,-25,-13,-24,-41\",\r\n                    \"w\": 176\r\n                },\r\n                \"=\": {\r\n                    \"d\": \"125,-121v18,7,55,-9,69,14v0,17,-45,26,-135,26v-18,0,-27,-7,-27,-21v-1,-37,60,-5,93,-19xm138,-71v20,0,48,-1,50,16v-13,24,-86,32,-131,29v-29,-2,-43,-10,-43,-24v-7,-23,36,-14,39,-17v27,6,57,-4,85,-4\",\r\n                    \"w\": 196\r\n                },\r\n                \">\": {\r\n                    \"d\": \"4,-14v20,-48,77,-59,118,-94v-16,-19,-58,-52,-81,-75v-11,-7,-15,-38,-1,-40v33,16,83,71,121,105v26,23,-6,35,-41,53v-29,16,-56,28,-73,54v-21,15,-16,20,-34,15v-3,0,-9,-16,-9,-18\",\r\n                    \"w\": 174\r\n                },\r\n                \"?\": {\r\n                    \"d\": \"105,-291v57,-13,107,-4,107,39v0,67,-136,85,-155,137v-1,6,10,23,-4,23v-23,1,-33,-35,-23,-57v31,-41,124,-60,149,-103v-8,-21,-72,-5,-88,-1v-23,6,-59,39,-71,8v0,0,-1,0,1,-17v10,-4,45,-20,84,-29xm80,-25v-6,4,-8,39,-24,22v-24,3,-22,-21,-13,-35v17,-7,29,5,37,13\",\r\n                    \"w\": 216\r\n                },\r\n                \"@\": {\r\n                    \"d\": \"218,-207v23,8,42,14,47,37v44,68,-27,137,-87,85r1,0v0,2,-59,19,-61,17v-35,0,-42,-47,-17,-68r0,-4v-19,-1,-45,37,-49,40v-37,76,58,72,121,62v11,-2,34,-13,36,3v-14,31,-69,31,-114,33v-51,2,-99,-41,-80,-92v2,-30,22,-40,42,-63v35,-20,91,-53,161,-50xm217,-101v23,0,35,-19,35,-41v0,-43,-75,-41,-102,-19v36,3,55,16,62,41v-6,5,-6,19,5,19xm127,-110v8,5,51,-15,28,-16v-4,0,-25,4,-28,16\",\r\n                    \"w\": 291\r\n                },\r\n                \"A\": {\r\n                    \"d\": \"97,-81v-23,-10,-39,38,-52,60v-8,6,-8,6,-22,18v-22,-7,-23,-37,-4,-49v7,-8,11,-15,15,-23r-1,1v-14,-26,23,-29,31,-40v1,-1,15,-29,26,-36v17,-31,39,-58,54,-92v16,-20,20,-51,41,-66v29,5,34,62,45,92v9,64,21,103,49,155v-3,25,-44,11,-54,0v-34,-12,-97,-29,-128,-20xm107,-118v20,6,80,10,111,17v6,-7,-4,-15,-7,-24v-11,-28,-9,-92,-30,-117v-9,9,-19,44,-34,55v-9,23,-27,40,-40,69\",\r\n                    \"w\": 294\r\n                },\r\n                \"B\": {\r\n                    \"d\": \"256,-179v41,10,115,34,91,91v-6,3,-14,12,-19,20v-37,19,-50,34,-63,25v-9,10,-12,11,-34,13r3,-3v-4,-4,-12,-4,-18,0v0,0,2,2,5,4v-21,14,-26,6,-44,15v-4,0,-7,-2,-8,-5v-6,11,-20,-5,-18,11v-36,4,-91,35,-114,4v-7,-62,-10,-138,4,-199v-1,-19,-37,2,-37,-27v0,-8,2,-13,6,-15v68,-31,231,-92,311,-39v8,12,12,20,12,25v-8,42,-32,49,-77,80xm79,-160v72,-17,135,-39,184,-70v20,-13,31,-23,31,-27v1,-6,-30,-13,-38,-12v-54,0,-116,13,-186,41v11,21,1,48,9,68xm262,-43v0,-4,3,-6,-4,-5v0,1,1,2,4,5xm211,-140v-34,7,-94,24,-139,15v-6,20,-4,56,-4,82v0,29,43,1,56,2v48,-11,108,-25,154,-48v20,-10,32,-17,32,-25v0,-18,-33,-26,-99,-26xm195,-20v6,1,6,-2,5,-7v-3,2,-7,2,-5,7\",\r\n                    \"w\": 364\r\n                },\r\n                \"C\": {\r\n                    \"d\": \"51,-114v-12,75,96,76,166,71r145,-10v9,2,9,5,9,18v-37,18,-85,28,-109,22v-18,10,-47,10,-71,10v-29,0,-68,1,-105,-11v-6,-1,-10,-3,-10,-8v-33,-13,-48,-33,-66,-59v-19,-114,146,-150,224,-177v35,0,88,-31,99,7v-1,29,-49,14,-76,28v-55,8,-115,35,-175,71v-13,8,-23,21,-31,38\",\r\n                    \"w\": 376\r\n                },\r\n                \"D\": {\r\n                    \"d\": \"312,-78v-2,1,-3,7,-10,5v6,-3,10,-4,10,-5xm4,-252v2,-27,83,-38,106,-39v130,-7,267,1,291,109v0,0,-2,8,-3,25v-5,9,-4,28,-23,34v-4,4,-2,5,-7,0v-3,3,-15,7,-5,10v0,0,-10,14,-13,2v-11,1,-8,5,-20,14v1,2,7,3,9,1v-4,13,-22,13,-11,4v0,-3,1,-6,-3,-5v-40,29,-103,38,-141,65v10,6,22,-7,34,-3v-41,20,-127,44,-171,46v-21,1,-47,-33,-11,-39v15,-2,43,-6,56,-11v-16,-101,-5,-130,9,-207v2,0,4,-1,6,-3v-16,-17,-91,38,-103,-3xm297,-69v-7,3,-17,8,-25,7v1,1,3,2,5,2v-4,2,-11,5,-23,9v4,-11,30,-21,43,-18xm240,-51v10,0,12,2,0,6r0,-6xm220,-36v-1,-3,4,-6,6,-3v0,1,-2,1,-6,3xm125,-48v16,6,137,-46,155,-53v29,-18,101,-44,82,-93v-21,-53,-84,-61,-168,-67v-20,7,-50,3,-77,8v33,54,-12,132,8,205xm159,-22v-4,-1,-15,-5,-15,2v7,-1,12,-2,15,-2\",\r\n                    \"w\": 381\r\n                },\r\n                \"E\": {\r\n                    \"d\": \"45,-219v-19,-36,34,-41,63,-36v44,-10,133,-8,194,-15v3,2,38,11,52,15v-73,19,-171,21,-246,38v-9,11,-16,32,-20,61v35,11,133,-6,183,3v1,6,2,7,3,14v-46,24,-118,16,-193,27v-15,13,-22,52,-22,66v60,1,121,-20,188,-20v22,10,53,-7,74,5v16,29,-23,26,-43,32v-73,4,-139,13,-216,27r-52,-10v-4,-22,23,-69,26,-98v-3,0,-10,-15,-12,-24v20,-12,34,-23,35,-67v2,-1,5,-5,5,-7v0,-4,-14,-11,-19,-11\",\r\n                    \"w\": 353\r\n                },\r\n                \"F\": {\r\n                    \"d\": \"270,-258v13,2,59,6,48,34v-78,-3,-143,1,-212,22v-10,16,-21,43,-24,69r145,-9v8,3,29,-3,16,21v-14,-1,-59,13,-60,7v-12,13,-67,18,-108,21v-2,1,-4,3,-7,6v-2,23,-8,43,-7,69v1,28,-30,11,-40,5r10,-80r-26,-14v5,-10,10,-33,28,-25v21,-3,15,-46,26,-59v-1,-3,-32,-13,-28,-24v2,-22,45,-16,59,-30v47,4,99,-14,151,-9v5,-3,25,-3,29,-4\",\r\n                    \"w\": 236\r\n                },\r\n                \"G\": {\r\n                    \"d\": \"311,-168v53,0,94,57,74,110v-31,37,-71,34,-136,52v-13,-7,-41,10,-57,7v-73,-1,-122,-17,-162,-59v-49,-51,-24,-80,5,-130v35,-61,138,-93,214,-106v16,4,42,-1,40,21v-5,40,-39,2,-73,21v-76,19,-162,65,-177,142v28,103,237,76,312,29v2,-3,3,-7,3,-13v-10,-35,-37,-43,-87,-45v-16,-13,-53,-9,-78,1v-4,-3,-5,-7,-5,-11v17,-29,73,-17,108,-24v12,4,18,5,19,5\",\r\n                    \"w\": 391\r\n                },\r\n                \"H\": {\r\n                    \"d\": \"300,-268v18,12,19,32,4,51v-35,44,-34,140,-46,217v-1,5,-5,13,-11,12v-6,1,-19,-14,-18,-27r7,-106v-28,7,-76,22,-116,14v-18,2,-36,6,-55,3v-43,-8,-14,53,-33,75v-29,1,-26,-67,-21,-97v5,-31,28,-73,43,-98v2,2,7,3,14,3v13,33,-11,48,-13,78v61,4,118,2,176,2v8,0,13,-6,15,-20v4,-47,21,-87,54,-107\",\r\n                    \"w\": 288\r\n                },\r\n                \"I\": {\r\n                    \"d\": \"63,-266v34,10,-4,105,-8,128r-24,126v-2,2,-3,1,-9,6v-12,-10,-12,-15,-12,-47v0,-93,9,-156,28,-188v10,-17,19,-25,25,-25\",\r\n                    \"w\": 79\r\n                },\r\n                \"J\": {\r\n                    \"d\": \"235,-291v26,11,31,104,31,142v0,37,-2,95,-32,126v-33,34,-121,26,-167,1v-18,-11,-54,-29,-59,-59v0,-3,5,-15,16,-14v31,36,90,57,162,51v63,-30,56,-148,32,-226v-1,-16,11,-13,17,-21\",\r\n                    \"w\": 282\r\n                },\r\n                \"K\": {\r\n                    \"d\": \"212,-219v17,-5,80,-60,80,-19v0,9,-2,14,-5,16r-132,78v-34,23,-54,32,-21,50v39,21,74,23,124,41v5,2,7,5,7,9v-4,24,-55,15,-79,8v-67,-19,-98,-36,-116,-83v9,-24,38,-35,66,-61v7,-4,49,-30,76,-39xm47,-194v11,-20,11,-45,31,-55v2,2,4,3,6,0v29,39,-21,96,-18,128v-17,24,-15,62,-29,113v-4,3,-10,7,-19,11v-12,-13,-10,-28,-8,-53v3,-31,17,-79,37,-144\",\r\n                    \"w\": 270\r\n                },\r\n                \"L\": {\r\n                    \"d\": \"84,-43v58,0,179,-27,242,-4v3,17,-29,24,-40,26v-85,-4,-202,46,-268,3v-24,-16,-2,-33,-4,-57v26,-76,38,-108,86,-191v14,-7,26,-50,45,-32v6,22,5,31,-12,46v-20,39,-50,82,-67,142v-7,6,-19,46,-19,54v0,9,12,13,37,13\",\r\n                    \"w\": 331\r\n                },\r\n                \"M\": {\r\n                    \"d\": \"174,-236v-1,52,-11,92,-7,143v10,5,15,-12,22,-18v42,-55,90,-130,136,-174r15,-18v42,2,32,53,11,80v-12,58,-54,143,-34,210v0,3,-3,12,-9,10v-31,-5,-32,-57,-27,-92v4,-27,12,-58,25,-93v-5,-10,5,-19,6,-30v-46,44,-66,110,-129,172v-11,10,-18,15,-22,15v-34,6,-28,-103,-28,-152v-28,22,-65,119,-96,170v-9,15,-34,3,-31,-19v30,-64,91,-177,139,-229v12,-1,29,13,29,25\",\r\n                    \"w\": 343\r\n                },\r\n                \"N\": {\r\n                    \"d\": \"248,-20v-3,17,-37,18,-43,3v-24,-35,-53,-145,-80,-203v-32,40,-55,120,-92,174v-13,3,-26,-13,-27,-22r87,-171v4,-13,20,-57,42,-32v42,48,46,139,82,198v29,-45,46,-88,65,-153v12,-19,23,-42,38,-60v27,-1,14,18,4,44v-6,46,-32,68,-37,121v-15,29,-33,69,-39,101\",\r\n                    \"w\": 307\r\n                },\r\n                \"O\": {\r\n                    \"d\": \"240,-268v85,1,163,29,150,125v13,7,-12,18,-5,26v-23,63,-133,112,-228,124v-80,-16,-171,-56,-148,-153v11,-47,20,-43,53,-83v17,-9,39,-22,73,-29v45,-10,81,-10,105,-10xm363,-156v16,-51,-62,-85,-111,-79v-25,-11,-50,8,-81,0v-15,10,-70,16,-85,31v6,20,-27,24,-39,45v-42,75,40,128,115,128v56,0,209,-71,201,-125\",\r\n                    \"w\": 383\r\n                },\r\n                \"P\": {\r\n                    \"d\": \"70,-225v-7,-12,-36,16,-49,19v-4,0,-9,-5,-14,-17v21,-47,114,-55,172,-59v41,-3,132,33,99,87v-21,34,-72,59,-144,80v-2,16,-79,3,-74,46v3,25,-5,47,-10,68v-22,-1,-23,-29,-22,-56v2,-25,-20,-32,-8,-50v21,-5,10,-35,25,-57v6,-28,14,-48,25,-61xm71,-229v47,14,-2,50,-1,99v41,-3,113,-37,173,-76v5,-9,8,-14,8,-15v-28,-47,-125,-29,-180,-8\",\r\n                    \"w\": 252\r\n                },\r\n                \"Q\": {\r\n                    \"d\": \"374,-217v20,59,-11,127,-48,156r30,38v-1,6,-8,16,-14,9v-3,0,-19,-9,-47,-26v-72,35,-173,75,-236,12v-70,-40,-67,-213,26,-217r8,5v24,-20,72,-48,112,-38v21,-4,22,-1,50,-2v66,-2,94,20,119,63xm296,-88v13,5,61,-49,63,-84v4,-62,-54,-78,-119,-76v-14,-6,-49,5,-71,3v-42,16,-89,41,-93,94v-9,11,1,25,-7,38v-12,-19,-7,-67,-1,-88v-56,30,-37,137,19,155v27,17,92,19,119,0v12,-2,29,-9,52,-20v2,-2,3,-3,3,-6v-11,-12,-46,-27,-54,-56v0,-13,3,-19,9,-19v18,1,60,52,80,59\",\r\n                    \"w\": 379\r\n                },\r\n                \"R\": {\r\n                    \"d\": \"100,-275v96,-23,196,-10,208,78v-3,18,-17,52,-49,62v-14,20,-54,23,-79,40v-2,0,-14,2,-36,6v-40,8,-30,14,-3,33v37,27,52,30,118,55v16,6,31,23,12,27v-58,-2,-104,-29,-143,-61v-14,-3,-16,-15,-39,-27v-23,-19,-28,-12,-15,-38v63,-19,111,-15,163,-53v27,-20,43,-36,43,-49v0,-64,-120,-62,-173,-38v-9,4,-38,9,-40,18v-10,32,-16,70,-13,116v-10,21,-8,47,-6,75v2,31,-9,29,-27,22v-9,-55,5,-140,15,-190v-8,-6,-24,10,-24,-11v0,-34,16,-34,42,-55v2,-1,17,-4,46,-10\",\r\n                    \"w\": 297\r\n                },\r\n                \"S\": {\r\n                    \"d\": \"13,-3v-7,-3,-22,-18,-5,-22v68,-15,119,-32,154,-45v51,-19,39,-34,3,-53v-46,-25,-82,-30,-121,-64v-33,-29,-50,-35,-25,-58v37,-20,119,-29,181,-29v29,0,44,6,44,18v-9,26,-62,6,-104,14v-17,2,-72,6,-92,16v37,53,132,58,180,111v8,9,11,20,11,30v-4,17,-23,35,-42,34v-21,16,-17,1,-49,17v-14,7,-41,9,-56,20v-25,-3,-49,10,-79,11\",\r\n                    \"w\": 234\r\n                },\r\n                \"T\": {\r\n                    \"d\": \"141,-3v-36,-6,1,-49,-3,-79v10,-19,6,-35,15,-64r26,-85v-51,-9,-100,10,-141,14v-16,2,-30,-26,-11,-32v26,-8,143,-8,179,-19r12,6v67,-2,142,-1,200,-1v8,0,14,3,19,10v-18,16,-74,3,-103,14v-48,-4,-60,4,-113,7v-42,22,-36,130,-58,187v1,12,-9,44,-22,42\",\r\n                    \"w\": 277\r\n                },\r\n                \"U\": {\r\n                    \"d\": \"365,-262v13,56,-22,104,-36,141v-19,22,-30,38,-57,56v-4,18,-60,35,-78,50v-53,28,-142,0,-161,-34v-31,-56,-37,-108,-11,-164v17,-33,29,-50,48,-29v-2,2,-3,7,-4,13v-44,36,-38,149,7,174v30,26,55,19,102,4v56,-17,66,-34,120,-76v12,-24,56,-68,46,-122r0,-16v0,1,-1,3,-1,6v4,-13,11,-10,25,-3\",\r\n                    \"w\": 368\r\n                },\r\n                \"V\": {\r\n                    \"d\": \"246,-258v21,-22,31,-26,44,-8v1,1,-12,22,-28,35v-15,25,-41,38,-56,69v-13,15,-20,31,-28,57v-15,13,-11,29,-27,72v3,21,-5,24,-27,27v-33,-45,-54,-118,-84,-167v-5,-26,-18,-50,-25,-76v-3,-12,24,-8,29,-5v8,13,18,52,26,70r52,115v9,-2,4,-9,10,-21r25,-47v25,-44,46,-76,89,-121\",\r\n                    \"w\": 234\r\n                },\r\n                \"W\": {\r\n                    \"d\": \"31,-213v16,46,17,106,41,151v31,-35,49,-89,76,-127v30,-15,39,27,52,56v10,22,21,48,35,67v2,0,4,-1,5,-3v16,-28,50,-76,79,-121v14,-21,40,-63,64,-83r5,8v-30,58,-76,110,-97,173v-18,28,-25,37,-33,63v-11,1,-16,25,-30,15v-21,-31,-44,-89,-62,-131v0,-2,-1,-3,-5,-5v-17,11,-16,36,-31,50v-20,33,-20,84,-68,94v-24,-19,-23,-81,-39,-111v-1,-15,-29,-94,-10,-108v9,2,12,5,18,12\",\r\n                    \"w\": 331\r\n                },\r\n                \"X\": {\r\n                    \"d\": \"143,-183v43,-25,69,-36,126,-62v22,-10,86,-10,56,21v-51,3,-158,61,-154,64v10,15,41,30,50,52v27,17,46,60,70,82v9,14,-6,30,-24,20v-35,-43,-75,-100,-116,-132v-48,13,-100,47,-118,94v-1,49,-26,34,-27,4v-1,-26,13,-27,17,-48v22,-27,68,-55,90,-77v-9,-12,-60,-39,-79,-57v-6,-10,-6,-25,12,-25\",\r\n                    \"w\": 312\r\n                },\r\n                \"Y\": {\r\n                    \"d\": \"216,-240v19,-14,42,10,22,26v-54,66,-121,109,-156,197v-8,21,-11,15,-30,4v3,-37,27,-61,33,-76v12,-12,15,-19,32,-42v-8,-6,-40,5,-45,5v-48,-6,-69,-65,-56,-113v14,0,13,-1,24,7v2,33,12,75,42,73v36,-2,102,-57,134,-81\",\r\n                    \"w\": 189\r\n                },\r\n                \"Z\": {\r\n                    \"d\": \"60,-255v66,12,200,-34,240,21v-13,42,-63,62,-98,89v-19,15,-47,33,-82,55v-25,16,-47,32,-66,47v58,24,129,-6,208,-6v23,0,36,12,13,19v-33,2,-53,5,-86,10v-32,18,-88,15,-135,15v-9,-1,-55,-1,-48,-29v1,-24,30,-24,40,-41v64,-50,151,-86,208,-147v-38,-17,-155,12,-198,-4v0,0,-11,-33,4,-29\",\r\n                    \"w\": 310\r\n                },\r\n                \"[\": {\r\n                    \"d\": \"72,-258r-15,250v30,4,55,-3,80,-6v7,-1,8,17,9,23v-28,15,-73,23,-121,21v-7,0,-10,-6,-10,-17v0,-60,25,-193,22,-288v0,-16,13,-20,33,-19v9,-3,34,-12,51,-12v16,0,15,16,19,29v-16,7,-48,10,-68,19\",\r\n                    \"w\": 151\r\n                },\r\n                \"\\\\\": {\r\n                    \"d\": \"236,38v20,-18,-8,-74,-13,-90v-44,-78,-112,-190,-200,-253v-2,0,-5,4,-7,12v-11,31,13,36,24,58v74,61,174,219,180,273r16,0\",\r\n                    \"w\": 257\r\n                },\r\n                \"]\": {\r\n                    \"d\": \"133,-258v-23,-13,-84,6,-85,-32v0,-10,5,-15,14,-15v0,0,30,2,90,7v10,1,15,13,15,36v2,7,-8,59,-13,112r-11,125v-9,48,9,90,-59,71v-20,-4,-39,-1,-59,-4v-5,-10,-25,-12,-14,-30v8,-3,61,-13,78,-8v14,1,8,-7,10,-17v15,-69,21,-166,34,-245\",\r\n                    \"w\": 171\r\n                },\r\n                \"^\": {\r\n                    \"d\": \"68,-306v20,15,47,36,58,60v-1,4,0,7,-9,7v-26,0,-47,-38,-49,-32v-15,9,-41,50,-54,30v-2,-31,17,-23,33,-51v8,-9,15,-14,21,-14\",\r\n                    \"w\": 135\r\n                },\r\n                \"_\": {\r\n                    \"d\": \"11,15v-8,33,18,45,50,34r205,2r197,-5v11,-5,14,-9,7,-28v-95,-21,-258,-10,-376,-10v-25,0,-72,-3,-83,7\",\r\n                    \"w\": 485\r\n                },\r\n                \"`\": {\r\n                    \"d\": \"75,-264v16,8,56,14,39,43v-30,-8,-65,-23,-105,-44v-1,-3,-3,-28,5,-25v16,5,44,17,61,26\",\r\n                    \"w\": 129\r\n                },\r\n                \"a\": {\r\n                    \"d\": \"124,-56v10,4,59,41,65,50v1,7,-6,17,-12,17r-60,-30v-22,2,-42,21,-65,19v-33,4,-68,-67,-15,-81v41,-27,96,-39,110,9v0,6,-4,12,-11,16v-33,-25,-67,-5,-88,12v10,16,61,-18,76,-12\",\r\n                    \"w\": 196\r\n                },\r\n                \"b\": {\r\n                    \"d\": \"80,-140v69,1,123,0,134,52v5,26,-71,71,-97,70v-11,11,-88,22,-94,22v-11,-3,-26,-18,-6,-24v19,-5,-2,-19,-1,-35v1,-18,11,-36,-5,-47v-6,-17,-6,-21,14,-32v6,-45,18,-89,28,-124v2,-7,8,-12,17,-15v5,3,10,11,16,28v-12,27,-13,63,-23,96v0,6,6,9,17,9xm87,-107v-40,-9,-31,31,-39,54v8,15,0,25,12,22v30,-8,60,-18,88,-32v39,-18,49,-33,-1,-42v-20,-4,-45,-7,-60,-2\",\r\n                    \"w\": 217\r\n                },\r\n                \"c\": {\r\n                    \"d\": \"128,-123v29,-7,37,29,12,33v-27,-4,-40,6,-79,25v-8,4,-13,11,-16,22v30,32,91,3,134,11v5,13,-8,26,-22,19v-51,25,-139,28,-150,-30v6,-50,69,-82,121,-80\",\r\n                    \"w\": 194\r\n                },\r\n                \"d\": {\r\n                    \"d\": \"224,-201v0,-35,-17,-111,24,-94v7,86,-2,119,0,197v-4,2,-8,21,-18,16v-62,-7,-154,-8,-185,29v6,17,28,26,51,26v16,0,100,-15,132,-18v7,5,-6,20,-10,22v-24,8,-122,42,-163,25v-32,-5,-62,-53,-36,-80v35,-37,118,-46,198,-43v1,-22,7,-49,7,-80\",\r\n                    \"w\": 265\r\n                },\r\n                \"e\": {\r\n                    \"d\": \"4,-57v0,-58,51,-71,110,-74v33,-1,45,16,59,35v1,14,2,39,-7,42v-24,-2,-73,13,-99,11v-2,2,-2,3,-2,3v0,3,12,8,37,15v21,0,69,9,31,22v-9,14,-34,6,-56,6v-27,-5,-73,-28,-73,-60xm123,-102v-22,2,-68,5,-65,26v24,-2,66,5,79,-6v-5,-13,-1,-13,-14,-20\",\r\n                    \"w\": 182\r\n                },\r\n                \"f\": {\r\n                    \"d\": \"6,-59v6,-29,53,-4,53,-43v0,-64,29,-118,84,-150v45,-25,167,-24,155,51v-1,2,-7,6,0,6r-10,2v-45,-58,-165,-39,-186,39v-7,26,-11,42,-9,62v44,8,95,-21,135,-7v-12,25,-39,21,-76,30v-19,5,-18,7,-54,19v-2,8,15,32,17,35v-6,25,-26,26,-40,-5r-15,-24v-41,10,-44,12,-54,-15\",\r\n                    \"w\": 234\r\n                },\r\n                \"g\": {\r\n                    \"d\": \"132,-97v30,27,21,75,30,117v-12,31,-11,66,-36,103v-32,46,-105,83,-167,39v-31,-21,-49,-29,-51,-75v-2,-37,77,-50,121,-57v37,-6,68,-10,95,-11v7,-6,3,-32,4,-46v0,0,-1,1,-1,2v0,-18,-5,-31,-14,-45v-44,5,-79,20,-94,-18v3,-54,73,-54,125,-50v12,7,12,13,4,25v-30,-11,-76,8,-90,20v23,3,50,-16,74,-4xm-34,121v60,53,168,1,159,-86v-47,-7,-93,24,-142,30v-12,7,-45,19,-42,29v0,10,8,19,25,27\",\r\n                    \"w\": 188\r\n                },\r\n                \"h\": {\r\n                    \"d\": \"100,-310v11,-2,10,19,11,20v-11,52,-40,133,-53,189v-6,30,-9,37,-9,47v27,0,113,-34,143,-34v42,0,31,47,39,79v0,4,-5,17,-16,16v4,2,11,3,4,6v-24,-1,-28,-34,-25,-64v-1,-1,-2,-3,-5,-5v-51,0,-110,38,-162,51v-9,1,-15,-15,-16,-23v17,-89,39,-141,71,-264v0,-9,6,-19,18,-18\",\r\n                    \"w\": 251\r\n                },\r\n                \"i\": {\r\n                    \"d\": \"62,-209v7,18,9,23,-5,38v-23,-6,-21,-18,-11,-36v2,0,8,-1,16,-2xm34,-7v-18,-21,-8,-73,-1,-106v7,-10,20,-8,23,6v-1,36,7,72,-2,104v-8,2,-8,0,-20,-4\",\r\n                    \"w\": 80\r\n                },\r\n                \"j\": {\r\n                    \"d\": \"88,-191v5,28,-18,40,-28,21v0,-20,12,-29,28,-21xm82,-99v28,-1,16,35,16,61v0,60,-19,150,-35,202v-12,8,-19,31,-35,16v-32,-7,-43,-19,-56,-44r2,-17v11,4,49,45,61,18v10,-55,27,-107,30,-171v0,-16,0,-59,17,-65\",\r\n                    \"w\": 120\r\n                },\r\n                \"k\": {\r\n                    \"d\": \"59,-66v33,26,114,37,155,62v8,-4,22,-2,19,-17v0,-4,-12,-11,-30,-24v-36,-25,-54,-22,-99,-33v14,-21,119,-13,103,-63r-16,-7r-123,47r25,-93v-3,-15,16,-49,18,-81v1,-15,-21,-14,-25,-3v-31,82,-49,168,-75,257v2,2,22,30,27,10v2,-5,4,-9,9,-11v4,-16,4,-15,12,-44\",\r\n                    \"w\": 236\r\n                },\r\n                \"l\": {\r\n                    \"d\": \"66,-300v21,-6,37,23,30,55v-10,51,-28,135,-28,208v0,11,6,36,-13,37v-29,-5,-30,-48,-25,-83r28,-177v-6,-17,1,-29,8,-40\",\r\n                    \"w\": 102\r\n                },\r\n                \"m\": {\r\n                    \"d\": \"348,-59v-2,21,0,57,3,73v-17,3,-30,-1,-32,-16v-8,-7,-5,-44,-13,-70v-35,3,-82,49,-111,70v-12,8,-40,4,-39,-15r2,-56v-1,-13,4,-28,-8,-29v-35,8,-79,72,-115,87v-6,2,-20,-18,-21,-22v1,-20,14,-105,39,-64r8,15v17,-14,72,-56,93,-54v27,3,49,40,43,80v24,-2,66,-55,124,-53v11,14,28,23,27,54\",\r\n                    \"w\": 368\r\n                },\r\n                \"n\": {\r\n                    \"d\": \"121,-136v37,6,62,54,62,111v0,32,-16,25,-31,17v-18,-30,-5,-45,-22,-85v-37,-13,-71,55,-92,65v-20,-3,-39,-39,-21,-62v2,-12,3,-15,11,-30v12,-8,20,11,29,12\",\r\n                    \"w\": 194\r\n                },\r\n                \"o\": {\r\n                    \"d\": \"108,-139v52,-24,104,18,104,63v0,59,-66,67,-114,83v-52,-2,-115,-50,-80,-105v23,-18,52,-35,90,-41xm45,-60v16,54,125,16,131,-23v-12,-59,-129,-8,-131,23\",\r\n                    \"w\": 217\r\n                },\r\n                \"p\": {\r\n                    \"d\": \"82,14v-10,12,-8,117,-24,142v-15,2,-19,0,-29,-13v0,-76,9,-113,22,-192v14,-27,35,-6,37,13v0,8,-3,21,-7,38v2,2,3,2,4,2v26,-9,116,-33,126,-72v-7,-17,-24,-33,-49,-31v-40,3,-116,13,-116,47v-5,7,-2,17,-16,20v-17,-12,-18,-20,-12,-38v8,-25,74,-61,110,-59v55,-15,113,15,118,70v-15,52,-84,79,-146,83v-5,0,-11,-4,-18,-10\",\r\n                    \"w\": 251\r\n                },\r\n                \"q\": {\r\n                    \"d\": \"144,-147v27,-8,89,-3,97,31v-9,29,-42,-4,-73,1v-32,6,-118,20,-111,49v0,7,13,13,21,13v21,0,78,-24,104,-34v2,0,9,8,22,21v1,1,1,2,1,5v-27,90,-22,70,-43,203v11,15,-15,54,-33,33v-6,-8,-10,-20,-3,-28v1,-72,5,-114,15,-172v-35,3,-35,10,-59,8v-41,-4,-98,-41,-56,-85v33,-34,59,-27,118,-45\",\r\n                    \"w\": 248\r\n                },\r\n                \"r\": {\r\n                    \"d\": \"242,-117v2,22,5,10,-14,23v-73,-7,-166,-23,-174,56v-8,6,-3,20,-8,36v-29,10,-40,-9,-33,-46v6,-31,7,-69,32,-55v58,-37,66,-42,175,-19v3,5,15,4,22,5\",\r\n                    \"w\": 229\r\n                },\r\n                \"s\": {\r\n                    \"d\": \"154,-151v19,1,27,24,13,32v-4,1,-22,4,-53,7v-16,8,-22,-2,-39,9v23,21,89,16,96,62v-13,24,-85,35,-124,42v-9,-3,-18,-3,-27,0v-6,-4,-21,-16,-8,-25v30,-6,83,-13,102,-24v-17,-16,-80,-33,-97,-48v-3,-2,-4,-7,-4,-15v-6,-6,3,-13,15,-18v22,-9,94,-23,126,-22\",\r\n                    \"w\": 188\r\n                },\r\n                \"t\": {\r\n                    \"d\": \"85,-150v10,-41,35,-126,65,-134v4,1,24,19,11,36v-17,22,-29,57,-36,104v26,8,50,-7,73,5v14,0,22,3,22,9v-1,19,-44,18,-57,23v-10,1,-46,0,-54,10v-10,24,-4,67,-20,98v-21,-3,-26,1,-26,-20v0,-9,2,-36,8,-81v-15,-13,-81,9,-77,-27v4,-38,71,6,91,-23\",\r\n                    \"w\": 194\r\n                },\r\n                \"u\": {\r\n                    \"d\": \"207,-136v-1,-2,11,-14,14,-13v6,0,10,7,10,22v-3,40,-23,56,-40,82v-13,19,-62,43,-93,43v-67,-2,-111,-75,-71,-133v26,-3,21,29,19,49v-1,27,26,44,57,42v41,-2,93,-55,104,-92\",\r\n                    \"w\": 242\r\n                },\r\n                \"v\": {\r\n                    \"d\": \"24,-127r52,71v42,-16,70,-54,124,-65v5,4,8,7,8,11v-8,19,-4,8,-33,32v0,1,-1,3,-1,5v-61,45,-93,68,-97,68v-40,-15,-50,-72,-68,-100v6,-14,10,-22,15,-22\",\r\n                    \"w\": 214\r\n                },\r\n                \"w\": {\r\n                    \"d\": \"15,-139v38,-2,27,57,45,86v30,2,67,-66,101,-78v26,6,36,69,60,78v47,-35,51,-54,119,-104v3,0,7,-2,15,-4v19,23,-9,28,-21,49v-33,28,-68,90,-107,109v-10,6,-52,-47,-72,-71v-20,17,-85,74,-97,73v-38,7,-41,-98,-52,-122v0,-1,3,-7,9,-16\",\r\n                    \"w\": 325\r\n                },\r\n                \"x\": {\r\n                    \"d\": \"95,-124v22,-13,78,-32,99,-31v16,0,23,6,23,18v0,22,-17,11,-49,21v-3,0,-45,20,-42,24v0,1,2,4,8,10v20,24,49,41,44,80v-35,3,-27,-9,-60,-44v-40,-43,-37,-26,-79,9v-1,1,-2,3,-3,8v-12,8,-28,10,-27,-11v-6,-8,45,-65,48,-65v-17,-21,-61,-52,-24,-68v9,0,48,37,62,49\",\r\n                    \"w\": 223\r\n                },\r\n                \"y\": {\r\n                    \"d\": \"44,-65v22,33,70,4,99,-8v5,-4,28,-15,41,-31r17,0v25,47,-26,70,-40,114v-5,4,-9,8,-10,21v-16,12,-11,33,-27,51v-5,18,-12,43,-23,71v-1,-1,-2,34,-18,29v-12,1,-22,-12,-22,-23v20,-70,24,-65,68,-177v-47,16,-111,8,-116,-39v-11,-13,-7,-62,8,-62v18,0,22,26,23,54\",\r\n                    \"w\": 216\r\n                },\r\n                \"z\": {\r\n                    \"d\": \"189,-43v9,-1,46,-6,41,12v0,7,-5,13,-15,14v-45,6,-148,24,-181,13v0,-3,-5,-8,-14,-15v5,-44,66,-46,90,-85v-15,-18,-84,21,-84,-14v0,-10,5,-17,14,-18v33,-3,79,-13,109,-3v4,-2,14,11,12,15v0,23,-26,51,-78,84v28,10,73,-3,106,-3\",\r\n                    \"w\": 244\r\n                },\r\n                \"{\": {\r\n                    \"d\": \"94,-303v27,-9,90,-14,79,26v-20,17,-55,-5,-87,13v-4,1,-6,4,-6,8v33,42,31,44,7,85v-6,10,-13,16,-13,13v5,6,17,17,15,31r-33,78v7,35,28,49,57,63r49,0v7,42,-51,41,-86,20v-43,-13,-51,-51,-56,-89v-2,-25,25,-54,27,-71v-3,-4,-46,-5,-41,-21v2,-10,-3,-29,11,-25v2,0,51,-17,52,-38v4,-3,-25,-23,-25,-49v0,-41,8,-30,50,-44\",\r\n                    \"w\": 179\r\n                },\r\n                \"|\": {\r\n                    \"d\": \"30,-308v26,5,14,50,15,80v5,78,-8,153,-3,225v-2,15,-1,31,-11,36v-8,-3,-25,-22,-25,-32r9,-183v0,-40,0,-78,1,-112v0,-4,9,-15,14,-14\",\r\n                    \"w\": 63\r\n                },\r\n                \"}\": {\r\n                    \"d\": \"47,-298v34,-17,118,-18,112,36v6,25,-76,98,-69,103v4,16,39,7,44,28v7,34,-34,17,-37,39v8,29,49,83,23,123v-15,23,-43,26,-73,46v-34,8,-43,11,-49,-17v1,-15,30,-15,33,-20v24,-12,70,-27,55,-61v-14,-33,-37,-68,-19,-103v-46,-50,46,-100,60,-141v-10,-16,-68,6,-77,-12\",\r\n                    \"w\": 143\r\n                },\r\n                \"~\": {\r\n                    \"d\": \"7,-254v2,-6,59,-50,67,-46v11,-1,35,19,46,26v5,0,27,-10,66,-31v21,8,-1,25,-7,38v-27,21,-48,31,-65,31v-24,-11,-37,-39,-65,-9v-7,7,-26,36,-42,11v3,-5,-3,-17,0,-20\",\r\n                    \"w\": 199\r\n                },\r\n                \"\\u00a0\": {\r\n                    \"w\": 179\r\n                },\r\n                \"\\u00a1\": {\r\n                    \"d\": \"86,-197v8,16,-7,41,-24,25v-11,-11,-4,-16,-3,-29v13,0,15,-2,27,4xm46,-107v4,-8,11,-16,23,-7v19,26,-5,57,-6,87v-7,0,-5,18,-9,28v0,14,-17,52,-11,70v-2,7,-15,28,-25,12v-4,-6,-15,-7,-6,-16v2,-39,14,-96,34,-174\",\r\n                    \"w\": 95\r\n                },\r\n                \"\\u00a2\": {\r\n                    \"d\": \"105,-188v13,-12,14,-18,26,-15v7,23,7,15,-3,49v6,0,18,14,17,20v-3,5,-12,19,-26,13v-14,1,-14,5,-16,21v10,10,46,-13,38,18v-9,17,-23,16,-54,20v-17,16,-4,55,-29,60v-37,-10,19,-64,-24,-71v-20,-10,-37,-47,-6,-62v23,-20,73,-4,77,-53xm65,-101v4,-9,7,-8,3,-13v-14,4,-22,10,-3,13\",\r\n                    \"w\": 154\r\n                },\r\n                \"\\u00a3\": {\r\n                    \"d\": \"153,-170v3,22,62,0,49,39v-18,6,-31,12,-58,9v-12,-1,-17,30,-23,39v19,26,50,56,91,35v9,-2,27,-13,27,4v0,27,-27,39,-58,42v-32,-5,-59,-19,-78,-39v-6,1,-35,44,-57,39v-25,0,-37,-15,-37,-46v0,-41,43,-53,73,-50v4,1,12,-18,12,-21v-7,-15,-49,0,-44,-30v-2,-31,31,-16,60,-19v16,-30,25,-119,93,-113v16,2,75,16,50,44v-4,5,-7,7,-12,8v-18,-12,-32,-18,-41,-18v-35,-1,-38,52,-47,77xm43,-45v4,5,12,-2,11,-9v-1,2,-12,1,-11,9\",\r\n                    \"w\": 242\r\n                },\r\n                \"\\u00a4\": {\r\n                    \"d\": \"308,-133r-200,16v-2,1,-6,4,-10,10v70,-2,144,-14,211,-8v3,0,8,4,13,8v-1,4,-3,9,-9,17v-57,11,-164,6,-219,25v26,32,112,25,173,25v9,0,35,2,35,19v0,9,-4,13,-12,14v-115,12,-146,23,-211,-19v-12,-4,-22,-9,-25,-27v-6,-29,-61,3,-43,-49v17,-1,36,7,42,-12v-32,7,-36,-39,-11,-40v29,14,63,-25,73,-30v52,-25,72,-44,142,-44v23,0,21,41,-1,39v-35,-3,-61,9,-102,31v2,2,5,4,8,4v18,-6,101,-9,115,-9v7,0,55,13,31,30\",\r\n                    \"w\": 312\r\n                },\r\n                \"\\u20ac\": {\r\n                    \"d\": \"308,-133r-200,16v-2,1,-6,4,-10,10v70,-2,144,-14,211,-8v3,0,8,4,13,8v-1,4,-3,9,-9,17v-57,11,-164,6,-219,25v26,32,112,25,173,25v9,0,35,2,35,19v0,9,-4,13,-12,14v-115,12,-146,23,-211,-19v-12,-4,-22,-9,-25,-27v-6,-29,-61,3,-43,-49v17,-1,36,7,42,-12v-32,7,-36,-39,-11,-40v29,14,63,-25,73,-30v52,-25,72,-44,142,-44v23,0,21,41,-1,39v-35,-3,-61,9,-102,31v2,2,5,4,8,4v18,-6,101,-9,115,-9v7,0,55,13,31,30\",\r\n                    \"w\": 312\r\n                },\r\n                \"\\u00a5\": {\r\n                    \"d\": \"31,-248v30,-3,64,64,74,59v37,-22,77,-65,107,-82v20,-11,34,18,21,32v-28,19,-52,38,-70,57v-18,8,-40,21,-35,60v2,19,39,7,64,7v25,0,16,21,2,27v-36,16,-46,8,-68,18v6,11,101,-20,66,24v-21,11,-42,12,-75,20v-2,1,-5,6,-10,18v-8,3,-11,10,-24,8v-7,-17,-2,-18,-9,-26v-13,5,-39,3,-53,-2v-10,-17,-7,-27,0,-34v23,-1,45,1,64,-5v-11,-7,-28,-4,-64,-6v-13,-8,-15,-24,-6,-35v33,-2,102,9,76,-37v-14,-14,-33,-38,-60,-66v-10,-10,-8,-28,0,-37\",\r\n                    \"w\": 219\r\n                },\r\n                \"\\u00a7\": {\r\n                    \"d\": \"141,-115v12,10,29,36,28,56v-4,68,-129,69,-152,16v-1,-12,-10,-22,8,-23v17,3,47,21,67,23v16,1,40,-8,38,-21v-8,-49,-119,-30,-117,-85v1,-28,15,-45,-3,-64v-1,-53,55,-61,103,-62v15,-5,6,-5,20,-2v16,17,23,27,23,30v-1,26,-29,7,-45,7v-21,0,-51,2,-62,17v19,14,87,8,97,43v18,14,16,57,-5,65xm64,-147r57,17v10,-28,-22,-43,-47,-44v-25,-1,-35,19,-10,27\",\r\n                    \"w\": 174\r\n                },\r\n                \"\\u00a8\": {\r\n                    \"d\": \"124,-259v0,9,-4,13,-12,13v-18,0,-22,-21,-17,-35v19,-1,30,1,29,22xm23,-285v7,2,30,9,29,18v1,10,-9,19,-18,19v-19,0,-28,-26,-11,-37\",\r\n                    \"w\": 136\r\n                },\r\n                \"\\u00a9\": {\r\n                    \"d\": \"102,-29v-74,5,-124,-84,-70,-140v22,-22,53,-35,97,-38v46,-4,88,49,74,100v0,44,-51,75,-101,78xm96,-66v42,-3,75,-23,75,-69v0,-23,-4,-38,-44,-38v-16,0,-33,6,-49,20v36,-4,55,-12,62,20v-5,16,-49,1,-50,21v10,15,53,-14,54,11v0,18,-14,27,-42,27v-22,1,-46,-11,-46,-31v0,-25,7,-39,20,-44v-1,-1,-2,-2,-3,-2v-51,22,-32,89,23,85\",\r\n                    \"w\": 217\r\n                },\r\n                \"\\u00aa\": {\r\n                    \"d\": \"6,-265v1,-31,58,-53,80,-22v-11,14,25,28,25,36v-2,8,-15,12,-27,10v-22,-29,-68,19,-78,-24xm52,-281v-8,1,-24,10,-9,13v11,1,24,-10,9,-13\",\r\n                    \"w\": 117\r\n                },\r\n                \"\\u00ab\": {\r\n                    \"d\": \"191,-64v16,6,87,37,53,63v-39,-9,-71,-28,-107,-40v-14,-13,-13,-34,10,-47v27,-15,48,-55,84,-62v9,-2,21,10,21,18r-13,21v-16,5,-44,22,-51,41v0,4,1,6,3,6xm71,-65v17,6,87,35,55,62v-39,-8,-66,-27,-108,-40v-14,-13,-13,-36,10,-46v23,-18,50,-56,84,-63v9,-2,21,10,21,18r-13,22v-20,6,-32,17,-51,37v0,3,-1,11,2,10\",\r\n                    \"w\": 265\r\n                },\r\n                \"\\u00ac\": {\r\n                    \"d\": \"141,-99v47,7,103,-3,149,6v14,24,18,15,10,39v-10,34,-7,31,-26,76v-4,6,-15,8,-16,21v-4,2,-4,1,-13,5v-22,-33,-4,-33,16,-104v-5,-9,-28,-4,-38,-6r-183,4v-14,0,-41,-29,-17,-36v31,-9,82,5,118,-5\",\r\n                    \"w\": 315\r\n                },\r\n                \"\\u00ae\": {\r\n                    \"d\": \"75,-194v78,-29,116,9,130,84v-2,42,-22,47,-57,67v-74,20,-161,-19,-129,-110v6,-18,29,-34,57,-40xm46,-86v51,36,84,21,129,-15v7,-15,0,-39,-10,-49v-13,-37,-49,-26,-86,-18v-28,7,-49,46,-33,82xm72,-123v-5,-43,68,-57,75,-14v-17,26,-18,17,3,32v2,25,-25,18,-45,7r-4,-4v-1,8,-3,20,-12,24v-10,-3,-21,-34,-17,-45xm112,-135v-10,-1,-20,13,-9,14v6,-6,9,-11,9,-14\",\r\n                    \"w\": 217\r\n                },\r\n                \"\\u00af\": {\r\n                    \"d\": \"63,-295v28,-7,73,10,105,7v11,1,6,8,5,19v-37,21,-72,11,-136,11v-23,0,-31,-14,-27,-36v12,-15,40,0,53,-1\",\r\n                    \"w\": 183\r\n                },\r\n                \"\\u00b0\": {\r\n                    \"d\": \"106,-268v0,36,-35,38,-51,46v-48,5,-60,-58,-25,-78v33,-11,76,-9,76,32xm38,-257v16,7,39,2,38,-17v-13,-9,-28,-1,-32,11v-5,3,-7,0,-6,6\",\r\n                    \"w\": 114\r\n                },\r\n                \"\\u00b1\": {\r\n                    \"d\": \"93,-163v-7,46,76,-4,46,47v-14,6,-27,13,-38,8v-24,2,-14,28,-28,44r-14,0v-7,-12,-5,-15,-7,-33v-12,-7,-41,-1,-37,-24v2,-11,23,-17,36,-14r28,-38v4,0,9,4,14,10xm113,-27v-12,18,-58,27,-85,24v-16,2,-22,-23,-13,-36v28,-7,85,-11,98,12\",\r\n                    \"w\": 151\r\n                },\r\n                \"\\u00b4\": {\r\n                    \"d\": \"52,-284v29,-11,50,-34,62,-14v3,12,-86,54,-94,56v-14,0,-16,-12,-12,-23v11,-5,25,-11,44,-19\",\r\n                    \"w\": 120\r\n                },\r\n                \"\\u00b6\": {\r\n                    \"d\": \"121,-237v21,-9,44,-13,63,-1v-1,7,5,6,7,11r-4,190v-2,33,4,39,-15,40v-16,1,-10,-20,-10,-33r4,-161v0,-17,-1,-34,-16,-25v2,10,1,23,1,35v-9,46,-6,75,-15,156v-3,4,-7,5,-12,5v-17,-10,-3,-89,-10,-115v-43,14,-98,10,-101,-29v-4,-53,59,-63,104,-75v3,1,4,2,4,2xm95,-204v2,9,-30,50,1,50v35,0,23,-13,29,-43v0,-1,-2,-7,-4,-15v-12,-1,-14,2,-26,8\",\r\n                    \"w\": 206\r\n                },\r\n                \"\\u00b8\": {\r\n                    \"d\": \"74,16v32,2,49,14,55,36v-3,7,-14,31,-29,33v-28,4,-57,11,-88,14v-19,-6,-13,-31,8,-33v20,-1,59,-5,73,-14v-17,-14,-68,8,-53,-37v9,-10,2,-28,24,-30v8,8,13,17,10,31\",\r\n                    \"w\": 129\r\n                },\r\n                \"\\u00ba\": {\r\n                    \"d\": \"13,-273v1,-31,56,-41,83,-18v36,8,14,48,-9,52v-35,6,-64,-5,-74,-34xm81,-269v-7,-7,-20,-11,-29,-6v5,13,13,11,29,6\",\r\n                    \"w\": 128\r\n                },\r\n                \"\\u00bb\": {\r\n                    \"d\": \"120,-129v9,-33,48,-10,64,5v9,20,86,52,50,86v-36,11,-66,31,-107,40v-6,-7,-9,-13,-9,-17v-2,-13,50,-46,63,-46v11,-18,-33,-42,-48,-47xm1,-128v10,-33,46,-8,64,6v8,19,86,50,51,85v-40,13,-69,30,-108,40v-6,-7,-8,-12,-8,-16v-2,-14,50,-46,63,-47v7,-13,-9,-20,-19,-30v-10,-9,-20,-15,-30,-17\",\r\n                    \"w\": 252\r\n                },\r\n                \"\\u00bf\": {\r\n                    \"d\": \"181,-247v3,1,31,2,29,15v-4,22,-37,27,-41,4v1,-5,7,-20,12,-19xm161,-34v-45,-1,-105,19,-124,51v0,11,18,17,54,17v39,0,82,-13,112,4v-10,35,-58,31,-100,31v-47,0,-80,-10,-99,-31v-10,-56,22,-73,64,-90v8,-3,32,-9,74,-18v21,-15,7,-62,22,-92v-1,-5,-1,-11,4,-12v16,0,24,7,24,22v-8,30,-8,73,-17,111v-3,5,-7,7,-14,7\",\r\n                    \"w\": 213\r\n                },\r\n                \"\\u00c0\": {\r\n                    \"d\": \"161,-217v20,53,23,124,54,170v-2,20,-34,9,-42,0v-27,-12,-78,-18,-101,-18v-26,6,-29,51,-54,63v-18,-4,-19,-30,-3,-38v5,-9,15,-16,8,-29v1,-12,23,-9,26,-19v6,-10,11,-20,20,-27r70,-121v12,-4,16,4,22,19xm82,-91v17,3,62,7,86,13v-13,-33,-13,-80,-29,-109v-15,30,-38,63,-57,96xm150,-268v14,10,54,14,37,41v-28,-7,-62,-22,-100,-42v-2,-3,-2,-26,5,-23v16,4,42,17,58,24\"\r\n                },\r\n                \"\\u00c1\": {\r\n                    \"d\": \"161,-217v20,53,23,124,54,170v-2,20,-34,9,-42,0v-27,-12,-78,-18,-101,-18v-26,6,-29,51,-54,63v-18,-4,-19,-30,-3,-38v5,-9,15,-16,8,-29v1,-12,23,-9,26,-19v6,-10,11,-20,20,-27r70,-121v12,-4,16,4,22,19xm82,-91v17,3,62,7,86,13v-13,-33,-13,-80,-29,-109v-15,30,-38,63,-57,96xm84,-250v31,-5,83,-53,100,-31v0,5,-11,15,-35,28v-16,5,-51,28,-53,25v-14,1,-16,-11,-12,-22\"\r\n                },\r\n                \"\\u00c2\": {\r\n                    \"d\": \"161,-217v20,53,23,124,54,170v-2,20,-34,9,-42,0v-27,-12,-78,-18,-101,-18v-26,6,-29,51,-54,63v-18,-4,-19,-30,-3,-38v5,-9,15,-16,8,-29v1,-12,23,-9,26,-19v6,-10,11,-20,20,-27r70,-121v12,-4,16,4,22,19xm82,-91v17,3,62,7,86,13v-13,-33,-13,-80,-29,-109v-15,30,-38,63,-57,96xm202,-219v-27,-6,-40,-26,-61,-37v-21,7,-39,46,-65,23v-2,-4,-3,-10,-4,-14v19,-4,43,-32,61,-43v27,6,40,22,62,37v12,8,18,17,18,25v0,6,-3,9,-11,9\"\r\n                },\r\n                \"\\u00c3\": {\r\n                    \"d\": \"161,-217v20,53,23,124,54,170v-2,20,-34,9,-42,0v-27,-12,-78,-18,-101,-18v-26,6,-29,51,-54,63v-18,-4,-19,-30,-3,-38v5,-9,15,-16,8,-29v1,-12,23,-9,26,-19v6,-10,11,-20,20,-27r70,-121v12,-4,16,4,22,19xm82,-91v17,3,62,7,86,13v-13,-33,-13,-80,-29,-109v-15,30,-38,63,-57,96xm100,-285v26,-19,54,19,69,22v4,0,15,-5,34,-13v23,-9,22,-17,31,-12v3,11,-9,9,-7,21v-26,20,-46,30,-59,30v-3,3,-50,-26,-49,-29v-12,1,-31,35,-51,32v-3,-8,-5,-14,-5,-18v10,-9,16,-17,37,-33\"\r\n                },\r\n                \"\\u00c4\": {\r\n                    \"d\": \"161,-217v20,53,23,124,54,170v-2,20,-34,9,-42,0v-27,-12,-78,-18,-101,-18v-26,6,-29,51,-54,63v-18,-4,-19,-30,-3,-38v5,-9,15,-16,8,-29v1,-12,23,-9,26,-19v6,-10,11,-20,20,-27r70,-121v12,-4,16,4,22,19xm82,-91v17,3,62,7,86,13v-13,-33,-13,-80,-29,-109v-15,30,-38,63,-57,96xm187,-259v0,8,-4,13,-12,13v-18,0,-21,-20,-16,-34v18,-1,28,2,28,21xm90,-284v7,3,28,11,28,18v0,9,-9,18,-18,17v-17,0,-25,-24,-10,-35\"\r\n                },\r\n                \"\\u00c5\": {\r\n                    \"d\": \"161,-217v20,53,23,124,54,170v-2,20,-34,9,-42,0v-27,-12,-78,-18,-101,-18v-26,6,-29,51,-54,63v-18,-4,-19,-30,-3,-38v5,-9,15,-16,8,-29v1,-12,23,-9,26,-19v6,-10,11,-20,20,-27r70,-121v12,-4,16,4,22,19xm82,-91v17,3,62,7,86,13v-13,-33,-13,-80,-29,-109v-15,30,-38,63,-57,96xm112,-239v-31,-17,-9,-61,29,-56v12,2,22,3,33,12v24,39,-30,62,-62,44xm119,-262v2,14,41,8,41,-4v0,-4,-8,-6,-24,-9v-10,-2,-17,10,-17,13\"\r\n                },\r\n                \"\\u00c6\": {\r\n                    \"d\": \"335,-259v0,30,-102,12,-122,34v10,21,2,79,16,100v24,-6,59,-13,86,-16v23,-2,32,21,13,26r-103,29v-3,22,-4,38,8,43v28,-5,60,-6,86,-14v5,-1,14,7,14,11v6,16,-90,40,-107,40v-29,0,-39,-19,-32,-46v-2,-4,0,-26,-9,-28v-29,2,-58,6,-88,6v-31,0,-40,74,-82,73v-18,-23,4,-37,12,-50v40,-65,112,-126,165,-207v20,-17,69,-11,112,-13v21,0,31,4,31,12xm123,-111v28,1,44,-2,67,-10v-4,-22,5,-49,-7,-65v-3,6,-65,61,-60,75\",\r\n                    \"w\": 348\r\n                },\r\n                \"\\u00c7\": {\r\n                    \"d\": \"48,-108v-12,70,90,71,159,67r138,-9v9,-1,7,9,7,17v-37,16,-80,27,-103,21v-14,9,-40,3,-67,9v-30,0,-64,1,-100,-10v-6,-1,-10,-4,-10,-8v-32,-12,-46,-31,-63,-56v-16,-61,47,-103,83,-121v82,-42,118,-45,200,-60v21,-4,36,34,11,37v-90,11,-148,31,-225,77v-12,8,-23,20,-30,36xm172,18v29,4,47,14,53,35v-2,7,-14,31,-27,31v-28,7,-55,9,-84,14v-18,-5,-13,-32,7,-32v21,0,55,-5,69,-13v-16,-14,-63,10,-50,-35v9,-10,1,-27,23,-29v7,8,11,16,9,29\",\r\n                    \"w\": 331\r\n                },\r\n                \"\\u00c8\": {\r\n                    \"d\": \"49,-160v1,-4,-10,-9,-15,-8v-15,-35,32,-30,57,-31r142,-8v2,1,30,7,40,10v-52,16,-133,17,-190,30v-7,9,-12,24,-15,47v26,10,102,-6,141,3v1,3,1,6,2,10v-36,18,-92,12,-149,21v-11,9,-16,41,-16,51v55,-1,111,-21,168,-13v15,-8,48,1,31,18v-53,16,-130,13,-198,29r-39,-8v-4,-19,17,-53,20,-76v-1,0,-7,-11,-9,-18v18,-7,22,-28,30,-57xm184,-236v6,9,5,13,0,23v-28,-7,-62,-21,-100,-41v-3,-2,-3,-27,5,-23v34,11,60,25,95,41\",\r\n                    \"w\": 252\r\n                },\r\n                \"\\u00c9\": {\r\n                    \"d\": \"49,-160v1,-4,-10,-9,-15,-8v-15,-35,32,-30,57,-31r142,-8v2,1,30,7,40,10v-52,16,-133,17,-190,30v-7,9,-12,24,-15,47v26,10,102,-6,141,3v1,3,1,6,2,10v-36,18,-92,12,-149,21v-11,9,-16,41,-16,51v55,-1,111,-21,168,-13v15,-8,48,1,31,18v-53,16,-130,13,-198,29r-39,-8v-4,-19,17,-53,20,-76v-1,0,-7,-11,-9,-18v18,-7,22,-28,30,-57xm133,-248v27,-11,48,-32,59,-14v3,11,-79,52,-88,53v-14,1,-16,-11,-12,-21v10,-4,23,-11,41,-18\",\r\n                    \"w\": 252\r\n                },\r\n                \"\\u00ca\": {\r\n                    \"d\": \"49,-160v1,-4,-10,-9,-15,-8v-15,-35,32,-30,57,-31r142,-8v2,1,30,7,40,10v-52,16,-133,17,-190,30v-7,9,-12,24,-15,47v26,10,102,-6,141,3v1,3,1,6,2,10v-36,18,-92,12,-149,21v-11,9,-16,41,-16,51v55,-1,111,-21,168,-13v15,-8,48,1,31,18v-53,16,-130,13,-198,29r-39,-8v-4,-19,17,-53,20,-76v-1,0,-7,-11,-9,-18v18,-7,22,-28,30,-57xm199,-211v-27,-6,-39,-26,-60,-37v-21,7,-40,47,-65,22v-2,-7,-2,-7,-4,-13v18,-5,44,-31,61,-43v27,6,41,22,62,37v12,9,18,17,18,25v0,6,-4,9,-12,9\",\r\n                    \"w\": 252\r\n                },\r\n                \"\\u00cb\": {\r\n                    \"d\": \"49,-160v1,-4,-10,-9,-15,-8v-15,-35,32,-30,57,-31r142,-8v2,1,30,7,40,10v-52,16,-133,17,-190,30v-7,9,-12,24,-15,47v26,10,102,-6,141,3v1,3,1,6,2,10v-36,18,-92,12,-149,21v-11,9,-17,41,-17,51v55,0,112,-21,169,-13v15,-8,48,1,31,18v-53,16,-130,13,-198,29r-39,-8v-3,-21,17,-53,20,-76v-1,0,-7,-11,-9,-18v18,-7,22,-28,30,-57xm191,-236v0,8,-4,13,-12,13v-17,0,-19,-19,-16,-34v18,-1,29,1,28,21xm95,-261v7,3,29,9,28,18v0,7,-9,17,-18,17v-18,0,-26,-25,-10,-35\",\r\n                    \"w\": 252\r\n                },\r\n                \"\\u00cc\": {\r\n                    \"d\": \"33,-5v-9,-6,-9,-12,-9,-36v0,-71,8,-119,22,-144v8,-13,14,-20,19,-20v27,20,-11,87,-10,120r-15,76v-1,1,-4,2,-7,4xm72,-247v7,6,55,15,36,40v-28,-7,-61,-21,-99,-41v-3,-2,-3,-27,5,-23v18,3,41,17,58,24\",\r\n                    \"w\": 111\r\n                },\r\n                \"\\u00cd\": {\r\n                    \"d\": \"26,-5v-9,-6,-9,-12,-9,-36v0,-71,7,-119,21,-144v8,-13,14,-20,19,-20v28,19,-7,89,-10,120v-2,21,-8,47,-14,76v-2,1,-2,0,-7,4xm6,-233v31,-6,83,-53,101,-31v2,11,-80,53,-89,53v-14,1,-14,-11,-12,-22\",\r\n                    \"w\": 104\r\n                },\r\n                \"\\u00ce\": {\r\n                    \"d\": \"53,-9v-15,7,-16,-3,-16,-32v0,-71,7,-119,21,-144v8,-13,14,-20,19,-20v28,19,-7,89,-10,120v-2,21,-8,47,-14,76xm137,-209v-27,-6,-40,-26,-61,-37v-8,0,-9,4,-13,10v-11,13,-50,37,-56,0v18,-5,43,-32,61,-43v28,5,40,21,62,36v12,9,18,17,18,25v0,6,-4,9,-11,9\",\r\n                    \"w\": 144\r\n                },\r\n                \"\\u00cf\": {\r\n                    \"d\": \"33,-5v-9,-6,-9,-12,-9,-36v0,-71,8,-119,22,-144v8,-13,14,-20,19,-20v27,20,-11,87,-10,120r-15,76v-1,1,-4,2,-7,4xm111,-222v0,8,-4,12,-12,12v-18,0,-19,-19,-16,-33v18,-1,29,1,28,21xm15,-247v8,2,29,9,28,17v0,21,-37,24,-36,1v0,-7,2,-13,8,-18\",\r\n                    \"w\": 110\r\n                },\r\n                \"\\u00d1\": {\r\n                    \"d\": \"224,-182v1,-17,15,-24,22,-38v20,0,13,10,3,33v-3,36,-25,52,-28,94v-10,24,-30,55,-29,82r-19,7v-32,-8,-36,-70,-58,-111v-2,-23,-7,-27,-19,-54v-28,36,-41,93,-71,133v-9,5,-20,-9,-20,-17r73,-149v9,-24,31,-5,36,7v19,41,31,98,53,139v22,-35,34,-69,50,-118v2,-3,3,-3,7,-8xm203,-257v22,-8,41,-24,65,-26v3,11,-8,9,-7,21v-26,20,-46,31,-59,31v-2,3,-49,-27,-49,-29v-11,0,-32,31,-46,32v-11,-2,-12,-21,-4,-23v4,-6,28,-30,48,-34v17,-4,43,28,52,28\",\r\n                    \"w\": 219\r\n                },\r\n                \"\\u00d2\": {\r\n                    \"d\": \"62,-184v78,-31,249,-50,238,74v-6,65,-102,105,-179,115v-77,-7,-152,-71,-101,-149v2,-5,24,-33,42,-40xm279,-120v14,-38,-47,-64,-85,-61v-20,-9,-41,7,-62,0v-11,7,-54,12,-66,24v0,20,-51,35,-38,66v-1,43,50,67,96,67v44,0,162,-55,155,-96xm161,-262v14,10,52,13,37,41v-28,-7,-62,-21,-100,-41v-3,-3,-3,-26,5,-24v16,5,42,17,58,24\",\r\n                    \"w\": 273\r\n                },\r\n                \"\\u00d3\": {\r\n                    \"d\": \"62,-184v78,-31,249,-50,238,74v-6,65,-102,105,-179,115v-77,-7,-152,-71,-101,-149v2,-5,24,-33,42,-40xm279,-120v14,-38,-47,-64,-85,-61v-20,-9,-41,7,-62,0v-11,7,-54,12,-66,24v0,20,-51,35,-38,66v-1,43,50,67,96,67v44,0,162,-55,155,-96xm142,-250v27,-11,47,-32,59,-14v2,11,-80,53,-89,53v-13,1,-15,-11,-12,-21v10,-5,24,-11,42,-18\",\r\n                    \"w\": 273\r\n                },\r\n                \"\\u00d4\": {\r\n                    \"d\": \"62,-184v78,-31,249,-50,238,74v-6,65,-102,105,-179,115v-77,-7,-152,-71,-101,-149v2,-5,24,-33,42,-40xm279,-120v14,-38,-47,-64,-85,-61v-20,-9,-41,7,-62,0v-11,7,-54,12,-66,24v0,20,-51,35,-38,66v-1,43,50,67,96,67v44,0,162,-55,155,-96xm157,-282v17,18,52,34,54,63v-24,12,-52,-36,-53,-29r-42,34v-23,-4,-6,-31,5,-34v1,1,27,-37,36,-34\",\r\n                    \"w\": 273\r\n                },\r\n                \"\\u00d5\": {\r\n                    \"d\": \"62,-184v78,-31,249,-50,238,74v-6,65,-102,105,-179,115v-77,-7,-152,-71,-101,-149v2,-5,24,-33,42,-40xm279,-120v14,-38,-47,-64,-85,-61v-20,-9,-41,7,-62,0v-11,7,-54,12,-66,24v0,20,-51,35,-38,66v-1,43,50,67,96,67v44,0,162,-55,155,-96xm116,-270v26,-19,54,19,69,22v4,0,15,-5,34,-13v23,-10,22,-16,31,-12v3,11,-8,9,-7,21v-45,28,-47,42,-88,16v-29,-19,-12,-20,-43,2v-8,5,-12,18,-23,15v-13,-3,-12,-20,-4,-23v4,-6,14,-15,31,-28\",\r\n                    \"w\": 273\r\n                },\r\n                \"\\u00d6\": {\r\n                    \"d\": \"62,-184v78,-31,249,-50,238,74v-6,65,-102,105,-179,115v-77,-7,-152,-71,-101,-149v2,-5,24,-33,42,-40xm279,-120v14,-38,-47,-64,-85,-61v-20,-9,-41,7,-62,0v-11,7,-54,12,-66,24v0,20,-51,35,-38,66v-1,43,50,67,96,67v44,0,162,-55,155,-96xm197,-229v0,8,-4,13,-12,13v-17,0,-19,-19,-16,-34v18,-1,29,1,28,21xm101,-254v7,3,28,9,27,18v1,8,-8,17,-17,17v-18,0,-26,-24,-10,-35\",\r\n                    \"w\": 273\r\n                },\r\n                \"\\u00d8\": {\r\n                    \"d\": \"76,-211v41,-13,100,-22,140,-3v26,-19,40,-29,44,-29v10,0,15,7,15,20v0,15,-23,23,-30,35v23,39,29,114,-21,139v-36,19,-102,35,-147,18v-14,-5,-29,29,-46,35v-25,-13,-19,-24,3,-56v-9,-17,-28,-27,-28,-60v0,-38,23,-72,70,-99xm107,-66v55,15,125,-12,123,-70v0,-16,-5,-25,-13,-29r-110,95r0,4xm39,-108v-1,3,17,31,22,27v8,-6,109,-90,123,-106v-15,-11,-43,1,-63,2v-33,10,-80,35,-82,77\",\r\n                    \"w\": 270\r\n                },\r\n                \"\\u00d9\": {\r\n                    \"d\": \"281,-202v6,67,-30,121,-71,152v-3,14,-47,26,-60,39v-41,20,-110,1,-125,-26v-24,-44,-28,-84,-8,-127v12,-26,23,-38,37,-22v-2,2,-3,5,-3,10v-34,26,-30,116,5,134v22,32,86,-1,109,-8v38,-28,104,-64,97,-149v2,-10,7,-8,19,-3xm151,-243v14,10,54,14,37,41v-28,-7,-61,-22,-99,-42v-3,-2,-4,-25,4,-23v16,5,42,17,58,24\",\r\n                    \"w\": 262\r\n                },\r\n                \"\\u00da\": {\r\n                    \"d\": \"281,-202v6,67,-30,121,-71,152v-3,14,-47,26,-60,39v-41,20,-110,1,-125,-26v-24,-44,-28,-84,-8,-127v12,-26,23,-38,37,-22v-2,2,-3,5,-3,10v-34,26,-30,116,5,134v22,32,86,-1,109,-8v38,-28,104,-64,97,-149v2,-10,7,-8,19,-3xm194,-265v3,-1,11,4,11,6v3,12,-81,52,-89,54v-14,0,-13,-9,-12,-22\",\r\n                    \"w\": 262\r\n                },\r\n                \"\\u00db\": {\r\n                    \"d\": \"281,-202v6,67,-30,121,-71,152v-3,14,-47,26,-60,39v-41,20,-110,1,-125,-26v-24,-44,-28,-84,-8,-127v12,-26,23,-38,37,-22v-2,2,-3,5,-3,10v-34,26,-30,116,5,134v22,32,86,-1,109,-8v38,-28,104,-64,97,-149v2,-10,7,-8,19,-3xm150,-266v24,11,58,27,73,46v0,5,-3,6,-10,6v-28,2,-61,-30,-63,-25v-10,0,-57,40,-69,23v3,-10,-8,-15,8,-19v17,-1,34,-29,61,-31\",\r\n                    \"w\": 262\r\n                },\r\n                \"\\u00dc\": {\r\n                    \"d\": \"281,-202v6,67,-30,121,-71,152v-3,14,-47,26,-60,39v-41,20,-110,1,-125,-26v-24,-44,-28,-84,-8,-127v12,-26,23,-38,37,-22v-2,2,-3,5,-3,10v-34,26,-29,116,5,134v22,32,86,-1,109,-8v38,-28,104,-64,97,-149v2,-10,7,-8,19,-3xm197,-227v0,8,-4,13,-12,13v-18,0,-21,-20,-16,-34v18,-1,28,2,28,21xm101,-252v7,3,27,10,27,18v0,8,-9,18,-18,17v-18,-1,-24,-25,-9,-35\",\r\n                    \"w\": 262\r\n                },\r\n                \"\\u00df\": {\r\n                    \"d\": \"33,10v-29,4,-28,-32,-16,-70v18,-58,17,-137,56,-176v12,-24,46,-58,82,-43v20,8,47,24,47,54v0,30,-62,59,-67,90v33,23,56,33,63,63v-18,21,-22,36,-48,54v-24,17,-27,41,-53,16v-2,-19,7,-35,24,-42v15,-13,26,-22,34,-40v-13,-17,-78,-29,-56,-70v-3,-27,64,-54,66,-86v-8,-25,-41,-4,-52,8v-29,30,-47,83,-51,141v-17,25,-8,71,-29,101\"\r\n                },\r\n                \"\\u00e0\": {\r\n                    \"d\": \"118,-53v10,4,55,41,62,47v0,7,-5,16,-12,16r-57,-28v-20,3,-40,19,-61,18v-10,2,-43,-17,-42,-36v0,-14,7,-40,27,-41v39,-26,92,-36,104,9v0,6,-2,11,-9,15v-32,-24,-64,-6,-84,11v8,15,58,-17,72,-11xm99,-137v7,6,56,14,37,40v-28,-7,-62,-21,-100,-41v-2,-3,-2,-26,5,-23v16,4,42,17,58,24\",\r\n                    \"w\": 173\r\n                },\r\n                \"\\u00e1\": {\r\n                    \"d\": \"118,-53v10,4,55,41,62,47v0,7,-5,16,-12,16r-57,-28v-20,3,-40,19,-61,18v-10,2,-43,-17,-42,-36v0,-14,7,-40,27,-41v39,-26,92,-36,104,9v0,6,-2,11,-9,15v-32,-24,-64,-6,-84,11v8,15,58,-17,72,-11xm32,-117v24,-3,85,-55,101,-32v3,11,-80,53,-89,53v-13,2,-14,-10,-12,-21\",\r\n                    \"w\": 173\r\n                },\r\n                \"\\u00e2\": {\r\n                    \"d\": \"118,-53v10,4,55,41,62,47v0,7,-5,16,-12,16r-57,-28v-20,3,-40,19,-61,18v-10,2,-43,-17,-42,-36v0,-14,7,-40,27,-41v39,-26,92,-36,104,9v0,6,-2,11,-9,15v-32,-24,-64,-6,-84,11v8,15,58,-17,72,-11xm147,-97v-27,-6,-39,-26,-60,-37v-21,7,-38,46,-65,23v-2,-5,-3,-10,-4,-14v18,-4,43,-31,61,-42v28,5,40,21,62,36v12,8,18,17,18,25v0,6,-4,9,-12,9\",\r\n                    \"w\": 173\r\n                },\r\n                \"\\u00e3\": {\r\n                    \"d\": \"118,-53v10,4,55,41,62,47v0,7,-5,16,-12,16r-57,-28v-20,3,-40,19,-61,18v-10,2,-43,-17,-42,-36v0,-14,7,-40,27,-41v39,-26,92,-36,104,9v0,6,-2,11,-9,15v-32,-24,-64,-6,-84,11v8,15,58,-17,72,-11xm114,-136v22,-8,41,-24,64,-26v3,11,-7,10,-7,21v-26,20,-45,30,-58,30v-3,3,-49,-26,-49,-28v-10,-1,-32,35,-51,31v-12,-32,8,-29,32,-51v24,-21,54,20,69,23\",\r\n                    \"w\": 173\r\n                },\r\n                \"\\u00e4\": {\r\n                    \"d\": \"118,-53v10,4,55,41,62,47v0,7,-5,16,-12,16r-57,-28v-20,3,-40,19,-61,18v-32,5,-66,-64,-15,-77v39,-26,92,-36,104,9v0,6,-3,11,-9,15v-32,-24,-64,-6,-84,11v8,15,58,-17,72,-11xm142,-119v0,8,-4,13,-12,13v-18,0,-21,-20,-16,-34v18,-1,28,2,28,21xm46,-144v7,3,28,9,27,18v1,8,-9,18,-18,17v-18,-1,-25,-25,-9,-35\",\r\n                    \"w\": 173\r\n                },\r\n                \"\\u00e5\": {\r\n                    \"d\": \"118,-53v10,4,55,41,62,47v0,7,-5,16,-12,16r-57,-28v-20,3,-40,19,-61,18v-10,2,-43,-17,-42,-36v0,-14,7,-40,27,-41v39,-26,92,-36,104,9v0,6,-2,11,-9,15v-32,-24,-64,-6,-84,11v8,15,58,-17,72,-11xm54,-101v-37,-20,-9,-71,34,-65v13,1,25,3,38,13v27,45,-34,73,-72,52xm61,-128v4,20,48,7,49,-5v0,-5,-9,-7,-28,-10v-12,-2,-21,11,-21,15\",\r\n                    \"w\": 173\r\n                },\r\n                \"\\u00e6\": {\r\n                    \"d\": \"145,-44r33,7v2,42,-59,29,-85,16v-6,7,-35,24,-48,15v-19,2,-35,-21,-33,-37v2,-24,5,-19,28,-36v-6,-8,-45,3,-33,-21v21,-22,58,-12,85,-1v6,-5,35,-28,45,-15v20,-4,36,17,36,35v0,23,-4,21,-28,37xm111,-72v12,3,49,-16,19,-17v-5,0,-20,12,-19,17xm74,-50v-14,-4,-48,16,-19,17v4,1,19,-14,19,-17\",\r\n                    \"w\": 184\r\n                },\r\n                \"\\u00e7\": {\r\n                    \"d\": \"108,-118v30,-6,56,21,25,33v-24,-6,-39,5,-75,23v-7,4,-12,12,-15,22v31,28,86,3,128,9v3,28,-29,16,-44,28v-53,15,-106,10,-120,-37v0,-48,62,-70,101,-78xm92,18v23,4,45,12,48,32v-2,6,-12,28,-25,28v-24,6,-50,10,-77,13v-16,-4,-11,-28,7,-29v17,-1,51,-4,63,-12v-14,-15,-57,10,-46,-32v9,-8,0,-25,21,-26v6,6,12,14,9,26\",\r\n                    \"w\": 171\r\n                },\r\n                \"\\u00e8\": {\r\n                    \"d\": \"108,-124v42,-3,70,39,50,73v-22,-1,-70,12,-94,10v-1,1,-2,3,-2,3v0,3,12,7,35,14v18,0,64,7,30,21v-10,14,-31,6,-53,6v-26,-7,-70,-26,-70,-58v0,-54,48,-65,104,-69xm130,-78v-2,-35,-66,-13,-77,3v16,6,62,6,77,-3xm95,-166v7,6,54,14,37,40v-28,-7,-62,-21,-100,-41v-3,-3,-3,-26,5,-24v16,5,42,18,58,25\",\r\n                    \"w\": 161\r\n                },\r\n                \"\\u00e9\": {\r\n                    \"d\": \"108,-124v42,-3,70,39,50,73v-22,-1,-70,12,-94,10v-1,1,-2,3,-2,3v0,3,12,7,35,14v18,0,64,7,30,21v-10,14,-31,6,-53,6v-26,-7,-70,-26,-70,-58v0,-54,48,-65,104,-69xm130,-78v-2,-35,-66,-13,-77,3v16,6,62,6,77,-3xm76,-169v26,-11,48,-32,59,-14v3,10,-80,53,-89,53v-14,1,-14,-10,-12,-21v15,-7,16,-7,42,-18\",\r\n                    \"w\": 161\r\n                },\r\n                \"\\u00ea\": {\r\n                    \"d\": \"108,-124v42,-3,70,39,50,73v-22,-1,-70,12,-94,10v-1,1,-2,3,-2,3v0,3,12,7,35,14v18,0,64,7,30,21v-10,14,-31,6,-53,6v-26,-7,-70,-26,-70,-58v0,-54,48,-65,104,-69xm130,-78v-2,-35,-66,-13,-77,3v16,6,62,6,77,-3xm145,-129v-27,-6,-39,-26,-60,-37v-8,0,-10,4,-14,10v-11,15,-51,34,-56,0v17,-4,44,-32,61,-43v28,5,41,21,63,36v12,8,17,17,17,25v0,6,-3,9,-11,9\",\r\n                    \"w\": 161\r\n                },\r\n                \"\\u00eb\": {\r\n                    \"d\": \"108,-124v42,-3,70,39,50,73v-22,-1,-70,12,-94,10r-3,3v0,3,12,7,36,14v18,0,64,7,30,21v-10,14,-31,6,-53,6v-26,-7,-67,-27,-71,-58v7,-52,48,-65,105,-69xm130,-78v-2,-35,-66,-13,-77,3v16,6,62,6,77,-3xm140,-144v0,8,-4,12,-12,12v-18,0,-19,-19,-16,-33v18,-1,29,1,28,21xm44,-169v7,3,28,9,28,17v0,9,-9,18,-18,18v-18,0,-25,-24,-10,-35\",\r\n                    \"w\": 161\r\n                },\r\n                \"\\u00ec\": {\r\n                    \"d\": \"57,-98v22,5,13,50,11,95v-7,1,-11,2,-20,-4v1,-7,-12,-18,-10,-24v4,-22,-2,-64,19,-67xm70,-139v14,10,54,14,37,41v-28,-7,-61,-22,-99,-42v-3,-2,-3,-25,5,-23v15,5,41,17,57,24\",\r\n                    \"w\": 109\r\n                },\r\n                \"\\u00ed\": {\r\n                    \"d\": \"59,-98v20,4,15,53,10,95v-6,1,-11,2,-19,-4v1,-7,-12,-18,-10,-24v4,-22,-4,-65,19,-67xm50,-139v27,-11,49,-32,59,-14v3,11,-80,53,-89,53v-14,1,-14,-12,-11,-22v15,-7,14,-6,41,-17\",\r\n                    \"w\": 105\r\n                },\r\n                \"\\u00ee\": {\r\n                    \"d\": \"72,-98v20,5,12,51,10,95v-6,2,-13,1,-20,-4v1,-8,-12,-18,-10,-24v4,-22,-3,-65,20,-67xm134,-94v-26,-7,-39,-25,-60,-37v-7,0,-9,4,-13,10v-14,15,-51,34,-56,-1v18,-4,45,-33,61,-43v27,6,40,22,62,37v12,8,18,17,18,25v0,6,-4,9,-12,9\",\r\n                    \"w\": 143\r\n                },\r\n                \"\\u00ef\": {\r\n                    \"d\": \"55,-97v19,5,15,53,10,95v-17,5,-26,-14,-30,-28v6,-20,-3,-65,20,-67xm110,-118v0,8,-4,13,-12,13v-17,0,-19,-19,-16,-34v18,-1,29,1,28,21xm14,-143v6,3,28,8,28,17v0,9,-9,18,-18,18v-18,0,-25,-24,-10,-35\",\r\n                    \"w\": 107\r\n                },\r\n                \"\\u00f1\": {\r\n                    \"d\": \"115,-129v34,6,59,50,59,105v0,31,-15,24,-30,17v-15,-29,-5,-42,-20,-81v-35,-13,-68,52,-88,61v-20,-4,-38,-36,-19,-59v0,-12,3,-14,10,-28v11,-8,18,11,27,12xm117,-166v22,-7,41,-23,64,-26v3,11,-7,10,-7,21v-26,20,-45,30,-58,30v-3,3,-49,-26,-49,-28v-10,-1,-32,35,-51,31v-5,-12,-8,-16,0,-23v4,-6,28,-29,48,-33v17,-3,43,28,53,28\",\r\n                    \"w\": 171\r\n                },\r\n                \"\\u00f2\": {\r\n                    \"d\": \"102,-132v50,-20,99,16,99,60v0,54,-60,64,-108,79v-50,-2,-110,-48,-76,-100v22,-17,49,-33,85,-39xm136,-104v-34,0,-91,27,-94,47v16,51,125,16,125,-22v0,-17,-10,-25,-31,-25xm115,-181v14,10,51,13,37,40v-28,-7,-62,-21,-100,-41v-3,-2,-3,-26,5,-23v16,5,42,17,58,24\",\r\n                    \"w\": 191\r\n                },\r\n                \"\\u00f3\": {\r\n                    \"d\": \"102,-132v50,-20,99,16,99,60v0,54,-60,64,-108,79v-50,-2,-110,-48,-76,-100v22,-17,49,-33,85,-39xm136,-104v-34,0,-91,27,-94,47v16,51,125,16,125,-22v0,-17,-10,-25,-31,-25xm49,-154v24,-3,85,-55,101,-32v3,11,-80,53,-89,53v-14,0,-13,-8,-12,-21\",\r\n                    \"w\": 191\r\n                },\r\n                \"\\u00f4\": {\r\n                    \"d\": \"102,-132v50,-20,99,16,99,60v0,54,-60,64,-108,79v-50,-2,-110,-48,-76,-100v22,-17,49,-33,85,-39xm136,-104v-34,0,-91,27,-94,47v16,51,125,16,125,-22v0,-17,-10,-25,-31,-25xm110,-177v-22,6,-38,45,-65,22v-2,-4,-3,-9,-4,-13v18,-4,43,-32,61,-43v27,6,40,21,62,36v12,9,18,17,18,25v1,11,-15,10,-23,7\",\r\n                    \"w\": 191\r\n                },\r\n                \"\\u00f5\": {\r\n                    \"d\": \"102,-132v50,-20,99,16,99,60v0,54,-60,64,-108,79v-50,-2,-110,-48,-76,-100v22,-17,49,-33,85,-39xm136,-104v-34,0,-91,27,-94,47v16,51,125,16,125,-22v0,-17,-10,-25,-31,-25xm58,-199v26,-21,54,18,69,22v4,0,15,-5,34,-13v22,-9,21,-16,31,-13v3,11,-9,9,-7,22v-26,20,-46,30,-59,30v-2,4,-49,-28,-49,-29v-11,0,-32,31,-46,32v-12,-3,-13,-21,-4,-23v4,-6,14,-15,31,-28\",\r\n                    \"w\": 191\r\n                },\r\n                \"\\u00f6\": {\r\n                    \"d\": \"102,-132v50,-20,99,16,99,60v0,54,-60,64,-108,79v-50,-2,-110,-48,-76,-100v22,-17,49,-33,85,-39xm136,-104v-34,0,-91,27,-94,47v16,51,125,16,125,-22v0,-17,-10,-25,-31,-25xm161,-160v0,8,-4,13,-12,13v-17,0,-19,-19,-16,-34v18,-1,29,1,28,21xm65,-185v7,3,28,9,28,18v0,7,-9,18,-18,17v-18,1,-25,-24,-10,-35\",\r\n                    \"w\": 191\r\n                },\r\n                \"\\u00f7\": {\r\n                    \"d\": \"167,-158v-4,3,-7,9,-10,20v-23,4,-34,-8,-29,-31v14,-6,18,1,39,11xm78,-72v-53,11,-53,12,-69,-15v-1,-12,11,-17,22,-14v71,-13,151,-18,230,-24v11,1,21,16,23,28v-28,20,-90,11,-126,16v-36,5,-62,5,-80,9xm123,-40v19,-17,41,-1,41,17v0,13,-6,19,-17,19v-15,0,-29,-14,-24,-36\",\r\n                    \"w\": 293\r\n                },\r\n                \"\\u00f8\": {\r\n                    \"d\": \"76,-136v17,7,33,-8,51,0v9,-6,21,-13,36,-21v23,22,-13,31,3,50v11,13,4,21,14,35v-4,5,-1,14,-4,23v-14,23,-45,41,-84,39v-12,2,-29,28,-41,38v-2,-11,-34,-10,-15,-30v3,-7,5,-11,5,-11v-15,-24,-60,-54,-22,-89v23,-21,25,-32,57,-34xm102,-54v18,1,50,-19,30,-32v-12,7,-22,18,-30,32xm85,-92v-14,3,-26,8,-38,17v2,20,17,13,26,0v6,-8,12,-13,12,-17\",\r\n                    \"w\": 188\r\n                },\r\n                \"\\u00f9\": {\r\n                    \"d\": \"196,-129v-1,-4,12,-13,15,-13v6,0,8,7,8,21v0,24,-7,25,-13,45v-7,7,-14,21,-24,29v-9,24,-61,45,-89,45v-63,0,-105,-72,-67,-126v24,-3,19,27,18,46v-1,26,23,42,54,40v38,-3,88,-51,98,-87xm126,-166v7,6,56,14,37,40v-28,-7,-62,-22,-100,-42v-2,-3,-2,-26,5,-23v16,4,42,18,58,25\",\r\n                    \"w\": 213\r\n                },\r\n                \"\\u00fa\": {\r\n                    \"d\": \"196,-129v-1,-4,12,-13,15,-13v6,0,8,7,8,21v0,24,-7,25,-13,45v-7,7,-14,21,-24,29v-9,24,-61,45,-89,45v-63,0,-105,-72,-67,-126v24,-3,19,27,18,46v-1,26,23,42,54,40v38,-3,88,-51,98,-87xm106,-174v26,-11,48,-32,59,-14v3,11,-81,53,-89,54v-13,1,-15,-12,-11,-22v15,-7,14,-7,41,-18\",\r\n                    \"w\": 213\r\n                },\r\n                \"\\u00fb\": {\r\n                    \"d\": \"196,-129v-1,-4,12,-13,15,-13v6,0,8,7,8,21v0,24,-7,25,-13,45v-7,7,-14,21,-24,29v-9,24,-61,45,-89,45v-63,0,-105,-72,-67,-126v24,-3,19,27,18,46v-1,26,23,42,54,40v38,-3,88,-51,98,-87xm172,-143v-27,-6,-39,-26,-60,-37v-8,0,-10,4,-14,10v-11,15,-49,35,-56,0v17,-4,44,-32,61,-43v27,6,41,21,63,36v12,9,17,17,17,25v0,6,-3,9,-11,9\",\r\n                    \"w\": 213\r\n                },\r\n                \"\\u00fc\": {\r\n                    \"d\": \"196,-129v-1,-4,12,-13,15,-13v6,0,8,7,8,21v0,24,-7,25,-13,45v-7,7,-14,21,-24,29v-9,24,-61,45,-89,45v-63,0,-105,-72,-67,-126v24,-3,19,27,18,46v-1,26,23,42,54,40v38,-3,88,-51,98,-87xm168,-161v0,8,-3,13,-11,13v-17,0,-20,-19,-17,-34v18,-1,29,1,28,21xm72,-186v7,3,29,9,28,18v0,7,-9,18,-18,17v-18,1,-25,-24,-10,-35\",\r\n                    \"w\": 213\r\n                },\r\n                \"\\u00ff\": {\r\n                    \"d\": \"118,85v-11,11,-11,38,-22,61v-2,-1,-2,31,-17,27v-11,0,-21,-10,-21,-22v20,-66,23,-61,64,-168v-22,1,-38,16,-58,4v-22,4,-51,-16,-51,-42v-11,-13,-7,-59,7,-58v16,1,21,24,22,51v21,33,66,5,94,-7v4,-3,26,-14,38,-29r17,0v23,44,-23,59,-34,102v-6,9,-13,9,-13,26v-15,6,-12,33,-27,48v0,2,1,4,1,7xm158,-136v0,8,-4,13,-12,13v-18,0,-21,-20,-16,-34v18,-1,29,1,28,21xm62,-161v7,3,28,9,27,18v1,8,-8,17,-17,17v-18,0,-26,-24,-10,-35\",\r\n                    \"w\": 190\r\n                },\r\n                \"\\u0131\": {\r\n                    \"d\": \"43,-103v21,4,16,56,11,100v-7,2,-11,1,-20,-5v0,-7,-13,-18,-11,-25v4,-23,-3,-68,20,-70\",\r\n                    \"w\": 80\r\n                },\r\n                \"\\u0152\": {\r\n                    \"d\": \"247,-243v71,4,161,-7,245,-8v17,0,27,6,27,17v-8,27,-70,14,-104,23v-3,1,-52,0,-65,7r0,4v16,16,17,29,17,65v32,10,74,-14,99,16v-14,25,-76,17,-127,24v-17,18,-55,32,-75,51v85,0,128,-3,204,-11v15,-2,21,11,20,29v-78,24,-177,12,-270,24v-24,3,-24,-29,-48,-15v-46,7,-70,4,-105,-4v-19,-18,-42,-22,-52,-55v-10,-34,0,-47,12,-78v-18,-59,48,-78,105,-84v17,-18,103,-13,117,-5xm125,-45v76,-9,186,-43,209,-105v-26,-67,-137,-83,-217,-54v3,34,-45,25,-60,58v-41,48,5,108,68,101\",\r\n                    \"w\": 492\r\n                },\r\n                \"\\u0153\": {\r\n                    \"d\": \"185,-54v25,28,107,-17,104,33v-12,12,-60,14,-87,14v0,0,1,1,2,1v-11,1,-39,-9,-50,-17v-28,17,-75,32,-114,7v-22,-14,-34,-11,-34,-41v0,-36,33,-49,48,-75v29,-16,72,-3,95,11v12,-9,48,-27,59,-26v30,0,64,15,65,40v0,7,-6,20,-20,37v-29,1,-44,11,-68,16xm226,-106v-21,-7,-41,-2,-48,13v14,1,42,-7,48,-13xm132,-87v-21,-35,-94,11,-92,24v-2,14,43,21,61,21v25,0,36,-20,31,-45\",\r\n                    \"w\": 295\r\n                },\r\n                \"\\u0178\": {\r\n                    \"d\": \"176,-189v35,20,-25,54,-39,72v-26,34,-57,57,-74,104v-10,15,-4,14,-23,3r0,-10v19,-44,27,-46,50,-81v-9,-5,-24,4,-34,4v-38,0,-54,-50,-44,-87v21,-5,18,19,22,35v4,18,15,27,29,27v41,0,60,-39,113,-67xm153,-222v0,8,-3,12,-11,12v-18,0,-21,-19,-16,-33v18,-1,28,2,27,21xm57,-247v8,2,29,9,28,17v0,21,-37,24,-36,1v0,-7,2,-13,8,-18\",\r\n                    \"w\": 135\r\n                },\r\n                \"\\u0192\": {\r\n                    \"d\": \"115,-262v-23,6,-39,63,-38,96v1,3,57,2,54,16v1,22,-45,15,-51,30v3,34,12,68,10,103v14,17,-18,53,-28,63v-48,8,-89,5,-95,-37v20,-5,77,21,83,-18v17,-29,-4,-61,0,-98v0,-5,-3,-10,-7,-17v-33,4,-43,-17,-25,-37v10,-4,27,5,27,-10v0,-43,15,-77,32,-109v12,-7,16,-22,38,-20v11,1,51,35,25,55v-9,1,-16,-17,-25,-17\",\r\n                    \"w\": 145\r\n                },\r\n                \"\\u02c6\": {\r\n                    \"d\": \"144,-220v-29,0,-41,-27,-63,-39v-8,0,-11,5,-15,11v-17,12,-32,31,-54,13v-2,-5,-3,-9,-4,-14v20,-5,45,-33,64,-45v28,6,43,23,65,38v12,9,19,19,19,27v0,6,-4,9,-12,9\",\r\n                    \"w\": 165\r\n                },\r\n                \"\\u02c7\": {\r\n                    \"d\": \"39,-286v33,46,63,-4,96,-16v6,0,9,6,9,19v0,24,-49,46,-77,46v-32,0,-52,-28,-59,-48v0,-25,23,-17,31,-1\",\r\n                    \"w\": 153\r\n                },\r\n                \"\\u02d8\": {\r\n                    \"d\": \"65,-269v20,-11,45,-31,74,-36v20,30,-42,40,-59,66v-5,6,-11,8,-18,8v-8,-3,-45,-32,-51,-54v5,-24,14,-13,34,1\",\r\n                    \"w\": 158\r\n                },\r\n                \"\\u02d9\": {\r\n                    \"d\": \"23,-302v15,-13,32,1,32,18v1,22,-36,29,-39,4v0,0,3,-7,7,-22\",\r\n                    \"w\": 70\r\n                },\r\n                \"\\u02da\": {\r\n                    \"d\": \"23,-225v-43,-24,-11,-85,41,-78v16,2,31,4,46,17v32,54,-41,86,-87,61xm33,-257v2,20,57,11,57,-6v0,-6,-11,-9,-33,-12v-14,-2,-24,13,-24,18\",\r\n                    \"w\": 123\r\n                },\r\n                \"\\u02db\": {\r\n                    \"d\": \"82,-5v-8,12,-16,55,-21,75v0,4,2,7,7,7v6,0,22,-7,50,-20v8,0,12,7,12,20v-2,22,-6,14,-27,30v-15,12,-26,16,-30,16v-47,-8,-59,-14,-56,-75v8,-27,12,-54,25,-77v19,-21,35,15,40,24\",\r\n                    \"w\": 138\r\n                },\r\n                \"\\u02dc\": {\r\n                    \"d\": \"47,-300v26,-21,57,19,72,23v4,0,16,-5,36,-14v24,-10,22,-16,32,-13v3,12,-7,11,-7,23v-27,21,-48,32,-62,32v-3,2,-52,-27,-51,-31v-12,-2,-34,40,-54,33v-4,-13,-8,-18,1,-24v5,-7,16,-15,33,-29\",\r\n                    \"w\": 186\r\n                },\r\n                \"\\u02dd\": {\r\n                    \"d\": \"91,-249v15,-11,38,-53,57,-29v0,9,0,14,-3,23v-2,3,-20,22,-54,55v-5,5,-10,8,-16,8v-17,2,-6,-22,-7,-31v-1,0,-2,0,-4,1v-17,21,-29,31,-50,27v-5,-18,-3,-15,3,-27v23,-27,40,-46,48,-59v7,-12,31,3,29,9v-1,14,-3,24,-13,31v4,4,9,-1,10,-8\",\r\n                    \"w\": 151\r\n                },\r\n                \"\\u2013\": {\r\n                    \"d\": \"6,-66v-8,-72,79,-21,146,-39v37,-10,79,7,111,0v9,8,14,13,14,17v2,26,-72,13,-99,21v-83,4,-124,21,-172,1\",\r\n                    \"w\": 282\r\n                },\r\n                \"\\u2014\": {\r\n                    \"d\": \"175,-106v86,-9,201,1,286,-1v11,6,13,11,6,30v-118,15,-246,10,-377,10v-25,0,-73,3,-82,-8r-2,-26v11,-13,32,-9,52,-7v38,3,84,-5,117,2\",\r\n                    \"w\": 485\r\n                },\r\n                \"\\u2018\": {\r\n                    \"d\": \"73,-262v-10,7,-41,39,-38,69v-15,13,-27,-16,-28,-28v-2,-20,51,-83,66,-83v20,0,25,41,0,42\",\r\n                    \"w\": 95\r\n                },\r\n                \"\\u2019\": {\r\n                    \"d\": \"74,-300v13,31,-1,99,-44,101v-13,0,-19,-5,-19,-15v6,-10,31,-34,35,-59v2,-11,1,-32,11,-32v6,0,11,2,17,5\",\r\n                    \"w\": 90\r\n                },\r\n                \"\\u201a\": {\r\n                    \"d\": \"25,63v-26,21,-48,-2,-22,-24v14,-12,35,-40,35,-69v3,-2,3,-11,12,-9v35,17,5,88,-25,102\",\r\n                    \"w\": 97\r\n                },\r\n                \"\\u201c\": {\r\n                    \"d\": \"66,-261v-21,5,-37,51,-22,77v0,4,-2,6,-7,6v-31,-9,-38,-62,-12,-94v12,-15,21,-28,31,-34v16,-1,19,24,22,34v10,-11,22,-32,43,-23v-2,8,4,16,5,19v-6,11,-51,53,-29,74v-12,21,-30,5,-33,-17v-6,-13,9,-28,2,-42\",\r\n                    \"w\": 118\r\n                },\r\n                \"\\u201d\": {\r\n                    \"d\": \"120,-294v12,3,30,26,19,34v2,15,-40,70,-55,66v-40,-10,10,-51,14,-64v3,-3,8,-31,22,-36xm70,-306v14,3,26,34,16,49v-19,30,-31,45,-58,59v-12,-11,-33,-17,-7,-36v13,-19,36,-27,36,-59v0,-5,9,-13,13,-13\",\r\n                    \"w\": 148\r\n                },\r\n                \"\\u201e\": {\r\n                    \"d\": \"25,63v-26,21,-48,-2,-22,-24v11,-9,36,-41,35,-69v3,-2,4,-12,12,-9v36,14,5,89,-25,102xm84,64v-24,20,-45,-1,-21,-24v21,-20,32,-35,35,-69v3,-2,3,-11,12,-9v36,17,9,86,-26,102\",\r\n                    \"w\": 135\r\n                },\r\n                \"\\u2020\": {\r\n                    \"d\": \"22,-286v15,6,5,-20,19,-19v9,-3,15,21,17,22v6,1,12,3,20,6v3,10,5,16,-9,16v-34,-10,-6,51,-34,52v-20,-7,11,-47,-15,-49v-14,3,-25,-5,-17,-24v7,-2,14,-4,19,-4\",\r\n                    \"w\": 77\r\n                },\r\n                \"\\u2021\": {\r\n                    \"d\": \"102,-284v16,2,42,-2,33,18v-7,15,-42,1,-38,30v3,3,31,1,30,11v4,15,-29,19,-36,24v-2,18,-4,24,-16,29r-25,-26v-25,7,-53,3,-42,-25v4,-10,70,0,51,-22v-17,4,-41,12,-39,-15v-5,-16,39,-18,44,-20v4,-2,7,-10,10,-24v19,-3,23,6,28,20\",\r\n                    \"w\": 145\r\n                },\r\n                \"\\u2022\": {\r\n                    \"d\": \"130,-114v0,47,-124,54,-120,-8r6,-31v44,-28,64,-34,104,0v8,6,10,20,10,39\",\r\n                    \"w\": 139\r\n                },\r\n                \"\\u2026\": {\r\n                    \"d\": \"244,-24v-1,21,-38,32,-41,3v-2,-19,23,-22,34,-17v0,7,0,15,7,14xm113,-24v0,-22,28,-21,38,-8v5,34,-39,40,-38,8xm35,-2v-10,-2,-36,-17,-18,-29v-1,-15,17,-17,31,-6v7,17,6,33,-13,35\",\r\n                    \"w\": 258\r\n                },\r\n                \"\\u2030\": {\r\n                    \"d\": \"398,-131v58,-1,87,13,72,65v-1,30,-66,63,-99,65v-56,3,-99,-58,-62,-102v2,2,5,2,8,2v20,-16,51,-17,81,-30xm202,-279v33,0,94,-24,95,18v-7,31,-33,27,-54,55v-36,32,-71,74,-112,99v-18,18,-40,34,-51,58v-19,14,-25,37,-56,40v-17,2,-25,-29,-10,-40v15,-11,40,-37,52,-52r87,-72v-51,13,-100,6,-116,-27v1,-5,-6,-30,-9,-36v-3,-5,22,-41,27,-39v29,2,16,34,5,49v0,15,14,23,42,23v42,0,59,-31,28,-38v-17,-4,-53,3,-50,-23v0,-7,1,-12,4,-16v16,-9,36,4,49,5v0,0,23,-4,69,-4xm222,-118v33,-2,55,18,50,57v-29,36,-48,45,-96,50v-27,-5,-56,-17,-58,-51v13,-37,64,-43,104,-56xm335,-61v13,44,101,7,108,-31v-11,-3,-20,-4,-30,-4v-18,-1,-82,18,-78,35xm225,-244v-18,0,-29,-1,-46,3v7,15,6,28,0,43v15,-14,34,-30,46,-46xm164,-53v26,5,59,-10,76,-26v-17,-16,-49,2,-67,14v1,8,-8,6,-9,12\",\r\n                    \"w\": 485\r\n                },\r\n                \"\\u2039\": {\r\n                    \"d\": \"64,-107v9,17,86,17,87,43v0,11,-4,16,-13,16v-36,-11,-70,-22,-109,-31v-19,-4,-18,-14,-9,-36v59,-56,93,-84,101,-84v17,0,19,20,13,29\",\r\n                    \"w\": 159\r\n                },\r\n                \"\\u203a\": {\r\n                    \"d\": \"41,-181v26,27,112,44,70,91r-82,60v-20,3,-25,-23,-13,-32r70,-51r-66,-46v-5,-6,-4,-28,5,-29v4,2,9,4,16,7\",\r\n                    \"w\": 137\r\n                },\r\n                \"\\u2044\": {\r\n                    \"d\": \"193,-305v7,6,17,31,3,41v-10,7,-12,13,-21,25v-79,56,-190,209,-197,260r-18,0v-23,-19,9,-70,15,-85v52,-83,121,-179,218,-241\",\r\n                    \"w\": 120\r\n                },\r\n                \"\\u2122\": {\r\n                    \"d\": \"213,-307v28,9,11,49,7,75v-1,4,-4,6,-11,6v-7,1,-11,-14,-11,-34v-14,-6,-34,34,-46,28v-2,0,-10,-9,-24,-27v-10,7,-3,36,-27,31v-15,-24,-3,-27,1,-48v-6,-7,-27,-1,-31,3v-3,14,-7,30,-11,51v-5,10,-29,9,-24,-12v-5,-8,1,-18,3,-35v-13,6,-33,2,-29,-18v20,-17,64,-17,100,-19v28,-1,29,30,45,39v11,-6,35,-32,58,-40\",\r\n                    \"w\": 239\r\n                },\r\n                \"\\u2206\": {\r\n                    \"d\": \"18,-1v-24,-30,8,-48,25,-71v14,-19,34,-28,40,-56v20,-35,29,-14,57,4v9,39,43,62,57,102v0,16,-34,17,-50,14v-28,2,-72,4,-129,7xm139,-47r-22,-52v-12,-5,-12,15,-24,27v-7,6,-14,16,-23,28v23,1,36,-1,69,-3\",\r\n                    \"w\": 199\r\n                },\r\n                \"\\u2219\": {\r\n                    \"d\": \"57,-77v6,18,-7,21,-19,23v-34,6,-25,-40,-9,-43v18,-3,29,8,28,20\",\r\n                    \"w\": 67\r\n                },\r\n                \"\\u221a\": {\r\n                    \"d\": \"364,-218v43,-21,80,-51,104,-32v-3,19,-24,21,-44,40v-41,15,-78,53,-136,78r-137,98v-20,16,-79,66,-91,68v-3,1,-25,-11,-24,-13v-4,-28,-43,-61,-30,-85v26,-15,42,19,58,32r295,-188v0,1,2,2,5,2\",\r\n                    \"w\": 474\r\n                },\r\n                \"\\u221e\": {\r\n                    \"d\": \"322,-72v-4,22,-54,41,-76,41v-43,0,-83,-17,-114,-35v-46,19,-125,53,-128,-18v-1,-14,10,-22,13,-35v29,-10,62,-31,97,-4v37,28,47,5,75,-8v40,-19,73,-10,114,1v13,1,18,55,19,58xm228,-69v15,0,62,-12,61,-25v-19,-23,-89,-10,-105,11v0,2,1,4,2,4v28,6,42,10,42,10xm75,-102v-13,2,-41,4,-44,19v0,4,3,7,10,7v21,0,40,-6,54,-17v-9,-6,-16,-9,-20,-9\",\r\n                    \"w\": 330\r\n                },\r\n                \"\\u222b\": {\r\n                    \"d\": \"62,-151v-7,-70,20,-130,63,-150v28,1,39,10,70,23v20,8,6,33,-6,35v-29,-13,-45,-20,-49,-20v-20,-4,-45,51,-43,70v8,60,5,129,5,189v0,62,-27,93,-79,93v-37,-1,-71,-14,-63,-57v21,0,79,34,91,-2v16,-3,14,-64,21,-85v-2,-31,-1,-74,-10,-96\",\r\n                    \"w\": 156\r\n                },\r\n                \"\\u2248\": {\r\n                    \"d\": \"133,-112v21,15,48,-30,78,-17v3,3,5,7,5,9v-8,30,-47,45,-76,45v-19,0,-64,-48,-90,-21r-29,20v-6,-1,-17,-16,-15,-32v24,-17,70,-42,107,-21v4,4,10,9,20,17xm138,-57v28,2,48,-25,76,-26v13,30,-21,42,-40,53v-41,24,-77,-15,-114,-23v-15,14,-46,32,-49,-1v-3,-9,27,-28,54,-30\",\r\n                    \"w\": 223\r\n                },\r\n                \"\\u2260\": {\r\n                    \"d\": \"48,-130v29,11,49,-57,60,-50v25,6,7,27,-1,46v22,5,29,7,21,22v-18,2,-48,-1,-50,15v9,8,53,-7,54,10v-4,22,-46,20,-72,24v-7,13,-18,32,-34,57v-8,6,-15,-3,-13,-14v-1,-9,15,-39,14,-45v-30,5,-24,-17,-13,-25v12,-1,36,4,29,-13v-14,0,-47,6,-36,-12v0,-18,27,-13,41,-15\",\r\n                    \"w\": 140\r\n                },\r\n                \"\\u2264\": {\r\n                    \"d\": \"73,-109v10,15,87,16,87,42v0,11,-5,16,-13,16v-36,-11,-69,-24,-109,-31v-18,-8,-18,-13,-9,-36v59,-56,93,-83,101,-83v16,0,18,17,14,28v-27,24,-42,35,-71,64xm10,-29v35,-12,117,-26,148,-3v1,2,-5,19,-8,18r-124,15v-16,2,-26,-18,-16,-30\",\r\n                    \"w\": 168\r\n                },\r\n                \"\\u2265\": {\r\n                    \"d\": \"115,-174v20,7,53,36,20,57v-19,11,-91,68,-82,59v-18,3,-25,-22,-13,-31v15,-10,14,-10,70,-51r-50,-37v-5,-4,-5,-27,4,-28v16,7,40,17,51,31xm14,-32v33,-10,86,-14,127,-10v12,12,5,23,-11,27v-49,9,-82,13,-99,13v-22,0,-24,-16,-17,-30\",\r\n                    \"w\": 163\r\n                },\r\n                \"\\u25ca\": {\r\n                    \"d\": \"76,-158v48,-8,64,11,100,36v28,19,-5,39,-22,54v-15,13,-40,32,-48,49v-17,5,-12,0,-27,-16v-6,-6,-86,-31,-68,-53r2,-9v27,-23,48,-44,63,-61xm93,-65v12,-2,35,-31,41,-38v-5,-10,-16,-14,-34,-24v-12,12,-36,29,-40,44v19,11,30,18,33,18\",\r\n                    \"w\": 199\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /** js sequence diagrams\r\n     *  https://bramp.github.io/js-sequence-diagrams/\r\n     *  (c) 2012-2017 Andrew Brampton (bramp.net)\r\n     *  Simplified BSD license.\r\n     */\r\n    /*global Diagram, _ */\r\n\r\n    if (typeof Raphael == 'undefined' && typeof Snap == 'undefined') {\r\n        throw new Error('Raphael or Snap.svg is required to be included.');\r\n    }\r\n\r\n    if (_.isEmpty(Diagram.themes)) {\r\n        // If you are using stock js-sequence-diagrams you should never see this. This only\r\n        // happens if you have removed the built in themes.\r\n        throw new Error('No themes were registered. Please call registerTheme(...).');\r\n    }\r\n\r\n// Set the default hand/simple based on which theme is available.\r\n    Diagram.themes.hand = Diagram.themes.snapHand || Diagram.themes.raphaelHand;\r\n    Diagram.themes.simple = Diagram.themes.snapSimple || Diagram.themes.raphaelSimple;\r\n\r\n    /* Draws the diagram. Creates a SVG inside the container\r\n     * container (HTMLElement|string) DOM element or its ID to draw on\r\n     * options (Object)\r\n     */\r\n    Diagram.prototype.drawSVG = function(container, options) {\r\n        var defaultOptions = {\r\n            theme: 'hand'\r\n        };\r\n\r\n        options = _.defaults(options || {}, defaultOptions);\r\n\r\n        if (!(options.theme in Diagram.themes)) {\r\n            throw new Error('Unsupported theme: ' + options.theme);\r\n        }\r\n\r\n        // TODO Write tests for this check\r\n        var div = _.isString(container) ? document.getElementById(container) : container;\r\n        if (div === null || !div.tagName) {\r\n            throw new Error('Invalid container: ' + container);\r\n        }\r\n\r\n        var Theme = Diagram.themes[options.theme];\r\n        new Theme(this, options, function(drawing) {\r\n            drawing.draw(div);\r\n        });\r\n    }; // end of drawSVG\r\n    /** js sequence diagrams\r\n     *  https://bramp.github.io/js-sequence-diagrams/\r\n     *  (c) 2012-2017 Andrew Brampton (bramp.net)\r\n     *  Simplified BSD license.\r\n     */\r\n    /*global jQuery */\r\n    if (typeof jQuery != 'undefined') {\r\n        (function($) {\r\n            $.fn.sequenceDiagram = function(options) {\r\n                return this.each(function() {\r\n                    var $this = $(this);\r\n                    var diagram = Diagram.parse($this.text());\r\n                    $this.html('');\r\n                    diagram.drawSVG(this, options);\r\n                });\r\n            };\r\n        })(jQuery);\r\n    }\r\n\r\n// Taken from underscore.js:\r\n// Establish the root object, `window` (`self`) in the browser, or `global` on the server.\r\n// We use `self` instead of `window` for `WebWorker` support.\r\n    var root = (typeof self == 'object' && self.self == self && self) ||\r\n        (typeof global == 'object' && global.global == global && global);\r\n\r\n// Export the Diagram object for **Node.js**, with\r\n// backwards-compatibility for their old module API. If we're in\r\n// the browser, add `Diagram` as a global object.\r\n    if (typeof exports !== 'undefined') {\r\n        if (typeof module !== 'undefined' && module.exports) {\r\n            exports = module.exports = Diagram;\r\n        }\r\n        exports.Diagram = Diagram;\r\n    } else {\r\n        root.Diagram = Diagram;\r\n    }\r\n}());\r\n"],"names":["sequence","Sequence","props","value","container","useRef","useEffect","current","innerHTML","parse","drawSVG","theme","e","console","error","Container","ref","styled","Diagram","this","title","undefined","actors","signals","prototype","getActor","alias","name","i","trim","push","Actor","length","getActorWithAlias","input","s","exec","setTitle","addSignal","signal","index","Signal","actorA","signaltype","actorB","message","type","linetype","arrowtype","isSelf","Note","actor","placement","hasManyActors","Error","_","isArray","unescape","replace","LINETYPE","SOLID","DOTTED","ARROWTYPE","FILLED","OPEN","PLACEMENT","LEFTOF","RIGHTOF","OVER","Object","getPrototypeOf","__proto__","object","constructor","parser","Parser","yy","o","k","v","l","$V0","$V1","$V2","$V3","trace","symbols_","start","document","EOF","line","statement","NL","participant","actor_alias","note_statement","note","over","actor_pair","left_of","right_of","ACTOR","LINE","DOTLINE","ARROW","OPENARROW","MESSAGE","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","substring","table","defaultActions","parseError","str","hash","recoverable","lex","token","lexer","self","stack","vstack","lstack","recovering","TERROR","args","slice","call","arguments","create","sharedState","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","yyval","errStr","showPosition","join","text","match","loc","Array","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","pop","conditions","INITIAL","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","inclusive","ParseError","extend","diagram","ACTOR_MARGIN","SELF_SIGNAL_WIDTH","AssertException","assert","exp","registerTheme","themes","getCenterX","box","x","width","clamp","min","max","wobble","x1","y1","x2","y2","all","isFinite","factor","sqrt","r1","random","r2","xfactor","yfactor","p1","y","p2","toFixed","handRect","w","h","handLine","toString","String","BaseTheme","init","actorsHeight_","signalsHeight_","title_","setupPaper","draw","layout","height","drawTitle","drawActors","drawSignals","font","font_","bb","textBBox","textBB","actorEnsureDistance","a","b","d","paddingRight","distances","each","extraWidth","actorsX","distance","drawTextBox","offsetY","drawActor","aX","drawLine","drawSelfSignal","drawSignal","drawNote","drawText","bX","NOTE_OVERLAP","margin","padding","align","drawRect","getCenterY","Snap","xmlns","RECT","LOADED_FONTS","SnapTheme","resume","defaults","paper_","cssClass_","arrowTypes_","lineTypes_","that","waitForFont","callback","fontFamily","WebFont","load","custom","families","classes","active","inactive","addDescription","svg","description","desc","createElementNS","appendChild","createTextNode","addClass","beginGroup","arrowMarkers_","arrow","path","marker","attr","id","markerWidth","t","createText","getBBox","remove","pushToStack","element","_stack","finishGroup","g","group","invoke","selectAll","dy","arrowhead","rect","SnapHandTheme","Raphael","fn","RaphaelTheme","setStart","setFinish","setSize","cleanText","obj_","print","paper","RaphaelHandTheme","getFont","registerFont","isEmpty","hand","snapHand","raphaelHand","simple","snapSimple","raphaelSimple","div","isString","getElementById","tagName","Theme","drawing","jQuery","sequenceDiagram","$this","html","global","module","exports"],"sourceRoot":""}